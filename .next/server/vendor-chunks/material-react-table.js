"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/material-react-table";
exports.ids = ["vendor-chunks/material-react-table"];
exports.modules = {

/***/ "(ssr)/./node_modules/material-react-table/dist/index.esm.js":
/*!*************************************************************!*\
  !*** ./node_modules/material-react-table/dist/index.esm.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MRT_ActionMenuItem: () => (/* binding */ MRT_ActionMenuItem),\n/* harmony export */   MRT_AggregationFns: () => (/* binding */ MRT_AggregationFns),\n/* harmony export */   MRT_BottomToolbar: () => (/* binding */ MRT_BottomToolbar),\n/* harmony export */   MRT_ColumnActionMenu: () => (/* binding */ MRT_ColumnActionMenu),\n/* harmony export */   MRT_ColumnPinningButtons: () => (/* binding */ MRT_ColumnPinningButtons),\n/* harmony export */   MRT_CopyButton: () => (/* binding */ MRT_CopyButton),\n/* harmony export */   MRT_DefaultColumn: () => (/* binding */ MRT_DefaultColumn),\n/* harmony export */   MRT_DefaultDisplayColumn: () => (/* binding */ MRT_DefaultDisplayColumn),\n/* harmony export */   MRT_EditActionButtons: () => (/* binding */ MRT_EditActionButtons),\n/* harmony export */   MRT_EditCellTextField: () => (/* binding */ MRT_EditCellTextField),\n/* harmony export */   MRT_EditRowModal: () => (/* binding */ MRT_EditRowModal),\n/* harmony export */   MRT_ExpandAllButton: () => (/* binding */ MRT_ExpandAllButton),\n/* harmony export */   MRT_ExpandButton: () => (/* binding */ MRT_ExpandButton),\n/* harmony export */   MRT_FilterCheckbox: () => (/* binding */ MRT_FilterCheckbox),\n/* harmony export */   MRT_FilterFns: () => (/* binding */ MRT_FilterFns),\n/* harmony export */   MRT_FilterOptionMenu: () => (/* binding */ MRT_FilterOptionMenu),\n/* harmony export */   MRT_FilterRangeFields: () => (/* binding */ MRT_FilterRangeFields),\n/* harmony export */   MRT_FilterRangeSlider: () => (/* binding */ MRT_FilterRangeSlider),\n/* harmony export */   MRT_FilterTextField: () => (/* binding */ MRT_FilterTextField),\n/* harmony export */   MRT_GlobalFilterTextField: () => (/* binding */ MRT_GlobalFilterTextField),\n/* harmony export */   MRT_GrabHandleButton: () => (/* binding */ MRT_GrabHandleButton),\n/* harmony export */   MRT_LinearProgressBar: () => (/* binding */ MRT_LinearProgressBar),\n/* harmony export */   MRT_RowActionMenu: () => (/* binding */ MRT_RowActionMenu),\n/* harmony export */   MRT_RowPinButton: () => (/* binding */ MRT_RowPinButton),\n/* harmony export */   MRT_SelectCheckbox: () => (/* binding */ MRT_SelectCheckbox),\n/* harmony export */   MRT_ShowHideColumnsButton: () => (/* binding */ MRT_ShowHideColumnsButton),\n/* harmony export */   MRT_ShowHideColumnsMenu: () => (/* binding */ MRT_ShowHideColumnsMenu),\n/* harmony export */   MRT_ShowHideColumnsMenuItems: () => (/* binding */ MRT_ShowHideColumnsMenuItems),\n/* harmony export */   MRT_SortingFns: () => (/* binding */ MRT_SortingFns),\n/* harmony export */   MRT_Table: () => (/* binding */ MRT_Table),\n/* harmony export */   MRT_TableBody: () => (/* binding */ MRT_TableBody),\n/* harmony export */   MRT_TableBodyCell: () => (/* binding */ MRT_TableBodyCell),\n/* harmony export */   MRT_TableBodyCellValue: () => (/* binding */ MRT_TableBodyCellValue),\n/* harmony export */   MRT_TableBodyRow: () => (/* binding */ MRT_TableBodyRow),\n/* harmony export */   MRT_TableBodyRowGrabHandle: () => (/* binding */ MRT_TableBodyRowGrabHandle),\n/* harmony export */   MRT_TableBodyRowPinButton: () => (/* binding */ MRT_TableBodyRowPinButton),\n/* harmony export */   MRT_TableContainer: () => (/* binding */ MRT_TableContainer),\n/* harmony export */   MRT_TableDetailPanel: () => (/* binding */ MRT_TableDetailPanel),\n/* harmony export */   MRT_TableFooter: () => (/* binding */ MRT_TableFooter),\n/* harmony export */   MRT_TableFooterCell: () => (/* binding */ MRT_TableFooterCell),\n/* harmony export */   MRT_TableFooterRow: () => (/* binding */ MRT_TableFooterRow),\n/* harmony export */   MRT_TableHead: () => (/* binding */ MRT_TableHead),\n/* harmony export */   MRT_TableHeadCell: () => (/* binding */ MRT_TableHeadCell),\n/* harmony export */   MRT_TableHeadCellColumnActionsButton: () => (/* binding */ MRT_TableHeadCellColumnActionsButton),\n/* harmony export */   MRT_TableHeadCellFilterContainer: () => (/* binding */ MRT_TableHeadCellFilterContainer),\n/* harmony export */   MRT_TableHeadCellFilterLabel: () => (/* binding */ MRT_TableHeadCellFilterLabel),\n/* harmony export */   MRT_TableHeadCellGrabHandle: () => (/* binding */ MRT_TableHeadCellGrabHandle),\n/* harmony export */   MRT_TableHeadCellResizeHandle: () => (/* binding */ MRT_TableHeadCellResizeHandle),\n/* harmony export */   MRT_TableHeadCellSortLabel: () => (/* binding */ MRT_TableHeadCellSortLabel),\n/* harmony export */   MRT_TableHeadRow: () => (/* binding */ MRT_TableHeadRow),\n/* harmony export */   MRT_TableLoadingOverlay: () => (/* binding */ MRT_TableLoadingOverlay),\n/* harmony export */   MRT_TablePagination: () => (/* binding */ MRT_TablePagination),\n/* harmony export */   MRT_TablePaper: () => (/* binding */ MRT_TablePaper),\n/* harmony export */   MRT_ToggleDensePaddingButton: () => (/* binding */ MRT_ToggleDensePaddingButton),\n/* harmony export */   MRT_ToggleFiltersButton: () => (/* binding */ MRT_ToggleFiltersButton),\n/* harmony export */   MRT_ToggleFullScreenButton: () => (/* binding */ MRT_ToggleFullScreenButton),\n/* harmony export */   MRT_ToggleGlobalFilterButton: () => (/* binding */ MRT_ToggleGlobalFilterButton),\n/* harmony export */   MRT_ToggleRowActionMenuButton: () => (/* binding */ MRT_ToggleRowActionMenuButton),\n/* harmony export */   MRT_ToolbarAlertBanner: () => (/* binding */ MRT_ToolbarAlertBanner),\n/* harmony export */   MRT_ToolbarDropZone: () => (/* binding */ MRT_ToolbarDropZone),\n/* harmony export */   MRT_ToolbarInternalButtons: () => (/* binding */ MRT_ToolbarInternalButtons),\n/* harmony export */   MRT_TopToolbar: () => (/* binding */ MRT_TopToolbar),\n/* harmony export */   MaterialReactTable: () => (/* binding */ MaterialReactTable),\n/* harmony export */   Memo_MRT_TableBody: () => (/* binding */ Memo_MRT_TableBody),\n/* harmony export */   Memo_MRT_TableBodyCell: () => (/* binding */ Memo_MRT_TableBodyCell),\n/* harmony export */   Memo_MRT_TableBodyRow: () => (/* binding */ Memo_MRT_TableBodyRow),\n/* harmony export */   createMRTColumnHelper: () => (/* binding */ createMRTColumnHelper),\n/* harmony export */   createRow: () => (/* binding */ createRow),\n/* harmony export */   defaultDisplayColumnProps: () => (/* binding */ defaultDisplayColumnProps),\n/* harmony export */   flexRender: () => (/* binding */ flexRender),\n/* harmony export */   getAllLeafColumnDefs: () => (/* binding */ getAllLeafColumnDefs),\n/* harmony export */   getCanRankRows: () => (/* binding */ getCanRankRows),\n/* harmony export */   getColumnFilterInfo: () => (/* binding */ getColumnFilterInfo),\n/* harmony export */   getColumnId: () => (/* binding */ getColumnId),\n/* harmony export */   getDefaultColumnFilterFn: () => (/* binding */ getDefaultColumnFilterFn),\n/* harmony export */   getDefaultColumnOrderIds: () => (/* binding */ getDefaultColumnOrderIds),\n/* harmony export */   getIsRankingRows: () => (/* binding */ getIsRankingRows),\n/* harmony export */   getIsRowSelected: () => (/* binding */ getIsRowSelected),\n/* harmony export */   getLeadingDisplayColumnIds: () => (/* binding */ getLeadingDisplayColumnIds),\n/* harmony export */   getMRT_RowSelectionHandler: () => (/* binding */ getMRT_RowSelectionHandler),\n/* harmony export */   getMRT_Rows: () => (/* binding */ getMRT_Rows),\n/* harmony export */   getMRT_SelectAllHandler: () => (/* binding */ getMRT_SelectAllHandler),\n/* harmony export */   getTrailingDisplayColumnIds: () => (/* binding */ getTrailingDisplayColumnIds),\n/* harmony export */   isCellEditable: () => (/* binding */ isCellEditable),\n/* harmony export */   mrtFilterOptions: () => (/* binding */ mrtFilterOptions),\n/* harmony export */   openEditingCell: () => (/* binding */ openEditingCell),\n/* harmony export */   prepareColumns: () => (/* binding */ prepareColumns),\n/* harmony export */   rankGlobalFuzzy: () => (/* binding */ rankGlobalFuzzy),\n/* harmony export */   reorderColumn: () => (/* binding */ reorderColumn),\n/* harmony export */   showRowActionsColumn: () => (/* binding */ showRowActionsColumn),\n/* harmony export */   showRowDragColumn: () => (/* binding */ showRowDragColumn),\n/* harmony export */   showRowExpandColumn: () => (/* binding */ showRowExpandColumn),\n/* harmony export */   showRowNumbersColumn: () => (/* binding */ showRowNumbersColumn),\n/* harmony export */   showRowPinningColumn: () => (/* binding */ showRowPinningColumn),\n/* harmony export */   showRowSelectionColumn: () => (/* binding */ showRowSelectionColumn),\n/* harmony export */   showRowSpacerColumn: () => (/* binding */ showRowSpacerColumn),\n/* harmony export */   useDropdownOptions: () => (/* binding */ useDropdownOptions),\n/* harmony export */   useMRT_ColumnVirtualizer: () => (/* binding */ useMRT_ColumnVirtualizer),\n/* harmony export */   useMRT_Effects: () => (/* binding */ useMRT_Effects),\n/* harmony export */   useMRT_RowVirtualizer: () => (/* binding */ useMRT_RowVirtualizer),\n/* harmony export */   useMRT_Rows: () => (/* binding */ useMRT_Rows),\n/* harmony export */   useMRT_TableInstance: () => (/* binding */ useMRT_TableInstance),\n/* harmony export */   useMRT_TableOptions: () => (/* binding */ useMRT_TableOptions),\n/* harmony export */   useMaterialReactTable: () => (/* binding */ useMaterialReactTable)\n/* harmony export */ });\n/* harmony import */ var _tanstack_react_table__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tanstack/react-table */ \"(ssr)/./node_modules/@tanstack/react-table/build/lib/index.mjs\");\n/* harmony import */ var _tanstack_react_table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tanstack/react-table */ \"(ssr)/./node_modules/@tanstack/table-core/build/lib/index.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _tanstack_match_sorter_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @tanstack/match-sorter-utils */ \"(ssr)/./node_modules/@tanstack/match-sorter-utils/build/lib/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _mui_material_IconButton__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @mui/material/IconButton */ \"(ssr)/./node_modules/@mui/material/IconButton/IconButton.js\");\n/* harmony import */ var _mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @mui/material/Tooltip */ \"(ssr)/./node_modules/@mui/material/Tooltip/Tooltip.js\");\n/* harmony import */ var _mui_material_Box__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @mui/material/Box */ \"(ssr)/./node_modules/@mui/material/Box/Box.js\");\n/* harmony import */ var _mui_material_Button__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @mui/material/Button */ \"(ssr)/./node_modules/@mui/material/Button/Button.js\");\n/* harmony import */ var _mui_material_CircularProgress__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @mui/material/CircularProgress */ \"(ssr)/./node_modules/@mui/material/CircularProgress/CircularProgress.js\");\n/* harmony import */ var _mui_material_styles__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @mui/material/styles */ \"(ssr)/./node_modules/@mui/system/colorManipulator/colorManipulator.js\");\n/* harmony import */ var _mui_material_styles__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @mui/material */ \"(ssr)/./node_modules/@mui/material/styles/useTheme.js\");\n/* harmony import */ var _mui_material_Menu__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @mui/material/Menu */ \"(ssr)/./node_modules/@mui/material/Menu/Menu.js\");\n/* harmony import */ var _mui_material_ListItemIcon__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @mui/material/ListItemIcon */ \"(ssr)/./node_modules/@mui/material/ListItemIcon/ListItemIcon.js\");\n/* harmony import */ var _mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @mui/material/MenuItem */ \"(ssr)/./node_modules/@mui/material/MenuItem/MenuItem.js\");\n/* harmony import */ var _mui_material_Stack__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @mui/material/Stack */ \"(ssr)/./node_modules/@mui/material/Stack/Stack.js\");\n/* harmony import */ var _mui_material_Checkbox__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @mui/material/Checkbox */ \"(ssr)/./node_modules/@mui/material/Checkbox/Checkbox.js\");\n/* harmony import */ var _mui_material_Radio__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @mui/material/Radio */ \"(ssr)/./node_modules/@mui/material/Radio/Radio.js\");\n/* harmony import */ var _mui_icons_material_ArrowDownward__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @mui/icons-material/ArrowDownward */ \"(ssr)/./node_modules/@mui/icons-material/ArrowDownward.js\");\n/* harmony import */ var _mui_icons_material_ArrowRight__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @mui/icons-material/ArrowRight */ \"(ssr)/./node_modules/@mui/icons-material/ArrowRight.js\");\n/* harmony import */ var _mui_icons_material_Cancel__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @mui/icons-material/Cancel */ \"(ssr)/./node_modules/@mui/icons-material/Cancel.js\");\n/* harmony import */ var _mui_icons_material_ChevronLeft__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @mui/icons-material/ChevronLeft */ \"(ssr)/./node_modules/@mui/icons-material/ChevronLeft.js\");\n/* harmony import */ var _mui_icons_material_ChevronRight__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @mui/icons-material/ChevronRight */ \"(ssr)/./node_modules/@mui/icons-material/ChevronRight.js\");\n/* harmony import */ var _mui_icons_material_ClearAll__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @mui/icons-material/ClearAll */ \"(ssr)/./node_modules/@mui/icons-material/ClearAll.js\");\n/* harmony import */ var _mui_icons_material_Close__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @mui/icons-material/Close */ \"(ssr)/./node_modules/@mui/icons-material/Close.js\");\n/* harmony import */ var _mui_icons_material_ContentCopy__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @mui/icons-material/ContentCopy */ \"(ssr)/./node_modules/@mui/icons-material/ContentCopy.js\");\n/* harmony import */ var _mui_icons_material_DensityLarge__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @mui/icons-material/DensityLarge */ \"(ssr)/./node_modules/@mui/icons-material/DensityLarge.js\");\n/* harmony import */ var _mui_icons_material_DensityMedium__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @mui/icons-material/DensityMedium */ \"(ssr)/./node_modules/@mui/icons-material/DensityMedium.js\");\n/* harmony import */ var _mui_icons_material_DensitySmall__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @mui/icons-material/DensitySmall */ \"(ssr)/./node_modules/@mui/icons-material/DensitySmall.js\");\n/* harmony import */ var _mui_icons_material_DragHandle__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! @mui/icons-material/DragHandle */ \"(ssr)/./node_modules/@mui/icons-material/DragHandle.js\");\n/* harmony import */ var _mui_icons_material_DynamicFeed__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! @mui/icons-material/DynamicFeed */ \"(ssr)/./node_modules/@mui/icons-material/DynamicFeed.js\");\n/* harmony import */ var _mui_icons_material_Edit__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! @mui/icons-material/Edit */ \"(ssr)/./node_modules/@mui/icons-material/Edit.js\");\n/* harmony import */ var _mui_icons_material_ExpandMore__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! @mui/icons-material/ExpandMore */ \"(ssr)/./node_modules/@mui/icons-material/ExpandMore.js\");\n/* harmony import */ var _mui_icons_material_FilterAlt__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! @mui/icons-material/FilterAlt */ \"(ssr)/./node_modules/@mui/icons-material/FilterAlt.js\");\n/* harmony import */ var _mui_icons_material_FilterList__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! @mui/icons-material/FilterList */ \"(ssr)/./node_modules/@mui/icons-material/FilterList.js\");\n/* harmony import */ var _mui_icons_material_FilterListOff__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! @mui/icons-material/FilterListOff */ \"(ssr)/./node_modules/@mui/icons-material/FilterListOff.js\");\n/* harmony import */ var _mui_icons_material_FirstPage__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! @mui/icons-material/FirstPage */ \"(ssr)/./node_modules/@mui/icons-material/FirstPage.js\");\n/* harmony import */ var _mui_icons_material_Fullscreen__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! @mui/icons-material/Fullscreen */ \"(ssr)/./node_modules/@mui/icons-material/Fullscreen.js\");\n/* harmony import */ var _mui_icons_material_FullscreenExit__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! @mui/icons-material/FullscreenExit */ \"(ssr)/./node_modules/@mui/icons-material/FullscreenExit.js\");\n/* harmony import */ var _mui_icons_material_KeyboardDoubleArrowDown__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! @mui/icons-material/KeyboardDoubleArrowDown */ \"(ssr)/./node_modules/@mui/icons-material/KeyboardDoubleArrowDown.js\");\n/* harmony import */ var _mui_icons_material_LastPage__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! @mui/icons-material/LastPage */ \"(ssr)/./node_modules/@mui/icons-material/LastPage.js\");\n/* harmony import */ var _mui_icons_material_MoreHoriz__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! @mui/icons-material/MoreHoriz */ \"(ssr)/./node_modules/@mui/icons-material/MoreHoriz.js\");\n/* harmony import */ var _mui_icons_material_MoreVert__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! @mui/icons-material/MoreVert */ \"(ssr)/./node_modules/@mui/icons-material/MoreVert.js\");\n/* harmony import */ var _mui_icons_material_PushPin__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! @mui/icons-material/PushPin */ \"(ssr)/./node_modules/@mui/icons-material/PushPin.js\");\n/* harmony import */ var _mui_icons_material_RestartAlt__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! @mui/icons-material/RestartAlt */ \"(ssr)/./node_modules/@mui/icons-material/RestartAlt.js\");\n/* harmony import */ var _mui_icons_material_Save__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! @mui/icons-material/Save */ \"(ssr)/./node_modules/@mui/icons-material/Save.js\");\n/* harmony import */ var _mui_icons_material_Search__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! @mui/icons-material/Search */ \"(ssr)/./node_modules/@mui/icons-material/Search.js\");\n/* harmony import */ var _mui_icons_material_SearchOff__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! @mui/icons-material/SearchOff */ \"(ssr)/./node_modules/@mui/icons-material/SearchOff.js\");\n/* harmony import */ var _mui_icons_material_Sort__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! @mui/icons-material/Sort */ \"(ssr)/./node_modules/@mui/icons-material/Sort.js\");\n/* harmony import */ var _mui_icons_material_SyncAlt__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! @mui/icons-material/SyncAlt */ \"(ssr)/./node_modules/@mui/icons-material/SyncAlt.js\");\n/* harmony import */ var _mui_icons_material_ViewColumn__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! @mui/icons-material/ViewColumn */ \"(ssr)/./node_modules/@mui/icons-material/ViewColumn.js\");\n/* harmony import */ var _mui_icons_material_VisibilityOff__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! @mui/icons-material/VisibilityOff */ \"(ssr)/./node_modules/@mui/icons-material/VisibilityOff.js\");\n/* harmony import */ var _tanstack_react_virtual__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! @tanstack/react-virtual */ \"(ssr)/./node_modules/@tanstack/virtual-core/dist/esm/index.js\");\n/* harmony import */ var _tanstack_react_virtual__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! @tanstack/react-virtual */ \"(ssr)/./node_modules/@tanstack/react-virtual/dist/esm/index.js\");\n/* harmony import */ var _mui_material_Paper__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! @mui/material/Paper */ \"(ssr)/./node_modules/@mui/material/Paper/Paper.js\");\n/* harmony import */ var _mui_material_TableContainer__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! @mui/material/TableContainer */ \"(ssr)/./node_modules/@mui/material/TableContainer/TableContainer.js\");\n/* harmony import */ var _mui_material_Table__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! @mui/material/Table */ \"(ssr)/./node_modules/@mui/material/Table/Table.js\");\n/* harmony import */ var _mui_material_TableBody__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! @mui/material/TableBody */ \"(ssr)/./node_modules/@mui/material/TableBody/TableBody.js\");\n/* harmony import */ var _mui_material_Typography__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! @mui/material/Typography */ \"(ssr)/./node_modules/@mui/material/Typography/Typography.js\");\n/* harmony import */ var _mui_material_TableRow__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! @mui/material/TableRow */ \"(ssr)/./node_modules/@mui/material/TableRow/TableRow.js\");\n/* harmony import */ var _mui_material_Skeleton__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! @mui/material/Skeleton */ \"(ssr)/./node_modules/@mui/material/Skeleton/Skeleton.js\");\n/* harmony import */ var _mui_material_TableCell__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! @mui/material/TableCell */ \"(ssr)/./node_modules/@mui/material/TableCell/TableCell.js\");\n/* harmony import */ var highlight_words__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! highlight-words */ \"(ssr)/./node_modules/highlight-words/dist/highlight-words.mjs\");\n/* harmony import */ var _mui_material_TextField__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! @mui/material/TextField */ \"(ssr)/./node_modules/@mui/material/TextField/TextField.js\");\n/* harmony import */ var _mui_material_Collapse__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! @mui/material/Collapse */ \"(ssr)/./node_modules/@mui/material/Collapse/Collapse.js\");\n/* harmony import */ var _mui_material_TableFooter__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! @mui/material/TableFooter */ \"(ssr)/./node_modules/@mui/material/TableFooter/TableFooter.js\");\n/* harmony import */ var _mui_material_TableHead__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! @mui/material/TableHead */ \"(ssr)/./node_modules/@mui/material/TableHead/TableHead.js\");\n/* harmony import */ var _mui_material_FormControlLabel__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! @mui/material/FormControlLabel */ \"(ssr)/./node_modules/@mui/material/FormControlLabel/FormControlLabel.js\");\n/* harmony import */ var _mui_material_Autocomplete__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! @mui/material/Autocomplete */ \"(ssr)/./node_modules/@mui/material/Autocomplete/Autocomplete.js\");\n/* harmony import */ var _mui_material_Chip__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! @mui/material/Chip */ \"(ssr)/./node_modules/@mui/material/Chip/Chip.js\");\n/* harmony import */ var _mui_material_InputAdornment__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! @mui/material/InputAdornment */ \"(ssr)/./node_modules/@mui/material/InputAdornment/InputAdornment.js\");\n/* harmony import */ var _mui_material_utils__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! @mui/material/utils */ \"(ssr)/./node_modules/@mui/material/utils/debounce.js\");\n/* harmony import */ var _mui_x_date_pickers_DatePicker__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! @mui/x-date-pickers/DatePicker */ \"(ssr)/./node_modules/@mui/x-date-pickers/DatePicker/DatePicker.js\");\n/* harmony import */ var _mui_x_date_pickers_DateTimePicker__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! @mui/x-date-pickers/DateTimePicker */ \"(ssr)/./node_modules/@mui/x-date-pickers/DateTimePicker/DateTimePicker.js\");\n/* harmony import */ var _mui_x_date_pickers_TimePicker__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! @mui/x-date-pickers/TimePicker */ \"(ssr)/./node_modules/@mui/x-date-pickers/TimePicker/TimePicker.js\");\n/* harmony import */ var _mui_material_FormHelperText__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! @mui/material/FormHelperText */ \"(ssr)/./node_modules/@mui/material/FormHelperText/FormHelperText.js\");\n/* harmony import */ var _mui_material_Slider__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! @mui/material/Slider */ \"(ssr)/./node_modules/@mui/material/Slider/Slider.js\");\n/* harmony import */ var _mui_material_Grow__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! @mui/material/Grow */ \"(ssr)/./node_modules/@mui/material/Grow/Grow.js\");\n/* harmony import */ var _mui_material_Popover__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! @mui/material/Popover */ \"(ssr)/./node_modules/@mui/material/Popover/Popover.js\");\n/* harmony import */ var _mui_material_Divider__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! @mui/material/Divider */ \"(ssr)/./node_modules/@mui/material/Divider/Divider.js\");\n/* harmony import */ var _mui_material_Badge__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! @mui/material/Badge */ \"(ssr)/./node_modules/@mui/material/Badge/Badge.js\");\n/* harmony import */ var _mui_material_TableSortLabel__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! @mui/material/TableSortLabel */ \"(ssr)/./node_modules/@mui/material/TableSortLabel/TableSortLabel.js\");\n/* harmony import */ var _mui_material_Alert__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! @mui/material/Alert */ \"(ssr)/./node_modules/@mui/material/Alert/Alert.js\");\n/* harmony import */ var _mui_material_AlertTitle__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! @mui/material/AlertTitle */ \"(ssr)/./node_modules/@mui/material/AlertTitle/AlertTitle.js\");\n/* harmony import */ var _mui_material_Dialog__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! @mui/material/Dialog */ \"(ssr)/./node_modules/@mui/material/Dialog/Dialog.js\");\n/* harmony import */ var _mui_material_DialogActions__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! @mui/material/DialogActions */ \"(ssr)/./node_modules/@mui/material/DialogActions/DialogActions.js\");\n/* harmony import */ var _mui_material_DialogContent__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! @mui/material/DialogContent */ \"(ssr)/./node_modules/@mui/material/DialogContent/DialogContent.js\");\n/* harmony import */ var _mui_material_DialogTitle__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! @mui/material/DialogTitle */ \"(ssr)/./node_modules/@mui/material/DialogTitle/DialogTitle.js\");\n/* harmony import */ var _mui_material_useMediaQuery__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! @mui/material/useMediaQuery */ \"(ssr)/./node_modules/@mui/system/useMediaQuery/useMediaQuery.js\");\n/* harmony import */ var _mui_material_LinearProgress__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! @mui/material/LinearProgress */ \"(ssr)/./node_modules/@mui/material/LinearProgress/LinearProgress.js\");\n/* harmony import */ var _mui_material_InputLabel__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! @mui/material/InputLabel */ \"(ssr)/./node_modules/@mui/material/InputLabel/InputLabel.js\");\n/* harmony import */ var _mui_material_Pagination__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! @mui/material/Pagination */ \"(ssr)/./node_modules/@mui/material/Pagination/Pagination.js\");\n/* harmony import */ var _mui_material_PaginationItem__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! @mui/material/PaginationItem */ \"(ssr)/./node_modules/@mui/material/PaginationItem/PaginationItem.js\");\n/* harmony import */ var _mui_material_Select__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! @mui/material/Select */ \"(ssr)/./node_modules/@mui/material/Select/Select.js\");\n/* harmony import */ var _mui_material_Fade__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! @mui/material/Fade */ \"(ssr)/./node_modules/@mui/material/Fade/Fade.js\");\n/* harmony import */ var _mui_material_Switch__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! @mui/material/Switch */ \"(ssr)/./node_modules/@mui/material/Switch/Switch.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst getColumnId = (columnDef) => { var _a, _b, _c, _d; return (_d = (_a = columnDef.id) !== null && _a !== void 0 ? _a : (_c = (_b = columnDef.accessorKey) === null || _b === void 0 ? void 0 : _b.toString) === null || _c === void 0 ? void 0 : _c.call(_b)) !== null && _d !== void 0 ? _d : columnDef.header; };\nconst getAllLeafColumnDefs = (columns) => {\n    const allLeafColumnDefs = [];\n    const getLeafColumns = (cols) => {\n        cols.forEach((col) => {\n            if (col.columns) {\n                getLeafColumns(col.columns);\n            }\n            else {\n                allLeafColumnDefs.push(col);\n            }\n        });\n    };\n    getLeafColumns(columns);\n    return allLeafColumnDefs;\n};\nconst prepareColumns = ({ columnDefs, tableOptions, }) => {\n    const { aggregationFns = {}, defaultDisplayColumn, filterFns = {}, sortingFns = {}, state: { columnFilterFns = {} } = {}, } = tableOptions;\n    return columnDefs.map((columnDef) => {\n        var _a, _b;\n        //assign columnId\n        if (!columnDef.id)\n            columnDef.id = getColumnId(columnDef);\n        //assign columnDefType\n        if (!columnDef.columnDefType)\n            columnDef.columnDefType = 'data';\n        if ((_a = columnDef.columns) === null || _a === void 0 ? void 0 : _a.length) {\n            columnDef.columnDefType = 'group';\n            //recursively prepare columns if this is a group column\n            columnDef.columns = prepareColumns({\n                columnDefs: columnDef.columns,\n                tableOptions,\n            });\n        }\n        else if (columnDef.columnDefType === 'data') {\n            //assign aggregationFns if multiple aggregationFns are provided\n            if (Array.isArray(columnDef.aggregationFn)) {\n                const aggFns = columnDef.aggregationFn;\n                columnDef.aggregationFn = (columnId, leafRows, childRows) => aggFns.map((fn) => { var _a; return (_a = aggregationFns[fn]) === null || _a === void 0 ? void 0 : _a.call(aggregationFns, columnId, leafRows, childRows); });\n            }\n            //assign filterFns\n            if (Object.keys(filterFns).includes(columnFilterFns[columnDef.id])) {\n                columnDef.filterFn =\n                    (_b = filterFns[columnFilterFns[columnDef.id]]) !== null && _b !== void 0 ? _b : filterFns.fuzzy;\n                columnDef._filterFn =\n                    columnFilterFns[columnDef.id];\n            }\n            //assign sortingFns\n            if (Object.keys(sortingFns).includes(columnDef.sortingFn)) {\n                // @ts-ignore\n                columnDef.sortingFn = sortingFns[columnDef.sortingFn];\n            }\n        }\n        else if (columnDef.columnDefType === 'display') {\n            columnDef = Object.assign(Object.assign({}, defaultDisplayColumn), columnDef);\n        }\n        return columnDef;\n    });\n};\nconst reorderColumn = (draggedColumn, targetColumn, columnOrder) => {\n    if (draggedColumn.getCanPin()) {\n        draggedColumn.pin(targetColumn.getIsPinned());\n    }\n    const newColumnOrder = [...columnOrder];\n    newColumnOrder.splice(newColumnOrder.indexOf(targetColumn.id), 0, newColumnOrder.splice(newColumnOrder.indexOf(draggedColumn.id), 1)[0]);\n    return newColumnOrder;\n};\nconst getDefaultColumnFilterFn = (columnDef) => {\n    const { filterVariant } = columnDef;\n    if (filterVariant === 'multi-select')\n        return 'arrIncludesSome';\n    if (filterVariant === null || filterVariant === void 0 ? void 0 : filterVariant.includes('range'))\n        return 'betweenInclusive';\n    if (filterVariant === 'select' || filterVariant === 'checkbox')\n        return 'equals';\n    return 'fuzzy';\n};\nconst getColumnFilterInfo = ({ header, table, }) => {\n    var _a;\n    const { options: { columnFilterModeOptions }, } = table;\n    const { column } = header;\n    const { columnDef } = column;\n    const { filterVariant } = columnDef;\n    const isDateFilter = !!((filterVariant === null || filterVariant === void 0 ? void 0 : filterVariant.startsWith('date')) || (filterVariant === null || filterVariant === void 0 ? void 0 : filterVariant.startsWith('time')));\n    const isAutocompleteFilter = filterVariant === 'autocomplete';\n    const isRangeFilter = (filterVariant === null || filterVariant === void 0 ? void 0 : filterVariant.includes('range')) ||\n        ['between', 'betweenInclusive', 'inNumberRange'].includes(columnDef._filterFn);\n    const isSelectFilter = filterVariant === 'select';\n    const isMultiSelectFilter = filterVariant === 'multi-select';\n    const isTextboxFilter = ['autocomplete', 'text'].includes(filterVariant) ||\n        (!isSelectFilter && !isMultiSelectFilter);\n    const currentFilterOption = columnDef._filterFn;\n    const allowedColumnFilterOptions = (_a = columnDef === null || columnDef === void 0 ? void 0 : columnDef.columnFilterModeOptions) !== null && _a !== void 0 ? _a : columnFilterModeOptions;\n    const facetedUniqueValues = column.getFacetedUniqueValues();\n    return {\n        allowedColumnFilterOptions,\n        currentFilterOption,\n        facetedUniqueValues,\n        isAutocompleteFilter,\n        isDateFilter,\n        isMultiSelectFilter,\n        isRangeFilter,\n        isSelectFilter,\n        isTextboxFilter,\n    };\n};\nconst useDropdownOptions = ({ header, table, }) => {\n    const { column } = header;\n    const { columnDef } = column;\n    const { facetedUniqueValues, isAutocompleteFilter, isMultiSelectFilter, isSelectFilter, } = getColumnFilterInfo({ header, table });\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        var _a;\n        return (_a = columnDef.filterSelectOptions) !== null && _a !== void 0 ? _a : ((isSelectFilter || isMultiSelectFilter || isAutocompleteFilter) &&\n            facetedUniqueValues\n            ? Array.from(facetedUniqueValues.keys())\n                .filter((value) => value !== null && value !== undefined)\n                .sort((a, b) => a.localeCompare(b))\n            : undefined);\n    }, [\n        columnDef.filterSelectOptions,\n        facetedUniqueValues,\n        isMultiSelectFilter,\n        isSelectFilter,\n    ]);\n};\n\nconst flexRender = _tanstack_react_table__WEBPACK_IMPORTED_MODULE_3__.flexRender;\nfunction createMRTColumnHelper() {\n    return {\n        accessor: (accessor, column) => {\n            return typeof accessor === 'function'\n                ? Object.assign(Object.assign({}, column), { accessorFn: accessor })\n                : Object.assign(Object.assign({}, column), { accessorKey: accessor });\n        },\n        display: (column) => column,\n        group: (column) => column,\n    };\n}\nconst createRow = (table, originalRow, rowIndex = -1, depth = 0, subRows, parentId) => (0,_tanstack_react_table__WEBPACK_IMPORTED_MODULE_4__.createRow)(table, 'mrt-row-create', originalRow !== null && originalRow !== void 0 ? originalRow : Object.assign({}, ...getAllLeafColumnDefs(table.options.columns).map((col) => ({\n    [getColumnId(col)]: '',\n}))), rowIndex, depth, subRows, parentId);\n\nconst parseFromValuesOrFunc = (fn, arg) => (fn instanceof Function ? fn(arg) : fn);\nconst getValueAndLabel = (option) => {\n    var _a, _b, _c;\n    let label = '';\n    let value = '';\n    if (option) {\n        if (typeof option !== 'object') {\n            label = option;\n            value = option;\n        }\n        else {\n            label = (_b = (_a = option.label) !== null && _a !== void 0 ? _a : option.text) !== null && _b !== void 0 ? _b : option.value;\n            value = (_c = option.value) !== null && _c !== void 0 ? _c : label;\n        }\n    }\n    return { label, value };\n};\n\nconst isCellEditable = ({ cell, table, }) => {\n    const { enableEditing } = table.options;\n    const { column: { columnDef }, row, } = cell;\n    return (!cell.getIsPlaceholder() &&\n        parseFromValuesOrFunc(enableEditing, row) &&\n        parseFromValuesOrFunc(columnDef.enableEditing, row) !== false);\n};\nconst openEditingCell = ({ cell, table, }) => {\n    const { options: { editDisplayMode }, refs: { editInputRefs }, } = table;\n    const { column } = cell;\n    if (isCellEditable({ cell, table }) && editDisplayMode === 'cell') {\n        table.setEditingCell(cell);\n        queueMicrotask(() => {\n            var _a;\n            const textField = editInputRefs.current[column.id];\n            if (textField) {\n                textField.focus();\n                (_a = textField.select) === null || _a === void 0 ? void 0 : _a.call(textField);\n            }\n        });\n    }\n};\n\nfunction defaultDisplayColumnProps({ header, id, size, tableOptions, }) {\n    const { defaultDisplayColumn, displayColumnDefOptions, localization } = tableOptions;\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, defaultDisplayColumn), { header: header ? localization[header] : '', size }), displayColumnDefOptions === null || displayColumnDefOptions === void 0 ? void 0 : displayColumnDefOptions[id]), { id });\n}\nconst showRowPinningColumn = (tableOptions) => {\n    const { enableRowPinning, rowPinningDisplayMode } = tableOptions;\n    return !!(enableRowPinning && !(rowPinningDisplayMode === null || rowPinningDisplayMode === void 0 ? void 0 : rowPinningDisplayMode.startsWith('select')));\n};\nconst showRowDragColumn = (tableOptions) => {\n    const { enableRowDragging, enableRowOrdering } = tableOptions;\n    return !!(enableRowDragging || enableRowOrdering);\n};\nconst showRowExpandColumn = (tableOptions) => {\n    const { enableExpanding, enableGrouping, renderDetailPanel, state: { grouping }, } = tableOptions;\n    return !!(enableExpanding ||\n        (enableGrouping && (grouping === null || grouping === void 0 ? void 0 : grouping.length)) ||\n        renderDetailPanel);\n};\nconst showRowActionsColumn = (tableOptions) => {\n    const { createDisplayMode, editDisplayMode, enableEditing, enableRowActions, state: { creatingRow }, } = tableOptions;\n    return !!(enableRowActions ||\n        (creatingRow && createDisplayMode === 'row') ||\n        (enableEditing && ['modal', 'row'].includes(editDisplayMode !== null && editDisplayMode !== void 0 ? editDisplayMode : '')));\n};\nconst showRowSelectionColumn = (tableOptions) => !!tableOptions.enableRowSelection;\nconst showRowNumbersColumn = (tableOptions) => !!tableOptions.enableRowNumbers;\nconst showRowSpacerColumn = (tableOptions) => tableOptions.layoutMode === 'grid-no-grow';\nconst getLeadingDisplayColumnIds = (tableOptions) => [\n    showRowPinningColumn(tableOptions) && 'mrt-row-pin',\n    showRowDragColumn(tableOptions) && 'mrt-row-drag',\n    tableOptions.positionActionsColumn === 'first' &&\n        showRowActionsColumn(tableOptions) &&\n        'mrt-row-actions',\n    tableOptions.positionExpandColumn === 'first' &&\n        showRowExpandColumn(tableOptions) &&\n        'mrt-row-expand',\n    showRowSelectionColumn(tableOptions) && 'mrt-row-select',\n    showRowNumbersColumn(tableOptions) && 'mrt-row-numbers',\n].filter(Boolean);\nconst getTrailingDisplayColumnIds = (tableOptions) => [\n    tableOptions.positionActionsColumn === 'last' &&\n        showRowActionsColumn(tableOptions) &&\n        'mrt-row-actions',\n    tableOptions.positionExpandColumn === 'last' &&\n        showRowExpandColumn(tableOptions) &&\n        'mrt-row-expand',\n    showRowSpacerColumn(tableOptions) && 'mrt-row-spacer',\n].filter(Boolean);\nconst getDefaultColumnOrderIds = (tableOptions, reset = false) => {\n    const { state: { columnOrder: currentColumnOrderIds = [] }, } = tableOptions;\n    const leadingDisplayColIds = getLeadingDisplayColumnIds(tableOptions);\n    const trailingDisplayColIds = getTrailingDisplayColumnIds(tableOptions);\n    const defaultColumnDefIds = getAllLeafColumnDefs(tableOptions.columns).map((columnDef) => getColumnId(columnDef));\n    let allLeafColumnDefIds = reset\n        ? defaultColumnDefIds\n        : Array.from(new Set([...currentColumnOrderIds, ...defaultColumnDefIds]));\n    allLeafColumnDefIds = allLeafColumnDefIds.filter((colId) => !leadingDisplayColIds.includes(colId) &&\n        !trailingDisplayColIds.includes(colId));\n    return [\n        ...leadingDisplayColIds,\n        ...allLeafColumnDefIds,\n        ...trailingDisplayColIds,\n    ];\n};\n\nconst fuzzy$1 = (rowA, rowB, columnId) => {\n    let dir = 0;\n    if (rowA.columnFiltersMeta[columnId]) {\n        dir = (0,_tanstack_match_sorter_utils__WEBPACK_IMPORTED_MODULE_5__.compareItems)(rowA.columnFiltersMeta[columnId], rowB.columnFiltersMeta[columnId]);\n    }\n    // Provide a fallback for when the item ranks are equal\n    return dir === 0\n        ? _tanstack_react_table__WEBPACK_IMPORTED_MODULE_4__.sortingFns.alphanumeric(rowA, rowB, columnId)\n        : dir;\n};\nconst MRT_SortingFns = Object.assign(Object.assign({}, _tanstack_react_table__WEBPACK_IMPORTED_MODULE_4__.sortingFns), { fuzzy: fuzzy$1 });\nconst rankGlobalFuzzy = (rowA, rowB) => Math.max(...Object.values(rowB.columnFiltersMeta).map((v) => v.rank)) -\n    Math.max(...Object.values(rowA.columnFiltersMeta).map((v) => v.rank));\n\nconst getMRT_Rows = (table, all) => {\n    const { getCenterRows, getPrePaginationRowModel, getRowModel, getState, getTopRows, options: { createDisplayMode, enablePagination, enableRowPinning, manualPagination, positionCreatingRow, rowPinningDisplayMode, }, } = table;\n    const { creatingRow, pagination } = getState();\n    const isRankingRows = getIsRankingRows(table);\n    let rows = [];\n    if (!isRankingRows) {\n        rows =\n            !enableRowPinning || (rowPinningDisplayMode === null || rowPinningDisplayMode === void 0 ? void 0 : rowPinningDisplayMode.includes('sticky'))\n                ? all\n                    ? getPrePaginationRowModel().rows\n                    : getRowModel().rows\n                : getCenterRows();\n    }\n    else {\n        // fuzzy ranking adjustments\n        rows = getPrePaginationRowModel().rows.sort((a, b) => rankGlobalFuzzy(a, b));\n        if (enablePagination && !manualPagination && !all) {\n            const start = pagination.pageIndex * pagination.pageSize;\n            rows = rows.slice(start, start + pagination.pageSize);\n        }\n        if (enableRowPinning && !(rowPinningDisplayMode === null || rowPinningDisplayMode === void 0 ? void 0 : rowPinningDisplayMode.includes('sticky'))) {\n            // \"re-center-ize\" the rows (no top or bottom pinned rows unless sticky)\n            rows = rows.filter((row) => !row.getIsPinned());\n        }\n    }\n    // row pinning adjustments\n    if (enableRowPinning && (rowPinningDisplayMode === null || rowPinningDisplayMode === void 0 ? void 0 : rowPinningDisplayMode.includes('sticky'))) {\n        const centerPinnedRowIds = rows\n            .filter((row) => row.getIsPinned())\n            .map((r) => r.id);\n        rows = [\n            ...getTopRows().filter((row) => !centerPinnedRowIds.includes(row.id)),\n            ...rows,\n        ];\n    }\n    // blank inserted creating row adjustments\n    if (positionCreatingRow !== undefined &&\n        creatingRow &&\n        createDisplayMode === 'row') {\n        const creatingRowIndex = !isNaN(+positionCreatingRow)\n            ? +positionCreatingRow\n            : positionCreatingRow === 'top'\n                ? 0\n                : rows.length;\n        rows = [\n            ...rows.slice(0, creatingRowIndex),\n            creatingRow,\n            ...rows.slice(creatingRowIndex),\n        ];\n    }\n    return rows;\n};\nconst getCanRankRows = (table) => {\n    const { getState, options: { enableGlobalFilterRankedResults, manualExpanding, manualFiltering, manualGrouping, manualSorting, }, } = table;\n    const { expanded, globalFilterFn } = getState();\n    return (!manualExpanding &&\n        !manualFiltering &&\n        !manualGrouping &&\n        !manualSorting &&\n        enableGlobalFilterRankedResults &&\n        globalFilterFn === 'fuzzy' &&\n        expanded !== true &&\n        !Object.values(expanded).some(Boolean));\n};\nconst getIsRankingRows = (table) => {\n    const { globalFilter, sorting } = table.getState();\n    return (getCanRankRows(table) &&\n        globalFilter &&\n        !Object.values(sorting).some(Boolean));\n};\nconst getIsRowSelected = ({ row, table, }) => {\n    const { options: { enableRowSelection }, } = table;\n    return (row.getIsSelected() ||\n        (parseFromValuesOrFunc(enableRowSelection, row) &&\n            row.getCanSelectSubRows() &&\n            row.getIsAllSubRowsSelected()));\n};\nconst getMRT_RowSelectionHandler = ({ row, staticRowIndex = 0, table, }) => (event, value) => {\n    var _a;\n    const { getState, options: { enableBatchRowSelection, enableMultiRowSelection, enableRowPinning, manualPagination, rowPinningDisplayMode, }, refs: { lastSelectedRowId: lastSelectedRowId }, } = table;\n    const { pagination: { pageIndex, pageSize }, } = getState();\n    const paginationOffset = manualPagination ? 0 : pageSize * pageIndex;\n    const wasCurrentRowChecked = getIsRowSelected({ row, table });\n    // toggle selection of this row\n    row.toggleSelected(value !== null && value !== void 0 ? value : !wasCurrentRowChecked);\n    const changedRowIds = new Set([row.id]);\n    // if shift key is pressed, select all rows between last selected and this one\n    if (enableBatchRowSelection &&\n        enableMultiRowSelection &&\n        event.nativeEvent.shiftKey &&\n        lastSelectedRowId.current !== null) {\n        const rows = getMRT_Rows(table, true);\n        const lastIndex = rows.findIndex((r) => r.id === lastSelectedRowId.current);\n        if (lastIndex !== -1) {\n            const isLastIndexChecked = getIsRowSelected({\n                row: rows === null || rows === void 0 ? void 0 : rows[lastIndex],\n                table,\n            });\n            const currentIndex = staticRowIndex + paginationOffset;\n            const [start, end] = lastIndex < currentIndex\n                ? [lastIndex, currentIndex]\n                : [currentIndex, lastIndex];\n            // toggle selection of all rows between last selected and this one\n            // but only if the last selected row is not the same as the current one\n            if (wasCurrentRowChecked !== isLastIndexChecked) {\n                for (let i = start; i <= end; i++) {\n                    rows[i].toggleSelected(!wasCurrentRowChecked);\n                    changedRowIds.add(rows[i].id);\n                }\n            }\n        }\n    }\n    // record the last selected row id\n    lastSelectedRowId.current = row.id;\n    // if all sub rows were selected, unselect them\n    if (row.getCanSelectSubRows() && row.getIsAllSubRowsSelected()) {\n        (_a = row.subRows) === null || _a === void 0 ? void 0 : _a.forEach((r) => r.toggleSelected(false));\n    }\n    if (enableRowPinning && (rowPinningDisplayMode === null || rowPinningDisplayMode === void 0 ? void 0 : rowPinningDisplayMode.includes('select'))) {\n        changedRowIds.forEach((rowId) => {\n            const rowToTogglePin = table.getRow(rowId);\n            rowToTogglePin.pin(!wasCurrentRowChecked //was not previously pinned or selected\n                ? (rowPinningDisplayMode === null || rowPinningDisplayMode === void 0 ? void 0 : rowPinningDisplayMode.includes('bottom'))\n                    ? 'bottom'\n                    : 'top'\n                : false);\n        });\n    }\n};\nconst getMRT_SelectAllHandler = ({ table }) => (event, value, forceAll) => {\n    const { options: { enableRowPinning, rowPinningDisplayMode, selectAllMode }, refs: { lastSelectedRowId }, } = table;\n    selectAllMode === 'all' || forceAll\n        ? table.toggleAllRowsSelected(value !== null && value !== void 0 ? value : event.target.checked)\n        : table.toggleAllPageRowsSelected(value !== null && value !== void 0 ? value : event.target.checked);\n    if (enableRowPinning && (rowPinningDisplayMode === null || rowPinningDisplayMode === void 0 ? void 0 : rowPinningDisplayMode.includes('select'))) {\n        table.setRowPinning({ bottom: [], top: [] });\n    }\n    lastSelectedRowId.current = null;\n};\n\nconst MRT_AggregationFns = Object.assign({}, _tanstack_react_table__WEBPACK_IMPORTED_MODULE_4__.aggregationFns);\n\nconst fuzzy = (row, columnId, filterValue, addMeta) => {\n    const itemRank = (0,_tanstack_match_sorter_utils__WEBPACK_IMPORTED_MODULE_5__.rankItem)(row.getValue(columnId), filterValue, {\n        threshold: _tanstack_match_sorter_utils__WEBPACK_IMPORTED_MODULE_5__.rankings.MATCHES,\n    });\n    addMeta(itemRank);\n    return itemRank.passed;\n};\nfuzzy.autoRemove = (val) => !val;\nconst contains = (row, id, filterValue) => row\n    .getValue(id)\n    .toString()\n    .toLowerCase()\n    .trim()\n    .includes(filterValue.toString().toLowerCase().trim());\ncontains.autoRemove = (val) => !val;\nconst startsWith = (row, id, filterValue) => row\n    .getValue(id)\n    .toString()\n    .toLowerCase()\n    .trim()\n    .startsWith(filterValue.toString().toLowerCase().trim());\nstartsWith.autoRemove = (val) => !val;\nconst endsWith = (row, id, filterValue) => row\n    .getValue(id)\n    .toString()\n    .toLowerCase()\n    .trim()\n    .endsWith(filterValue.toString().toLowerCase().trim());\nendsWith.autoRemove = (val) => !val;\nconst equals = (row, id, filterValue) => row.getValue(id).toString().toLowerCase().trim() ===\n    (filterValue === null || filterValue === void 0 ? void 0 : filterValue.toString().toLowerCase().trim());\nequals.autoRemove = (val) => !val;\nconst notEquals = (row, id, filterValue) => row.getValue(id).toString().toLowerCase().trim() !==\n    filterValue.toString().toLowerCase().trim();\nnotEquals.autoRemove = (val) => !val;\nconst greaterThan = (row, id, filterValue) => !isNaN(+filterValue) && !isNaN(+row.getValue(id))\n    ? +row.getValue(id) > +filterValue\n    : row.getValue(id).toString().toLowerCase().trim() >\n        (filterValue === null || filterValue === void 0 ? void 0 : filterValue.toString().toLowerCase().trim());\ngreaterThan.autoRemove = (val) => !val;\nconst greaterThanOrEqualTo = (row, id, filterValue) => equals(row, id, filterValue) || greaterThan(row, id, filterValue);\ngreaterThanOrEqualTo.autoRemove = (val) => !val;\nconst lessThan = (row, id, filterValue) => !isNaN(+filterValue) && !isNaN(+row.getValue(id))\n    ? +row.getValue(id) < +filterValue\n    : row.getValue(id).toString().toLowerCase().trim() <\n        (filterValue === null || filterValue === void 0 ? void 0 : filterValue.toString().toLowerCase().trim());\nlessThan.autoRemove = (val) => !val;\nconst lessThanOrEqualTo = (row, id, filterValue) => equals(row, id, filterValue) || lessThan(row, id, filterValue);\nlessThanOrEqualTo.autoRemove = (val) => !val;\nconst between = (row, id, filterValues) => (['', undefined].includes(filterValues[0]) ||\n    greaterThan(row, id, filterValues[0])) &&\n    ((!isNaN(+filterValues[0]) &&\n        !isNaN(+filterValues[1]) &&\n        +filterValues[0] > +filterValues[1]) ||\n        ['', undefined].includes(filterValues[1]) ||\n        lessThan(row, id, filterValues[1]));\nbetween.autoRemove = (val) => !val;\nconst betweenInclusive = (row, id, filterValues) => (['', undefined].includes(filterValues[0]) ||\n    greaterThanOrEqualTo(row, id, filterValues[0])) &&\n    ((!isNaN(+filterValues[0]) &&\n        !isNaN(+filterValues[1]) &&\n        +filterValues[0] > +filterValues[1]) ||\n        ['', undefined].includes(filterValues[1]) ||\n        lessThanOrEqualTo(row, id, filterValues[1]));\nbetweenInclusive.autoRemove = (val) => !val;\nconst empty = (row, id, _filterValue) => !row.getValue(id).toString().trim();\nempty.autoRemove = (val) => !val;\nconst notEmpty = (row, id, _filterValue) => !!row.getValue(id).toString().trim();\nnotEmpty.autoRemove = (val) => !val;\nconst MRT_FilterFns = Object.assign(Object.assign({}, _tanstack_react_table__WEBPACK_IMPORTED_MODULE_4__.filterFns), { between,\n    betweenInclusive,\n    contains,\n    empty,\n    endsWith,\n    equals,\n    fuzzy,\n    greaterThan,\n    greaterThanOrEqualTo,\n    lessThan,\n    lessThanOrEqualTo,\n    notEmpty,\n    notEquals,\n    startsWith });\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nconst MRT_EditActionButtons = (_a) => {\n    var { row, table, variant = 'icon' } = _a, rest = __rest(_a, [\"row\", \"table\", \"variant\"]);\n    const { getState, options: { icons: { CancelIcon, SaveIcon }, localization, onCreatingRowCancel, onCreatingRowSave, onEditingRowCancel, onEditingRowSave, }, refs: { editInputRefs }, setCreatingRow, setEditingRow, } = table;\n    const { creatingRow, editingRow, isSaving } = getState();\n    const isCreating = (creatingRow === null || creatingRow === void 0 ? void 0 : creatingRow.id) === row.id;\n    const isEditing = (editingRow === null || editingRow === void 0 ? void 0 : editingRow.id) === row.id;\n    const handleCancel = () => {\n        if (isCreating) {\n            onCreatingRowCancel === null || onCreatingRowCancel === void 0 ? void 0 : onCreatingRowCancel({ row, table });\n            setCreatingRow(null);\n        }\n        else if (isEditing) {\n            onEditingRowCancel === null || onEditingRowCancel === void 0 ? void 0 : onEditingRowCancel({ row, table });\n            setEditingRow(null);\n        }\n        row._valuesCache = {}; //reset values cache\n    };\n    const handleSubmitRow = () => {\n        var _a;\n        //look for auto-filled input values\n        (_a = Object.values(editInputRefs === null || editInputRefs === void 0 ? void 0 : editInputRefs.current)\n            .filter((inputRef) => { var _a, _b; return row.id === ((_b = (_a = inputRef === null || inputRef === void 0 ? void 0 : inputRef.name) === null || _a === void 0 ? void 0 : _a.split('_')) === null || _b === void 0 ? void 0 : _b[0]); })) === null || _a === void 0 ? void 0 : _a.forEach((input) => {\n            if (input.value !== undefined &&\n                Object.hasOwn(row === null || row === void 0 ? void 0 : row._valuesCache, input.name)) {\n                // @ts-ignore\n                row._valuesCache[input.name] = input.value;\n            }\n        });\n        if (isCreating)\n            onCreatingRowSave === null || onCreatingRowSave === void 0 ? void 0 : onCreatingRowSave({\n                exitCreatingMode: () => setCreatingRow(null),\n                row,\n                table,\n                values: row._valuesCache,\n            });\n        else if (isEditing) {\n            onEditingRowSave === null || onEditingRowSave === void 0 ? void 0 : onEditingRowSave({\n                exitEditingMode: () => setEditingRow(null),\n                row,\n                table,\n                values: row === null || row === void 0 ? void 0 : row._valuesCache,\n            });\n        }\n    };\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { onClick: (e) => e.stopPropagation(), sx: (theme) => (Object.assign({ display: 'flex', gap: '0.75rem' }, parseFromValuesOrFunc(rest === null || rest === void 0 ? void 0 : rest.sx, theme))), children: variant === 'icon' ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { title: localization.cancel, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_8__[\"default\"], { \"aria-label\": localization.cancel, onClick: handleCancel, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(CancelIcon, {}) }) }), ((isCreating && onCreatingRowSave) ||\n                    (isEditing && onEditingRowSave)) && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { title: localization.save, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_8__[\"default\"], { \"aria-label\": localization.save, color: \"info\", disabled: isSaving, onClick: handleSubmitRow, children: isSaving ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_CircularProgress__WEBPACK_IMPORTED_MODULE_9__[\"default\"], { size: 18 }) : (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(SaveIcon, {}) }) }))] })) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Button__WEBPACK_IMPORTED_MODULE_10__[\"default\"], { onClick: handleCancel, sx: { minWidth: '100px' }, children: localization.cancel }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_Button__WEBPACK_IMPORTED_MODULE_10__[\"default\"], { disabled: isSaving, onClick: handleSubmitRow, sx: { minWidth: '100px' }, variant: \"contained\", children: [isSaving && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_CircularProgress__WEBPACK_IMPORTED_MODULE_9__[\"default\"], { color: \"inherit\", size: 18 }), localization.save] })] })) }));\n};\n\nconst parseCSSVarId = (id) => id.replace(/[^a-zA-Z0-9]/g, '_');\nconst getMRTTheme = (mrtTheme, muiTheme) => {\n    var _a;\n    const mrtThemeOverrides = parseFromValuesOrFunc(mrtTheme, muiTheme);\n    const baseBackgroundColor = (_a = mrtThemeOverrides === null || mrtThemeOverrides === void 0 ? void 0 : mrtThemeOverrides.baseBackgroundColor) !== null && _a !== void 0 ? _a : (muiTheme.palette.mode === 'dark'\n        ? (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_11__.lighten)(muiTheme.palette.background.default, 0.05)\n        : muiTheme.palette.background.default);\n    return Object.assign({ baseBackgroundColor, draggingBorderColor: muiTheme.palette.primary.main, matchHighlightColor: muiTheme.palette.mode === 'dark'\n            ? (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_11__.darken)(muiTheme.palette.warning.dark, 0.25)\n            : (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_11__.lighten)(muiTheme.palette.warning.light, 0.5), menuBackgroundColor: (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_11__.lighten)(baseBackgroundColor, 0.07), pinnedRowBackgroundColor: (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_11__.alpha)(muiTheme.palette.primary.main, 0.1), selectedRowBackgroundColor: (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_11__.alpha)(muiTheme.palette.primary.main, 0.2) }, mrtThemeOverrides);\n};\nconst commonCellBeforeAfterStyles = {\n    content: '\"\"',\n    height: '100%',\n    left: 0,\n    position: 'absolute',\n    top: 0,\n    width: '100%',\n    zIndex: -1,\n};\nconst getCommonPinnedCellStyles = ({ column, table, theme, }) => {\n    const { baseBackgroundColor } = table.options.mrtTheme;\n    const isPinned = column === null || column === void 0 ? void 0 : column.getIsPinned();\n    return {\n        '&[data-pinned=\"true\"]': {\n            '&:before': Object.assign({ backgroundColor: (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_11__.alpha)((0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_11__.darken)(baseBackgroundColor, theme.palette.mode === 'dark' ? 0.05 : 0.01), 0.97), boxShadow: column\n                    ? isPinned === 'left' && column.getIsLastColumn(isPinned)\n                        ? `-4px 0 4px -4px ${(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_11__.alpha)(theme.palette.grey[700], 0.5)} inset`\n                        : isPinned === 'right' && column.getIsFirstColumn(isPinned)\n                            ? `4px 0 4px -4px ${(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_11__.alpha)(theme.palette.grey[700], 0.5)} inset`\n                            : undefined\n                    : undefined }, commonCellBeforeAfterStyles),\n        },\n    };\n};\nconst getCommonMRTCellStyles = ({ column, header, table, tableCellProps, theme, }) => {\n    var _a, _b, _c, _d, _e, _f;\n    const { getState, options: { enableColumnVirtualization, layoutMode }, } = table;\n    const { draggingColumn } = getState();\n    const { columnDef } = column;\n    const { columnDefType } = columnDef;\n    const isColumnPinned = columnDef.columnDefType !== 'group' && column.getIsPinned();\n    const widthStyles = {\n        minWidth: `max(calc(var(--${header ? 'header' : 'col'}-${parseCSSVarId((_a = header === null || header === void 0 ? void 0 : header.id) !== null && _a !== void 0 ? _a : column.id)}-size) * 1px), ${(_b = columnDef.minSize) !== null && _b !== void 0 ? _b : 30}px)`,\n        width: `calc(var(--${header ? 'header' : 'col'}-${parseCSSVarId((_c = header === null || header === void 0 ? void 0 : header.id) !== null && _c !== void 0 ? _c : column.id)}-size) * 1px)`,\n    };\n    if (layoutMode === 'grid') {\n        widthStyles.flex = `${[0, false].includes(columnDef.grow)\n            ? 0\n            : `var(--${header ? 'header' : 'col'}-${parseCSSVarId((_d = header === null || header === void 0 ? void 0 : header.id) !== null && _d !== void 0 ? _d : column.id)}-size)`} 0 auto`;\n    }\n    else if (layoutMode === 'grid-no-grow') {\n        widthStyles.flex = `${+(columnDef.grow || 0)} 0 auto`;\n    }\n    const pinnedStyles = isColumnPinned\n        ? Object.assign(Object.assign({}, getCommonPinnedCellStyles({ column, table, theme })), { left: isColumnPinned === 'left'\n                ? `${column.getStart('left')}px`\n                : undefined, opacity: 0.97, position: 'sticky', right: isColumnPinned === 'right'\n                ? `${column.getAfter('right')}px`\n                : undefined }) : {};\n    return Object.assign(Object.assign(Object.assign({ backgroundColor: 'inherit', backgroundImage: 'inherit', display: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'flex' : undefined, justifyContent: columnDefType === 'group'\n            ? 'center'\n            : (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid'))\n                ? tableCellProps.align\n                : undefined, opacity: ((_e = table.getState().draggingColumn) === null || _e === void 0 ? void 0 : _e.id) === column.id ||\n            ((_f = table.getState().hoveredColumn) === null || _f === void 0 ? void 0 : _f.id) === column.id\n            ? 0.5\n            : 1, position: 'relative', transition: enableColumnVirtualization\n            ? 'none'\n            : `padding 150ms ease-in-out`, zIndex: column.getIsResizing() || (draggingColumn === null || draggingColumn === void 0 ? void 0 : draggingColumn.id) === column.id\n            ? 2\n            : columnDefType !== 'group' && isColumnPinned\n                ? 1\n                : 0 }, pinnedStyles), widthStyles), parseFromValuesOrFunc(tableCellProps === null || tableCellProps === void 0 ? void 0 : tableCellProps.sx, theme));\n};\nconst getCommonToolbarStyles = ({ table, }) => ({\n    alignItems: 'flex-start',\n    backgroundColor: table.options.mrtTheme.baseBackgroundColor,\n    display: 'grid',\n    flexWrap: 'wrap-reverse',\n    minHeight: '3.5rem',\n    overflow: 'hidden',\n    position: 'relative',\n    transition: 'all 150ms ease-in-out',\n    zIndex: 1,\n});\nconst flipIconStyles = (theme) => theme.direction === 'rtl'\n    ? { style: { transform: 'scaleX(-1)' } }\n    : undefined;\nconst getCommonTooltipProps = (placement) => ({\n    disableInteractive: true,\n    enterDelay: 1000,\n    enterNextDelay: 1000,\n    placement,\n});\n\nconst MRT_ActionMenuItem = (_a) => {\n    var { icon, label, onOpenSubMenu, table } = _a, rest = __rest(_a, [\"icon\", \"label\", \"onOpenSubMenu\", \"table\"]);\n    const { options: { icons: { ArrowRightIcon }, }, } = table;\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_12__[\"default\"], Object.assign({ sx: {\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            minWidth: '120px',\n            my: 0,\n            py: '6px',\n        } }, rest, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { sx: {\n                    alignItems: 'center',\n                    display: 'flex',\n                }, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_ListItemIcon__WEBPACK_IMPORTED_MODULE_13__[\"default\"], { children: icon }), label] }), onOpenSubMenu && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_8__[\"default\"], { onClick: onOpenSubMenu, onMouseEnter: onOpenSubMenu, size: \"small\", sx: { p: 0 }, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ArrowRightIcon, {}) }))] })));\n};\n\nconst MRT_RowActionMenu = (_a) => {\n    var { anchorEl, handleEdit, row, setAnchorEl, staticRowIndex, table } = _a, rest = __rest(_a, [\"anchorEl\", \"handleEdit\", \"row\", \"setAnchorEl\", \"staticRowIndex\", \"table\"]);\n    const { getState, options: { editDisplayMode, enableEditing, icons: { EditIcon }, localization, mrtTheme: { menuBackgroundColor }, renderRowActionMenuItems, }, } = table;\n    const { density } = getState();\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_Menu__WEBPACK_IMPORTED_MODULE_14__[\"default\"], Object.assign({ MenuListProps: {\n            dense: density === 'compact',\n            sx: {\n                backgroundColor: menuBackgroundColor,\n            },\n        }, anchorEl: anchorEl, disableScrollLock: true, onClick: (event) => event.stopPropagation(), onClose: () => setAnchorEl(null), open: !!anchorEl }, rest, { children: [parseFromValuesOrFunc(enableEditing, row) &&\n                ['modal', 'row'].includes(editDisplayMode) && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ActionMenuItem, { icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(EditIcon, {}), label: localization.edit, onClick: handleEdit, table: table })), renderRowActionMenuItems === null || renderRowActionMenuItems === void 0 ? void 0 : renderRowActionMenuItems({\n                closeMenu: () => setAnchorEl(null),\n                row,\n                staticRowIndex,\n                table,\n            })] })));\n};\n\nconst commonIconButtonStyles = {\n    '&:hover': {\n        opacity: 1,\n    },\n    height: '2rem',\n    ml: '10px',\n    opacity: 0.5,\n    transition: 'opacity 150ms',\n    width: '2rem',\n};\nconst MRT_ToggleRowActionMenuButton = (_a) => {\n    var { cell, row, staticRowIndex, table } = _a, rest = __rest(_a, [\"cell\", \"row\", \"staticRowIndex\", \"table\"]);\n    const { getState, options: { createDisplayMode, editDisplayMode, enableEditing, icons: { EditIcon, MoreHorizIcon }, localization, renderRowActionMenuItems, renderRowActions, }, setEditingRow, } = table;\n    const { creatingRow, editingRow } = getState();\n    const isCreating = (creatingRow === null || creatingRow === void 0 ? void 0 : creatingRow.id) === row.id;\n    const isEditing = (editingRow === null || editingRow === void 0 ? void 0 : editingRow.id) === row.id;\n    const showEditActionButtons = (isCreating && createDisplayMode === 'row') ||\n        (isEditing && editDisplayMode === 'row');\n    const [anchorEl, setAnchorEl] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const handleOpenRowActionMenu = (event) => {\n        event.stopPropagation();\n        event.preventDefault();\n        setAnchorEl(event.currentTarget);\n    };\n    const handleStartEditMode = (event) => {\n        event.stopPropagation();\n        setEditingRow(Object.assign({}, row));\n        setAnchorEl(null);\n    };\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children: renderRowActions && !showEditActionButtons ? (renderRowActions({ cell, row, staticRowIndex, table })) : showEditActionButtons ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_EditActionButtons, { row: row, table: table })) : !renderRowActionMenuItems &&\n            parseFromValuesOrFunc(enableEditing, row) &&\n            ['modal', 'row'].includes(editDisplayMode) ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { placement: \"right\", title: localization.edit, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_8__[\"default\"], Object.assign({ \"aria-label\": localization.edit, onClick: handleStartEditMode, sx: commonIconButtonStyles }, rest, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(EditIcon, {}) })) })) : renderRowActionMenuItems ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], Object.assign({}, getCommonTooltipProps(), { title: localization.rowActions, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_8__[\"default\"], Object.assign({ \"aria-label\": localization.rowActions, onClick: handleOpenRowActionMenu, size: \"small\", sx: commonIconButtonStyles }, rest, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MoreHorizIcon, {}) })) })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_RowActionMenu, { anchorEl: anchorEl, handleEdit: handleStartEditMode, row: row, setAnchorEl: setAnchorEl, staticRowIndex: staticRowIndex, table: table })] })) : null }));\n};\n\nconst getMRT_RowActionsColumnDef = (tableOptions) => {\n    return Object.assign({ Cell: ({ cell, row, staticRowIndex, table }) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ToggleRowActionMenuButton, { cell: cell, row: row, staticRowIndex: staticRowIndex, table: table })) }, defaultDisplayColumnProps({\n        header: 'actions',\n        id: 'mrt-row-actions',\n        size: 70,\n        tableOptions,\n    }));\n};\n\nconst MRT_GrabHandleButton = (_a) => {\n    var _b, _c;\n    var { location, table } = _a, rest = __rest(_a, [\"location\", \"table\"]);\n    const { options: { icons: { DragHandleIcon }, localization, }, } = table;\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], Object.assign({}, getCommonTooltipProps('top'), { title: (_b = rest === null || rest === void 0 ? void 0 : rest.title) !== null && _b !== void 0 ? _b : localization.move, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_8__[\"default\"], Object.assign({ \"aria-label\": (_c = rest.title) !== null && _c !== void 0 ? _c : localization.move, disableRipple: true, draggable: \"true\", size: \"small\" }, rest, { onClick: (e) => {\n                var _a;\n                e.stopPropagation();\n                (_a = rest === null || rest === void 0 ? void 0 : rest.onClick) === null || _a === void 0 ? void 0 : _a.call(rest, e);\n            }, sx: (theme) => (Object.assign({ '&:active': {\n                    cursor: 'grabbing',\n                }, '&:hover': {\n                    backgroundColor: 'transparent',\n                    opacity: 1,\n                }, cursor: 'grab', m: '0 -0.1rem', opacity: location === 'row' ? 1 : 0.5, p: '2px', transition: 'all 150ms ease-in-out' }, parseFromValuesOrFunc(rest === null || rest === void 0 ? void 0 : rest.sx, theme))), title: undefined, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(DragHandleIcon, {}) })) })));\n};\n\nconst MRT_TableBodyRowGrabHandle = (_a) => {\n    var { row, rowRef, table } = _a, rest = __rest(_a, [\"row\", \"rowRef\", \"table\"]);\n    const { options: { muiRowDragHandleProps }, } = table;\n    const iconButtonProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiRowDragHandleProps, {\n        row,\n        table,\n    })), rest);\n    const handleDragStart = (event) => {\n        var _a;\n        (_a = iconButtonProps === null || iconButtonProps === void 0 ? void 0 : iconButtonProps.onDragStart) === null || _a === void 0 ? void 0 : _a.call(iconButtonProps, event);\n        try {\n            event.dataTransfer.setDragImage(rowRef.current, 0, 0);\n        }\n        catch (e) {\n            console.error(e);\n        }\n        table.setDraggingRow(row);\n    };\n    const handleDragEnd = (event) => {\n        var _a;\n        (_a = iconButtonProps === null || iconButtonProps === void 0 ? void 0 : iconButtonProps.onDragEnd) === null || _a === void 0 ? void 0 : _a.call(iconButtonProps, event);\n        table.setDraggingRow(null);\n        table.setHoveredRow(null);\n    };\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_GrabHandleButton, Object.assign({}, iconButtonProps, { location: \"row\", onDragEnd: handleDragEnd, onDragStart: handleDragStart, table: table })));\n};\n\nconst getMRT_RowDragColumnDef = (tableOptions) => {\n    return Object.assign({ Cell: ({ row, rowRef, table }) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_TableBodyRowGrabHandle, { row: row, rowRef: rowRef, table: table })), grow: false }, defaultDisplayColumnProps({\n        header: 'move',\n        id: 'mrt-row-drag',\n        size: 60,\n        tableOptions,\n    }));\n};\n\nconst MRT_ExpandAllButton = (_a) => {\n    var _b, _c;\n    var { table } = _a, rest = __rest(_a, [\"table\"]);\n    const { getCanSomeRowsExpand, getIsAllRowsExpanded, getIsSomeRowsExpanded, getState, options: { icons: { KeyboardDoubleArrowDownIcon }, localization, muiExpandAllButtonProps, renderDetailPanel, }, toggleAllRowsExpanded, } = table;\n    const { density, isLoading } = getState();\n    const iconButtonProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiExpandAllButtonProps, {\n        table,\n    })), rest);\n    const isAllRowsExpanded = getIsAllRowsExpanded();\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], Object.assign({}, getCommonTooltipProps(), { title: (_b = iconButtonProps === null || iconButtonProps === void 0 ? void 0 : iconButtonProps.title) !== null && _b !== void 0 ? _b : (isAllRowsExpanded ? localization.collapseAll : localization.expandAll), children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\", { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_8__[\"default\"], Object.assign({ \"aria-label\": localization.expandAll, disabled: isLoading || (!renderDetailPanel && !getCanSomeRowsExpand()), onClick: () => toggleAllRowsExpanded(!isAllRowsExpanded) }, iconButtonProps, { sx: (theme) => (Object.assign({ height: density === 'compact' ? '1.75rem' : '2.25rem', mt: density !== 'compact' ? '-0.25rem' : undefined, width: density === 'compact' ? '1.75rem' : '2.25rem' }, parseFromValuesOrFunc(iconButtonProps === null || iconButtonProps === void 0 ? void 0 : iconButtonProps.sx, theme))), title: undefined, children: (_c = iconButtonProps === null || iconButtonProps === void 0 ? void 0 : iconButtonProps.children) !== null && _c !== void 0 ? _c : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(KeyboardDoubleArrowDownIcon, { style: {\n                        transform: `rotate(${isAllRowsExpanded ? -180 : getIsSomeRowsExpanded() ? -90 : 0}deg)`,\n                        transition: 'transform 150ms',\n                    } })) })) }) })));\n};\n\nconst MRT_ExpandButton = ({ row, staticRowIndex, table, }) => {\n    var _a, _b;\n    const theme = (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_15__[\"default\"])();\n    const { getState, options: { icons: { ExpandMoreIcon }, localization, muiExpandButtonProps, positionExpandColumn, renderDetailPanel, }, } = table;\n    const { density } = getState();\n    const iconButtonProps = parseFromValuesOrFunc(muiExpandButtonProps, {\n        row,\n        staticRowIndex,\n        table,\n    });\n    const canExpand = row.getCanExpand();\n    const isExpanded = row.getIsExpanded();\n    const handleToggleExpand = (event) => {\n        var _a;\n        event.stopPropagation();\n        row.toggleExpanded();\n        (_a = iconButtonProps === null || iconButtonProps === void 0 ? void 0 : iconButtonProps.onClick) === null || _a === void 0 ? void 0 : _a.call(iconButtonProps, event);\n    };\n    const detailPanel = !!(renderDetailPanel === null || renderDetailPanel === void 0 ? void 0 : renderDetailPanel({ row, table }));\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], Object.assign({ disableHoverListener: !canExpand && !detailPanel }, getCommonTooltipProps(), { title: (_a = iconButtonProps === null || iconButtonProps === void 0 ? void 0 : iconButtonProps.title) !== null && _a !== void 0 ? _a : (isExpanded ? localization.collapse : localization.expand), children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\", { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_8__[\"default\"], Object.assign({ \"aria-label\": localization.expand, disabled: !canExpand && !detailPanel }, iconButtonProps, { onClick: handleToggleExpand, sx: (theme) => (Object.assign({ height: density === 'compact' ? '1.75rem' : '2.25rem', opacity: !canExpand && !detailPanel ? 0.3 : 1, [theme.direction === 'rtl' || positionExpandColumn === 'last'\n                        ? 'mr'\n                        : 'ml']: `${row.depth * 16}px`, width: density === 'compact' ? '1.75rem' : '2.25rem' }, parseFromValuesOrFunc(iconButtonProps === null || iconButtonProps === void 0 ? void 0 : iconButtonProps.sx, theme))), title: undefined, children: (_b = iconButtonProps === null || iconButtonProps === void 0 ? void 0 : iconButtonProps.children) !== null && _b !== void 0 ? _b : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ExpandMoreIcon, { style: {\n                        transform: `rotate(${!canExpand && !renderDetailPanel\n                            ? positionExpandColumn === 'last' ||\n                                theme.direction === 'rtl'\n                                ? 90\n                                : -90\n                            : isExpanded\n                                ? -180\n                                : 0}deg)`,\n                        transition: 'transform 150ms',\n                    } })) })) }) })));\n};\n\nconst getMRT_RowExpandColumnDef = (tableOptions) => {\n    var _a;\n    const { defaultColumn, enableExpandAll, groupedColumnMode, positionExpandColumn, renderDetailPanel, state: { grouping }, } = tableOptions;\n    const alignProps = positionExpandColumn === 'last'\n        ? {\n            align: 'right',\n        }\n        : undefined;\n    return Object.assign({ Cell: ({ cell, column, row, staticRowIndex, table }) => {\n            var _a, _b, _c;\n            const expandButtonProps = { row, staticRowIndex, table };\n            const subRowsLength = (_a = row.subRows) === null || _a === void 0 ? void 0 : _a.length;\n            if (groupedColumnMode === 'remove' && row.groupingColumnId) {\n                return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_Stack__WEBPACK_IMPORTED_MODULE_16__[\"default\"], { alignItems: \"center\", flexDirection: \"row\", gap: \"0.25rem\", children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ExpandButton, Object.assign({}, expandButtonProps)), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], Object.assign({}, getCommonTooltipProps('right'), { title: table.getColumn(row.groupingColumnId).columnDef.header, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\", { children: row.groupingValue }) })), !!subRowsLength && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"span\", { children: [\"(\", subRowsLength, \")\"] })] }));\n            }\n            else {\n                return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ExpandButton, Object.assign({}, expandButtonProps)), (_c = (_b = column.columnDef).GroupedCell) === null || _c === void 0 ? void 0 : _c.call(_b, { cell, column, row, table })] }));\n            }\n        }, Header: enableExpandAll\n            ? ({ table }) => {\n                var _a;\n                return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ExpandAllButton, { table: table }), groupedColumnMode === 'remove' &&\n                            ((_a = grouping === null || grouping === void 0 ? void 0 : grouping.map((groupedColumnId) => table.getColumn(groupedColumnId).columnDef.header)) === null || _a === void 0 ? void 0 : _a.join(', '))] }));\n            }\n            : undefined, muiTableBodyCellProps: alignProps, muiTableHeadCellProps: alignProps }, defaultDisplayColumnProps({\n        header: 'expand',\n        id: 'mrt-row-expand',\n        size: groupedColumnMode === 'remove'\n            ? (_a = defaultColumn === null || defaultColumn === void 0 ? void 0 : defaultColumn.size) !== null && _a !== void 0 ? _a : 180\n            : renderDetailPanel\n                ? enableExpandAll\n                    ? 60\n                    : 70\n                : 100,\n        tableOptions,\n    }));\n};\n\nconst getMRT_RowNumbersColumnDef = (tableOptions) => {\n    const { localization, rowNumberDisplayMode } = tableOptions;\n    const { pagination: { pageIndex, pageSize }, } = tableOptions.state;\n    return Object.assign({ Cell: ({ row, staticRowIndex }) => {\n            var _a;\n            return ((_a = (rowNumberDisplayMode === 'static'\n                ? (staticRowIndex || 0) + (pageSize || 0) * (pageIndex || 0)\n                : row.index)) !== null && _a !== void 0 ? _a : 0) + 1;\n        }, Header: () => localization.rowNumber, grow: false }, defaultDisplayColumnProps({\n        header: 'rowNumbers',\n        id: 'mrt-row-numbers',\n        size: 50,\n        tableOptions,\n    }));\n};\n\nconst MRT_RowPinButton = (_a) => {\n    var { pinningPosition, row, table } = _a, rest = __rest(_a, [\"pinningPosition\", \"row\", \"table\"]);\n    const { options: { icons: { CloseIcon, PushPinIcon }, localization, rowPinningDisplayMode, }, } = table;\n    const isPinned = row.getIsPinned();\n    const [tooltipOpened, setTooltipOpened] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const handleTogglePin = (event) => {\n        setTooltipOpened(false);\n        event.stopPropagation();\n        row.pin(isPinned ? false : pinningPosition);\n    };\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], Object.assign({}, getCommonTooltipProps(), { open: tooltipOpened, title: isPinned ? localization.unpin : localization.pin, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_8__[\"default\"], Object.assign({ \"aria-label\": localization.pin, onClick: handleTogglePin, onMouseEnter: () => setTooltipOpened(true), onMouseLeave: () => setTooltipOpened(false), size: \"small\" }, rest, { sx: (theme) => (Object.assign({ height: '24px', width: '24px' }, parseFromValuesOrFunc(rest === null || rest === void 0 ? void 0 : rest.sx, theme))), children: isPinned ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(CloseIcon, {})) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(PushPinIcon, { fontSize: \"small\", style: {\n                    transform: `rotate(${rowPinningDisplayMode === 'sticky'\n                        ? 135\n                        : pinningPosition === 'top'\n                            ? 180\n                            : 0}deg)`,\n                } })) })) })));\n};\n\nconst MRT_TableBodyRowPinButton = (_a) => {\n    var { row, table } = _a, rest = __rest(_a, [\"row\", \"table\"]);\n    const { getState, options: { enableRowPinning, rowPinningDisplayMode }, } = table;\n    const { density } = getState();\n    const canPin = parseFromValuesOrFunc(enableRowPinning, row);\n    if (!canPin)\n        return null;\n    const rowPinButtonProps = Object.assign({ row,\n        table }, rest);\n    if (rowPinningDisplayMode === 'top-and-bottom' && !row.getIsPinned()) {\n        return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { sx: {\n                display: 'flex',\n                flexDirection: density === 'compact' ? 'row' : 'column',\n            }, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_RowPinButton, Object.assign({ pinningPosition: \"top\" }, rowPinButtonProps)), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_RowPinButton, Object.assign({ pinningPosition: \"bottom\" }, rowPinButtonProps))] }));\n    }\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_RowPinButton, Object.assign({ pinningPosition: rowPinningDisplayMode === 'bottom' ? 'bottom' : 'top' }, rowPinButtonProps)));\n};\n\nconst getMRT_RowPinningColumnDef = (tableOptions) => {\n    return Object.assign({ Cell: ({ row, table }) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_TableBodyRowPinButton, { row: row, table: table })), grow: false }, defaultDisplayColumnProps({\n        header: 'pin',\n        id: 'mrt-row-pin',\n        size: 60,\n        tableOptions,\n    }));\n};\n\nconst MRT_SelectCheckbox = (_a) => {\n    var _b;\n    var { row, staticRowIndex, table } = _a, rest = __rest(_a, [\"row\", \"staticRowIndex\", \"table\"]);\n    const { getState, options: { enableMultiRowSelection, localization, muiSelectAllCheckboxProps, muiSelectCheckboxProps, selectAllMode, }, } = table;\n    const { density, isLoading } = getState();\n    const selectAll = !row;\n    const allRowsSelected = selectAll\n        ? selectAllMode === 'page'\n            ? table.getIsAllPageRowsSelected()\n            : table.getIsAllRowsSelected()\n        : undefined;\n    const isChecked = selectAll\n        ? allRowsSelected\n        : getIsRowSelected({ row, table });\n    const checkboxProps = Object.assign(Object.assign({}, (selectAll\n        ? parseFromValuesOrFunc(muiSelectAllCheckboxProps, { table })\n        : parseFromValuesOrFunc(muiSelectCheckboxProps, {\n            row,\n            staticRowIndex,\n            table,\n        }))), rest);\n    const onSelectionChange = row\n        ? getMRT_RowSelectionHandler({\n            row,\n            staticRowIndex,\n            table,\n        })\n        : undefined;\n    const onSelectAllChange = getMRT_SelectAllHandler({ table });\n    const commonProps = Object.assign(Object.assign({ 'aria-label': selectAll\n            ? localization.toggleSelectAll\n            : localization.toggleSelectRow, checked: isChecked, disabled: isLoading || (row && !row.getCanSelect()) || (row === null || row === void 0 ? void 0 : row.id) === 'mrt-row-create', inputProps: {\n            'aria-label': selectAll\n                ? localization.toggleSelectAll\n                : localization.toggleSelectRow,\n        }, onChange: (event) => {\n            event.stopPropagation();\n            selectAll ? onSelectAllChange(event) : onSelectionChange(event);\n        }, size: (density === 'compact' ? 'small' : 'medium') }, checkboxProps), { onClick: (e) => {\n            var _a;\n            e.stopPropagation();\n            (_a = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.onClick) === null || _a === void 0 ? void 0 : _a.call(checkboxProps, e);\n        }, sx: (theme) => (Object.assign({ height: density === 'compact' ? '1.75rem' : '2.5rem', m: density !== 'compact' ? '-0.4rem' : undefined, width: density === 'compact' ? '1.75rem' : '2.5rem', zIndex: 0 }, parseFromValuesOrFunc(checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.sx, theme))), title: undefined });\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], Object.assign({}, getCommonTooltipProps(), { title: (_b = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.title) !== null && _b !== void 0 ? _b : (selectAll\n            ? localization.toggleSelectAll\n            : localization.toggleSelectRow), children: enableMultiRowSelection === false ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Radio__WEBPACK_IMPORTED_MODULE_17__[\"default\"], Object.assign({}, commonProps))) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Checkbox__WEBPACK_IMPORTED_MODULE_18__[\"default\"], Object.assign({ indeterminate: !isChecked && selectAll\n                ? table.getIsSomeRowsSelected()\n                : (row === null || row === void 0 ? void 0 : row.getIsSomeSelected()) && row.getCanSelectSubRows() }, commonProps))) })));\n};\n\nconst getMRT_RowSelectColumnDef = (tableOptions) => {\n    const { enableMultiRowSelection, enableSelectAll } = tableOptions;\n    return Object.assign({ Cell: ({ row, staticRowIndex, table }) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_SelectCheckbox, { row: row, staticRowIndex: staticRowIndex, table: table })), Header: enableSelectAll && enableMultiRowSelection\n            ? ({ table }) => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_SelectCheckbox, { table: table })\n            : undefined, grow: false }, defaultDisplayColumnProps({\n        header: 'select',\n        id: 'mrt-row-select',\n        size: enableSelectAll ? 60 : 70,\n        tableOptions,\n    }));\n};\n\nconst MRT_Default_Icons = {\n    ArrowDownwardIcon: _mui_icons_material_ArrowDownward__WEBPACK_IMPORTED_MODULE_19__[\"default\"],\n    ArrowRightIcon: _mui_icons_material_ArrowRight__WEBPACK_IMPORTED_MODULE_20__[\"default\"],\n    CancelIcon: _mui_icons_material_Cancel__WEBPACK_IMPORTED_MODULE_21__[\"default\"],\n    ChevronLeftIcon: _mui_icons_material_ChevronLeft__WEBPACK_IMPORTED_MODULE_22__[\"default\"],\n    ChevronRightIcon: _mui_icons_material_ChevronRight__WEBPACK_IMPORTED_MODULE_23__[\"default\"],\n    ClearAllIcon: _mui_icons_material_ClearAll__WEBPACK_IMPORTED_MODULE_24__[\"default\"],\n    CloseIcon: _mui_icons_material_Close__WEBPACK_IMPORTED_MODULE_25__[\"default\"],\n    ContentCopy: _mui_icons_material_ContentCopy__WEBPACK_IMPORTED_MODULE_26__[\"default\"],\n    DensityLargeIcon: _mui_icons_material_DensityLarge__WEBPACK_IMPORTED_MODULE_27__[\"default\"],\n    DensityMediumIcon: _mui_icons_material_DensityMedium__WEBPACK_IMPORTED_MODULE_28__[\"default\"],\n    DensitySmallIcon: _mui_icons_material_DensitySmall__WEBPACK_IMPORTED_MODULE_29__[\"default\"],\n    DragHandleIcon: _mui_icons_material_DragHandle__WEBPACK_IMPORTED_MODULE_30__[\"default\"],\n    DynamicFeedIcon: _mui_icons_material_DynamicFeed__WEBPACK_IMPORTED_MODULE_31__[\"default\"],\n    EditIcon: _mui_icons_material_Edit__WEBPACK_IMPORTED_MODULE_32__[\"default\"],\n    ExpandMoreIcon: _mui_icons_material_ExpandMore__WEBPACK_IMPORTED_MODULE_33__[\"default\"],\n    FilterAltIcon: _mui_icons_material_FilterAlt__WEBPACK_IMPORTED_MODULE_34__[\"default\"],\n    FilterListIcon: _mui_icons_material_FilterList__WEBPACK_IMPORTED_MODULE_35__[\"default\"],\n    FilterListOffIcon: _mui_icons_material_FilterListOff__WEBPACK_IMPORTED_MODULE_36__[\"default\"],\n    FirstPageIcon: _mui_icons_material_FirstPage__WEBPACK_IMPORTED_MODULE_37__[\"default\"],\n    FullscreenExitIcon: _mui_icons_material_FullscreenExit__WEBPACK_IMPORTED_MODULE_38__[\"default\"],\n    FullscreenIcon: _mui_icons_material_Fullscreen__WEBPACK_IMPORTED_MODULE_39__[\"default\"],\n    KeyboardDoubleArrowDownIcon: _mui_icons_material_KeyboardDoubleArrowDown__WEBPACK_IMPORTED_MODULE_40__[\"default\"],\n    LastPageIcon: _mui_icons_material_LastPage__WEBPACK_IMPORTED_MODULE_41__[\"default\"],\n    MoreHorizIcon: _mui_icons_material_MoreHoriz__WEBPACK_IMPORTED_MODULE_42__[\"default\"],\n    MoreVertIcon: _mui_icons_material_MoreVert__WEBPACK_IMPORTED_MODULE_43__[\"default\"],\n    PushPinIcon: _mui_icons_material_PushPin__WEBPACK_IMPORTED_MODULE_44__[\"default\"],\n    RestartAltIcon: _mui_icons_material_RestartAlt__WEBPACK_IMPORTED_MODULE_45__[\"default\"],\n    SaveIcon: _mui_icons_material_Save__WEBPACK_IMPORTED_MODULE_46__[\"default\"],\n    SearchIcon: _mui_icons_material_Search__WEBPACK_IMPORTED_MODULE_47__[\"default\"],\n    SearchOffIcon: _mui_icons_material_SearchOff__WEBPACK_IMPORTED_MODULE_48__[\"default\"],\n    SortIcon: _mui_icons_material_Sort__WEBPACK_IMPORTED_MODULE_49__[\"default\"],\n    SyncAltIcon: _mui_icons_material_SyncAlt__WEBPACK_IMPORTED_MODULE_50__[\"default\"],\n    ViewColumnIcon: _mui_icons_material_ViewColumn__WEBPACK_IMPORTED_MODULE_51__[\"default\"],\n    VisibilityOffIcon: _mui_icons_material_VisibilityOff__WEBPACK_IMPORTED_MODULE_52__[\"default\"],\n};\n\nconst MRT_Localization_EN = {\n    actions: 'Actions',\n    and: 'and',\n    cancel: 'Cancel',\n    changeFilterMode: 'Change filter mode',\n    changeSearchMode: 'Change search mode',\n    clearFilter: 'Clear filter',\n    clearSearch: 'Clear search',\n    clearSelection: 'Clear selection',\n    clearSort: 'Clear sort',\n    clickToCopy: 'Click to copy',\n    copy: 'Copy',\n    collapse: 'Collapse',\n    collapseAll: 'Collapse all',\n    columnActions: 'Column Actions',\n    copiedToClipboard: 'Copied to clipboard',\n    dropToGroupBy: 'Drop to group by {column}',\n    edit: 'Edit',\n    expand: 'Expand',\n    expandAll: 'Expand all',\n    filterArrIncludes: 'Includes',\n    filterArrIncludesAll: 'Includes all',\n    filterArrIncludesSome: 'Includes',\n    filterBetween: 'Between',\n    filterBetweenInclusive: 'Between Inclusive',\n    filterByColumn: 'Filter by {column}',\n    filterContains: 'Contains',\n    filterEmpty: 'Empty',\n    filterEndsWith: 'Ends With',\n    filterEquals: 'Equals',\n    filterEqualsString: 'Equals',\n    filterFuzzy: 'Fuzzy',\n    filterGreaterThan: 'Greater Than',\n    filterGreaterThanOrEqualTo: 'Greater Than Or Equal To',\n    filterInNumberRange: 'Between',\n    filterIncludesString: 'Contains',\n    filterIncludesStringSensitive: 'Contains',\n    filterLessThan: 'Less Than',\n    filterLessThanOrEqualTo: 'Less Than Or Equal To',\n    filterMode: 'Filter Mode: {filterType}',\n    filterNotEmpty: 'Not Empty',\n    filterNotEquals: 'Not Equals',\n    filterStartsWith: 'Starts With',\n    filterWeakEquals: 'Equals',\n    filteringByColumn: 'Filtering by {column} - {filterType} {filterValue}',\n    goToFirstPage: 'Go to first page',\n    goToLastPage: 'Go to last page',\n    goToNextPage: 'Go to next page',\n    goToPreviousPage: 'Go to previous page',\n    grab: 'Grab',\n    groupByColumn: 'Group by {column}',\n    groupedBy: 'Grouped by ',\n    hideAll: 'Hide all',\n    hideColumn: 'Hide {column} column',\n    max: 'Max',\n    min: 'Min',\n    move: 'Move',\n    noRecordsToDisplay: 'No records to display',\n    noResultsFound: 'No results found',\n    of: 'of',\n    or: 'or',\n    pin: 'Pin',\n    pinToLeft: 'Pin to left',\n    pinToRight: 'Pin to right',\n    resetColumnSize: 'Reset column size',\n    resetOrder: 'Reset order',\n    rowActions: 'Row Actions',\n    rowNumber: '#',\n    rowNumbers: 'Row Numbers',\n    rowsPerPage: 'Rows per page',\n    save: 'Save',\n    search: 'Search',\n    selectedCountOfRowCountRowsSelected: '{selectedCount} of {rowCount} row(s) selected',\n    select: 'Select',\n    showAll: 'Show all',\n    showAllColumns: 'Show all columns',\n    showHideColumns: 'Show/Hide columns',\n    showHideFilters: 'Show/Hide filters',\n    showHideSearch: 'Show/Hide search',\n    sortByColumnAsc: 'Sort by {column} ascending',\n    sortByColumnDesc: 'Sort by {column} descending',\n    sortedByColumnAsc: 'Sorted by {column} ascending',\n    sortedByColumnDesc: 'Sorted by {column} descending',\n    thenBy: ', then by ',\n    toggleDensity: 'Toggle density',\n    toggleFullScreen: 'Toggle full screen',\n    toggleSelectAll: 'Toggle select all',\n    toggleSelectRow: 'Toggle select row',\n    toggleVisibility: 'Toggle visibility',\n    ungroupByColumn: 'Ungroup by {column}',\n    unpin: 'Unpin',\n    unpinAll: 'Unpin all',\n};\n\nconst MRT_DefaultColumn = {\n    filterVariant: 'text',\n    maxSize: 1000,\n    minSize: 40,\n    size: 180,\n};\nconst MRT_DefaultDisplayColumn = {\n    columnDefType: 'display',\n    enableClickToCopy: false,\n    enableColumnActions: false,\n    enableColumnDragging: false,\n    enableColumnFilter: false,\n    enableColumnOrdering: false,\n    enableEditing: false,\n    enableGlobalFilter: false,\n    enableGrouping: false,\n    enableHiding: false,\n    enableResizing: false,\n    enableSorting: false,\n};\nconst useMRT_TableOptions = (_a) => {\n    var _b;\n    var { aggregationFns, autoResetExpanded = false, columnFilterDisplayMode = 'subheader', columnResizeDirection, columnResizeMode = 'onChange', createDisplayMode = 'modal', defaultColumn, defaultDisplayColumn, editDisplayMode = 'modal', enableBatchRowSelection = true, enableBottomToolbar = true, enableColumnActions = true, enableColumnFilters = true, enableColumnOrdering = false, enableColumnPinning = false, enableColumnResizing = false, enableColumnVirtualization, enableDensityToggle = true, enableExpandAll = true, enableExpanding, enableFacetedValues = false, enableFilterMatchHighlighting = true, enableFilters = true, enableFullScreenToggle = true, enableGlobalFilter = true, enableGlobalFilterRankedResults = true, enableGrouping = false, enableHiding = true, enableMultiRowSelection = true, enableMultiSort = true, enablePagination = true, enableRowPinning = false, enableRowSelection = false, enableRowVirtualization, enableSelectAll = true, enableSorting = true, enableStickyHeader = false, enableTableFooter = true, enableTableHead = true, enableToolbarInternalActions = true, enableTopToolbar = true, filterFns, icons, layoutMode, localization, manualFiltering, manualGrouping, manualPagination, manualSorting, mrtTheme, paginationDisplayMode = 'default', positionActionsColumn = 'first', positionCreatingRow = 'top', positionExpandColumn = 'first', positionGlobalFilter = 'right', positionPagination = 'bottom', positionToolbarAlertBanner = 'top', positionToolbarDropZone = 'top', rowNumberDisplayMode = 'static', rowPinningDisplayMode = 'sticky', selectAllMode = 'page', sortingFns } = _a, rest = __rest(_a, [\"aggregationFns\", \"autoResetExpanded\", \"columnFilterDisplayMode\", \"columnResizeDirection\", \"columnResizeMode\", \"createDisplayMode\", \"defaultColumn\", \"defaultDisplayColumn\", \"editDisplayMode\", \"enableBatchRowSelection\", \"enableBottomToolbar\", \"enableColumnActions\", \"enableColumnFilters\", \"enableColumnOrdering\", \"enableColumnPinning\", \"enableColumnResizing\", \"enableColumnVirtualization\", \"enableDensityToggle\", \"enableExpandAll\", \"enableExpanding\", \"enableFacetedValues\", \"enableFilterMatchHighlighting\", \"enableFilters\", \"enableFullScreenToggle\", \"enableGlobalFilter\", \"enableGlobalFilterRankedResults\", \"enableGrouping\", \"enableHiding\", \"enableMultiRowSelection\", \"enableMultiSort\", \"enablePagination\", \"enableRowPinning\", \"enableRowSelection\", \"enableRowVirtualization\", \"enableSelectAll\", \"enableSorting\", \"enableStickyHeader\", \"enableTableFooter\", \"enableTableHead\", \"enableToolbarInternalActions\", \"enableTopToolbar\", \"filterFns\", \"icons\", \"layoutMode\", \"localization\", \"manualFiltering\", \"manualGrouping\", \"manualPagination\", \"manualSorting\", \"mrtTheme\", \"paginationDisplayMode\", \"positionActionsColumn\", \"positionCreatingRow\", \"positionExpandColumn\", \"positionGlobalFilter\", \"positionPagination\", \"positionToolbarAlertBanner\", \"positionToolbarDropZone\", \"rowNumberDisplayMode\", \"rowPinningDisplayMode\", \"selectAllMode\", \"sortingFns\"]);\n    const theme = (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_15__[\"default\"])();\n    icons = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => (Object.assign(Object.assign({}, MRT_Default_Icons), icons)), [icons]);\n    localization = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => (Object.assign(Object.assign({}, MRT_Localization_EN), localization)), [localization]);\n    mrtTheme = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => getMRTTheme(mrtTheme, theme), [mrtTheme, theme]);\n    aggregationFns = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => (Object.assign(Object.assign({}, MRT_AggregationFns), aggregationFns)), []);\n    filterFns = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => (Object.assign(Object.assign({}, MRT_FilterFns), filterFns)), []);\n    sortingFns = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => (Object.assign(Object.assign({}, MRT_SortingFns), sortingFns)), []);\n    defaultColumn = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => (Object.assign(Object.assign({}, MRT_DefaultColumn), defaultColumn)), [defaultColumn]);\n    defaultDisplayColumn = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => (Object.assign(Object.assign({}, MRT_DefaultDisplayColumn), defaultDisplayColumn)), [defaultDisplayColumn]);\n    //cannot be changed after initialization\n    [enableColumnVirtualization, enableRowVirtualization] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => [enableColumnVirtualization, enableRowVirtualization], []);\n    if (!columnResizeDirection) {\n        columnResizeDirection = theme.direction || 'ltr';\n    }\n    layoutMode =\n        layoutMode || (enableColumnResizing ? 'grid-no-grow' : 'semantic');\n    if (layoutMode === 'semantic' &&\n        (enableRowVirtualization || enableColumnVirtualization)) {\n        layoutMode = 'grid';\n    }\n    if (enableRowVirtualization) {\n        enableStickyHeader = true;\n    }\n    if (enablePagination === false && manualPagination === undefined) {\n        manualPagination = true;\n    }\n    if (!((_b = rest.data) === null || _b === void 0 ? void 0 : _b.length)) {\n        manualFiltering = true;\n        manualGrouping = true;\n        manualPagination = true;\n        manualSorting = true;\n    }\n    return Object.assign({ aggregationFns,\n        autoResetExpanded,\n        columnFilterDisplayMode,\n        columnResizeDirection,\n        columnResizeMode,\n        createDisplayMode,\n        defaultColumn,\n        defaultDisplayColumn,\n        editDisplayMode,\n        enableBatchRowSelection,\n        enableBottomToolbar,\n        enableColumnActions,\n        enableColumnFilters,\n        enableColumnOrdering,\n        enableColumnPinning,\n        enableColumnResizing,\n        enableColumnVirtualization,\n        enableDensityToggle,\n        enableExpandAll,\n        enableExpanding,\n        enableFacetedValues,\n        enableFilterMatchHighlighting,\n        enableFilters,\n        enableFullScreenToggle,\n        enableGlobalFilter,\n        enableGlobalFilterRankedResults,\n        enableGrouping,\n        enableHiding,\n        enableMultiRowSelection,\n        enableMultiSort,\n        enablePagination,\n        enableRowPinning,\n        enableRowSelection,\n        enableRowVirtualization,\n        enableSelectAll,\n        enableSorting,\n        enableStickyHeader,\n        enableTableFooter,\n        enableTableHead,\n        enableToolbarInternalActions,\n        enableTopToolbar,\n        filterFns, getCoreRowModel: (0,_tanstack_react_table__WEBPACK_IMPORTED_MODULE_4__.getCoreRowModel)(), getExpandedRowModel: enableExpanding || enableGrouping ? (0,_tanstack_react_table__WEBPACK_IMPORTED_MODULE_4__.getExpandedRowModel)() : undefined, getFacetedMinMaxValues: enableFacetedValues\n            ? (0,_tanstack_react_table__WEBPACK_IMPORTED_MODULE_4__.getFacetedMinMaxValues)()\n            : undefined, getFacetedRowModel: enableFacetedValues ? (0,_tanstack_react_table__WEBPACK_IMPORTED_MODULE_4__.getFacetedRowModel)() : undefined, getFacetedUniqueValues: enableFacetedValues\n            ? (0,_tanstack_react_table__WEBPACK_IMPORTED_MODULE_4__.getFacetedUniqueValues)()\n            : undefined, getFilteredRowModel: (enableColumnFilters || enableGlobalFilter || enableFilters) &&\n            !manualFiltering\n            ? (0,_tanstack_react_table__WEBPACK_IMPORTED_MODULE_4__.getFilteredRowModel)()\n            : undefined, getGroupedRowModel: enableGrouping && !manualGrouping ? (0,_tanstack_react_table__WEBPACK_IMPORTED_MODULE_4__.getGroupedRowModel)() : undefined, getPaginationRowModel: enablePagination && !manualPagination\n            ? (0,_tanstack_react_table__WEBPACK_IMPORTED_MODULE_4__.getPaginationRowModel)()\n            : undefined, getSortedRowModel: enableSorting && !manualSorting ? (0,_tanstack_react_table__WEBPACK_IMPORTED_MODULE_4__.getSortedRowModel)() : undefined, getSubRows: (row) => row === null || row === void 0 ? void 0 : row.subRows, icons,\n        layoutMode,\n        localization,\n        manualFiltering,\n        manualGrouping,\n        manualPagination,\n        manualSorting,\n        mrtTheme,\n        paginationDisplayMode,\n        positionActionsColumn,\n        positionCreatingRow,\n        positionExpandColumn,\n        positionGlobalFilter,\n        positionPagination,\n        positionToolbarAlertBanner,\n        positionToolbarDropZone,\n        rowNumberDisplayMode,\n        rowPinningDisplayMode,\n        selectAllMode,\n        sortingFns }, rest);\n};\n\nconst blankColProps = {\n    children: null,\n    sx: {\n        minWidth: 0,\n        p: 0,\n        width: 0,\n    },\n};\nconst getMRT_RowSpacerColumnDef = (tableOptions) => {\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, defaultDisplayColumnProps({\n        id: 'mrt-row-spacer',\n        size: 0,\n        tableOptions,\n    })), { grow: true }), MRT_DefaultDisplayColumn), { muiTableBodyCellProps: blankColProps, muiTableFooterCellProps: blankColProps, muiTableHeadCellProps: blankColProps });\n};\n\nconst useMRT_Effects = (table) => {\n    const { getIsSomeRowsPinned, getPrePaginationRowModel, getState, options: { enablePagination, enableRowPinning, rowCount }, } = table;\n    const { columnOrder, density, globalFilter, isFullScreen, isLoading, pagination, showSkeletons, sorting, } = getState();\n    const totalColumnCount = table.options.columns.length;\n    const totalRowCount = rowCount !== null && rowCount !== void 0 ? rowCount : getPrePaginationRowModel().rows.length;\n    const rerender = (0,react__WEBPACK_IMPORTED_MODULE_0__.useReducer)(() => ({}), {})[1];\n    const initialBodyHeight = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    const previousTop = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        if (typeof window !== 'undefined') {\n            initialBodyHeight.current = document.body.style.height;\n        }\n    }, []);\n    //hide scrollbars when table is in full screen mode, preserve body scroll position after full screen exit\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        if (typeof window !== 'undefined') {\n            if (isFullScreen) {\n                previousTop.current = document.body.getBoundingClientRect().top; //save scroll position\n                document.body.style.height = '100dvh'; //hide page scrollbars when table is in full screen mode\n            }\n            else {\n                document.body.style.height = initialBodyHeight.current;\n                if (!previousTop.current)\n                    return;\n                //restore scroll position\n                window.scrollTo({\n                    behavior: 'instant',\n                    top: -1 * previousTop.current,\n                });\n            }\n        }\n    }, [isFullScreen]);\n    //recalculate column order when columns change or features are toggled on/off\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        if (totalColumnCount !== columnOrder.length) {\n            table.setColumnOrder(getDefaultColumnOrderIds(table.options));\n        }\n    }, [totalColumnCount]);\n    //if page index is out of bounds, set it to the last page\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        if (!enablePagination || isLoading || showSkeletons)\n            return;\n        const { pageIndex, pageSize } = pagination;\n        const firstVisibleRowIndex = pageIndex * pageSize;\n        if (firstVisibleRowIndex >= totalRowCount) {\n            table.setPageIndex(Math.ceil(totalRowCount / pageSize) - 1);\n        }\n    }, [totalRowCount]);\n    //turn off sort when global filter is looking for ranked results\n    const appliedSort = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(sorting);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        if (sorting.length) {\n            appliedSort.current = sorting;\n        }\n    }, [sorting]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        if (!getCanRankRows(table))\n            return;\n        if (globalFilter) {\n            table.setSorting([]);\n        }\n        else {\n            table.setSorting(() => appliedSort.current || []);\n        }\n    }, [globalFilter]);\n    //fix pinned row top style when density changes\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        if (enableRowPinning && getIsSomeRowsPinned()) {\n            setTimeout(() => {\n                rerender();\n            }, 150);\n        }\n    }, [density]);\n};\n\n/**\n * The MRT hook that wraps the TanStack useReactTable hook and adds additional functionality\n * @param definedTableOptions - table options with proper defaults set\n * @returns the MRT table instance\n */\nconst useMRT_TableInstance = (definedTableOptions) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10;\n    const lastSelectedRowId = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const actionCellRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const bottomToolbarRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const editInputRefs = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({});\n    const filterInputRefs = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({});\n    const searchInputRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const tableContainerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const tableHeadCellRefs = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({});\n    const tablePaperRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const topToolbarRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const tableHeadRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const tableFooterRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    //transform initial state with proper column order\n    const initialState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        var _a, _b, _c;\n        const initState = (_a = definedTableOptions.initialState) !== null && _a !== void 0 ? _a : {};\n        initState.columnOrder =\n            (_b = initState.columnOrder) !== null && _b !== void 0 ? _b : getDefaultColumnOrderIds(Object.assign(Object.assign({}, definedTableOptions), { state: Object.assign(Object.assign({}, definedTableOptions.initialState), definedTableOptions.state) }));\n        initState.globalFilterFn = (_c = definedTableOptions.globalFilterFn) !== null && _c !== void 0 ? _c : 'fuzzy';\n        return initState;\n    }, []);\n    definedTableOptions.initialState = initialState;\n    const [actionCell, setActionCell] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_a = initialState.actionCell) !== null && _a !== void 0 ? _a : null);\n    const [creatingRow, _setCreatingRow] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_b = initialState.creatingRow) !== null && _b !== void 0 ? _b : null);\n    const [columnFilterFns, setColumnFilterFns] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => Object.assign({}, ...getAllLeafColumnDefs(definedTableOptions.columns).map((col) => {\n        var _a, _b, _c, _d;\n        return ({\n            [getColumnId(col)]: col.filterFn instanceof Function\n                ? (_a = col.filterFn.name) !== null && _a !== void 0 ? _a : 'custom'\n                : (_d = (_b = col.filterFn) !== null && _b !== void 0 ? _b : (_c = initialState === null || initialState === void 0 ? void 0 : initialState.columnFilterFns) === null || _c === void 0 ? void 0 : _c[getColumnId(col)]) !== null && _d !== void 0 ? _d : getDefaultColumnFilterFn(col),\n        });\n    })));\n    const [columnOrder, onColumnOrderChange] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_c = initialState.columnOrder) !== null && _c !== void 0 ? _c : []);\n    const [columnSizingInfo, onColumnSizingInfoChange] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_d = initialState.columnSizingInfo) !== null && _d !== void 0 ? _d : {});\n    const [density, setDensity] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_e = initialState === null || initialState === void 0 ? void 0 : initialState.density) !== null && _e !== void 0 ? _e : 'comfortable');\n    const [draggingColumn, setDraggingColumn] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_f = initialState.draggingColumn) !== null && _f !== void 0 ? _f : null);\n    const [draggingRow, setDraggingRow] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_g = initialState.draggingRow) !== null && _g !== void 0 ? _g : null);\n    const [editingCell, setEditingCell] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_h = initialState.editingCell) !== null && _h !== void 0 ? _h : null);\n    const [editingRow, setEditingRow] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_j = initialState.editingRow) !== null && _j !== void 0 ? _j : null);\n    const [globalFilterFn, setGlobalFilterFn] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_k = initialState.globalFilterFn) !== null && _k !== void 0 ? _k : 'fuzzy');\n    const [grouping, onGroupingChange] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_l = initialState.grouping) !== null && _l !== void 0 ? _l : []);\n    const [hoveredColumn, setHoveredColumn] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_m = initialState.hoveredColumn) !== null && _m !== void 0 ? _m : null);\n    const [hoveredRow, setHoveredRow] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_o = initialState.hoveredRow) !== null && _o !== void 0 ? _o : null);\n    const [isFullScreen, setIsFullScreen] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_p = initialState === null || initialState === void 0 ? void 0 : initialState.isFullScreen) !== null && _p !== void 0 ? _p : false);\n    const [pagination, onPaginationChange] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_q = initialState === null || initialState === void 0 ? void 0 : initialState.pagination) !== null && _q !== void 0 ? _q : { pageIndex: 0, pageSize: 10 });\n    const [showAlertBanner, setShowAlertBanner] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_r = initialState === null || initialState === void 0 ? void 0 : initialState.showAlertBanner) !== null && _r !== void 0 ? _r : false);\n    const [showColumnFilters, setShowColumnFilters] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_s = initialState === null || initialState === void 0 ? void 0 : initialState.showColumnFilters) !== null && _s !== void 0 ? _s : false);\n    const [showGlobalFilter, setShowGlobalFilter] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_t = initialState === null || initialState === void 0 ? void 0 : initialState.showGlobalFilter) !== null && _t !== void 0 ? _t : false);\n    const [showToolbarDropZone, setShowToolbarDropZone] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((_u = initialState === null || initialState === void 0 ? void 0 : initialState.showToolbarDropZone) !== null && _u !== void 0 ? _u : false);\n    definedTableOptions.state = Object.assign({ actionCell,\n        columnFilterFns,\n        columnOrder,\n        columnSizingInfo,\n        creatingRow,\n        density,\n        draggingColumn,\n        draggingRow,\n        editingCell,\n        editingRow,\n        globalFilterFn,\n        grouping,\n        hoveredColumn,\n        hoveredRow,\n        isFullScreen,\n        pagination,\n        showAlertBanner,\n        showColumnFilters,\n        showGlobalFilter,\n        showToolbarDropZone }, definedTableOptions.state);\n    //The table options now include all state needed to help determine column visibility and order logic\n    const statefulTableOptions = definedTableOptions;\n    //don't recompute columnDefs while resizing column or dragging column/row\n    const columnDefsRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\n    statefulTableOptions.columns =\n        statefulTableOptions.state.columnSizingInfo.isResizingColumn ||\n            statefulTableOptions.state.draggingColumn ||\n            statefulTableOptions.state.draggingRow\n            ? columnDefsRef.current\n            : prepareColumns({\n                columnDefs: [\n                    ...[\n                        showRowPinningColumn(statefulTableOptions) &&\n                            getMRT_RowPinningColumnDef(statefulTableOptions),\n                        showRowDragColumn(statefulTableOptions) &&\n                            getMRT_RowDragColumnDef(statefulTableOptions),\n                        showRowActionsColumn(statefulTableOptions) &&\n                            getMRT_RowActionsColumnDef(statefulTableOptions),\n                        showRowExpandColumn(statefulTableOptions) &&\n                            getMRT_RowExpandColumnDef(statefulTableOptions),\n                        showRowSelectionColumn(statefulTableOptions) &&\n                            getMRT_RowSelectColumnDef(statefulTableOptions),\n                        showRowNumbersColumn(statefulTableOptions) &&\n                            getMRT_RowNumbersColumnDef(statefulTableOptions),\n                    ].filter(Boolean),\n                    ...statefulTableOptions.columns,\n                    ...[\n                        showRowSpacerColumn(statefulTableOptions) &&\n                            getMRT_RowSpacerColumnDef(statefulTableOptions),\n                    ].filter(Boolean),\n                ],\n                tableOptions: statefulTableOptions,\n            });\n    columnDefsRef.current = statefulTableOptions.columns;\n    //if loading, generate blank rows to show skeleton loaders\n    statefulTableOptions.data = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => (statefulTableOptions.state.isLoading ||\n        statefulTableOptions.state.showSkeletons) &&\n        !statefulTableOptions.data.length\n        ? [\n            ...Array(Math.min(statefulTableOptions.state.pagination.pageSize, 20)).fill(null),\n        ].map(() => Object.assign({}, ...getAllLeafColumnDefs(statefulTableOptions.columns).map((col) => ({\n            [getColumnId(col)]: null,\n        }))))\n        : statefulTableOptions.data, [\n        statefulTableOptions.data,\n        statefulTableOptions.state.isLoading,\n        statefulTableOptions.state.showSkeletons,\n    ]);\n    //@ts-ignore\n    const table = (0,_tanstack_react_table__WEBPACK_IMPORTED_MODULE_3__.useReactTable)(Object.assign(Object.assign({ onColumnOrderChange,\n        onColumnSizingInfoChange,\n        onGroupingChange,\n        onPaginationChange }, statefulTableOptions), { globalFilterFn: (_v = statefulTableOptions.filterFns) === null || _v === void 0 ? void 0 : _v[globalFilterFn !== null && globalFilterFn !== void 0 ? globalFilterFn : 'fuzzy'] }));\n    table.refs = {\n        actionCellRef,\n        bottomToolbarRef,\n        editInputRefs,\n        filterInputRefs,\n        lastSelectedRowId,\n        searchInputRef,\n        tableContainerRef,\n        tableFooterRef,\n        tableHeadCellRefs,\n        tableHeadRef,\n        tablePaperRef,\n        topToolbarRef,\n    };\n    table.setActionCell =\n        (_w = statefulTableOptions.onActionCellChange) !== null && _w !== void 0 ? _w : setActionCell;\n    table.setCreatingRow = (row) => {\n        var _a, _b;\n        let _row = row;\n        if (row === true) {\n            _row = createRow(table);\n        }\n        (_b = (_a = statefulTableOptions === null || statefulTableOptions === void 0 ? void 0 : statefulTableOptions.onCreatingRowChange) === null || _a === void 0 ? void 0 : _a.call(statefulTableOptions, _row)) !== null && _b !== void 0 ? _b : _setCreatingRow(_row);\n    };\n    table.setColumnFilterFns =\n        (_x = statefulTableOptions.onColumnFilterFnsChange) !== null && _x !== void 0 ? _x : setColumnFilterFns;\n    table.setDensity = (_y = statefulTableOptions.onDensityChange) !== null && _y !== void 0 ? _y : setDensity;\n    table.setDraggingColumn =\n        (_z = statefulTableOptions.onDraggingColumnChange) !== null && _z !== void 0 ? _z : setDraggingColumn;\n    table.setDraggingRow =\n        (_0 = statefulTableOptions.onDraggingRowChange) !== null && _0 !== void 0 ? _0 : setDraggingRow;\n    table.setEditingCell =\n        (_1 = statefulTableOptions.onEditingCellChange) !== null && _1 !== void 0 ? _1 : setEditingCell;\n    table.setEditingRow =\n        (_2 = statefulTableOptions.onEditingRowChange) !== null && _2 !== void 0 ? _2 : setEditingRow;\n    table.setGlobalFilterFn =\n        (_3 = statefulTableOptions.onGlobalFilterFnChange) !== null && _3 !== void 0 ? _3 : setGlobalFilterFn;\n    table.setHoveredColumn =\n        (_4 = statefulTableOptions.onHoveredColumnChange) !== null && _4 !== void 0 ? _4 : setHoveredColumn;\n    table.setHoveredRow =\n        (_5 = statefulTableOptions.onHoveredRowChange) !== null && _5 !== void 0 ? _5 : setHoveredRow;\n    table.setIsFullScreen =\n        (_6 = statefulTableOptions.onIsFullScreenChange) !== null && _6 !== void 0 ? _6 : setIsFullScreen;\n    table.setShowAlertBanner =\n        (_7 = statefulTableOptions.onShowAlertBannerChange) !== null && _7 !== void 0 ? _7 : setShowAlertBanner;\n    table.setShowColumnFilters =\n        (_8 = statefulTableOptions.onShowColumnFiltersChange) !== null && _8 !== void 0 ? _8 : setShowColumnFilters;\n    table.setShowGlobalFilter =\n        (_9 = statefulTableOptions.onShowGlobalFilterChange) !== null && _9 !== void 0 ? _9 : setShowGlobalFilter;\n    table.setShowToolbarDropZone =\n        (_10 = statefulTableOptions.onShowToolbarDropZoneChange) !== null && _10 !== void 0 ? _10 : setShowToolbarDropZone;\n    useMRT_Effects(table);\n    return table;\n};\n\nconst useMaterialReactTable = (tableOptions) => useMRT_TableInstance(useMRT_TableOptions(tableOptions));\n\nconst extraIndexRangeExtractor = (range, draggingIndex) => {\n    const newIndexes = (0,_tanstack_react_virtual__WEBPACK_IMPORTED_MODULE_53__.defaultRangeExtractor)(range);\n    if (draggingIndex === undefined)\n        return newIndexes;\n    if (draggingIndex >= 0 &&\n        draggingIndex < Math.max(range.startIndex - range.overscan, 0)) {\n        newIndexes.unshift(draggingIndex);\n    }\n    if (draggingIndex >= 0 && draggingIndex > range.endIndex + range.overscan) {\n        newIndexes.push(draggingIndex);\n    }\n    return newIndexes;\n};\n\nconst useMRT_ColumnVirtualizer = (table) => {\n    var _a, _b, _c, _d;\n    const { getState, options: { columnVirtualizerInstanceRef, columnVirtualizerOptions, enableColumnPinning, enableColumnVirtualization, }, refs: { tableContainerRef }, } = table;\n    const { columnPinning, columnVisibility, draggingColumn } = getState();\n    if (!enableColumnVirtualization)\n        return undefined;\n    const columnVirtualizerProps = parseFromValuesOrFunc(columnVirtualizerOptions, {\n        table,\n    });\n    const visibleColumns = table.getVisibleLeafColumns();\n    const [leftPinnedIndexes, rightPinnedIndexes] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => enableColumnPinning\n        ? [\n            table.getLeftVisibleLeafColumns().map((c) => c.getPinnedIndex()),\n            table\n                .getRightVisibleLeafColumns()\n                .map((column) => visibleColumns.length - column.getPinnedIndex() - 1)\n                .sort((a, b) => a - b),\n        ]\n        : [[], []], [columnPinning, columnVisibility, enableColumnPinning]);\n    const numPinnedLeft = leftPinnedIndexes.length;\n    const numPinnedRight = rightPinnedIndexes.length;\n    const draggingColumnIndex = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => (draggingColumn === null || draggingColumn === void 0 ? void 0 : draggingColumn.id)\n        ? visibleColumns.findIndex((c) => c.id === (draggingColumn === null || draggingColumn === void 0 ? void 0 : draggingColumn.id))\n        : undefined, [draggingColumn === null || draggingColumn === void 0 ? void 0 : draggingColumn.id]);\n    const columnVirtualizer = (0,_tanstack_react_virtual__WEBPACK_IMPORTED_MODULE_54__.useVirtualizer)(Object.assign({ count: visibleColumns.length, estimateSize: (index) => visibleColumns[index].getSize(), getScrollElement: () => tableContainerRef.current, horizontal: true, overscan: 3, rangeExtractor: (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((range) => {\n            const newIndexes = extraIndexRangeExtractor(range, draggingColumnIndex);\n            if (!numPinnedLeft && !numPinnedRight) {\n                return newIndexes;\n            }\n            return [\n                ...new Set([\n                    ...leftPinnedIndexes,\n                    ...newIndexes,\n                    ...rightPinnedIndexes,\n                ]),\n            ];\n        }, [leftPinnedIndexes, rightPinnedIndexes, draggingColumnIndex]) }, columnVirtualizerProps));\n    const virtualColumns = columnVirtualizer.getVirtualItems();\n    columnVirtualizer.virtualColumns = virtualColumns;\n    const numColumns = virtualColumns.length;\n    if (numColumns) {\n        const totalSize = columnVirtualizer.getTotalSize();\n        const leftNonPinnedStart = ((_a = virtualColumns[numPinnedLeft]) === null || _a === void 0 ? void 0 : _a.start) || 0;\n        const leftNonPinnedEnd = ((_b = virtualColumns[leftPinnedIndexes.length - 1]) === null || _b === void 0 ? void 0 : _b.end) || 0;\n        const rightNonPinnedStart = ((_c = virtualColumns[numColumns - numPinnedRight]) === null || _c === void 0 ? void 0 : _c.start) || 0;\n        const rightNonPinnedEnd = ((_d = virtualColumns[numColumns - numPinnedRight - 1]) === null || _d === void 0 ? void 0 : _d.end) || 0;\n        columnVirtualizer.virtualPaddingLeft =\n            leftNonPinnedStart - leftNonPinnedEnd;\n        columnVirtualizer.virtualPaddingRight =\n            totalSize -\n                rightNonPinnedEnd -\n                (numPinnedRight ? totalSize - rightNonPinnedStart : 0);\n    }\n    if (columnVirtualizerInstanceRef) {\n        //@ts-ignore\n        columnVirtualizerInstanceRef.current = columnVirtualizer;\n    }\n    return columnVirtualizer;\n};\n\nconst useMRT_RowVirtualizer = (table, rows) => {\n    var _a;\n    const { getRowModel, getState, options: { enableRowVirtualization, renderDetailPanel, rowVirtualizerInstanceRef, rowVirtualizerOptions, }, refs: { tableContainerRef }, } = table;\n    const { density, draggingRow, expanded } = getState();\n    if (!enableRowVirtualization)\n        return undefined;\n    const rowVirtualizerProps = parseFromValuesOrFunc(rowVirtualizerOptions, {\n        table,\n    });\n    const rowCount = (_a = rows === null || rows === void 0 ? void 0 : rows.length) !== null && _a !== void 0 ? _a : getRowModel().rows.length;\n    const normalRowHeight = density === 'compact' ? 37 : density === 'comfortable' ? 58 : 73;\n    const rowVirtualizer = (0,_tanstack_react_virtual__WEBPACK_IMPORTED_MODULE_54__.useVirtualizer)(Object.assign({ count: renderDetailPanel ? rowCount * 2 : rowCount, estimateSize: (index) => renderDetailPanel && index % 2 === 1\n            ? expanded === true\n                ? 100\n                : 0\n            : normalRowHeight, getScrollElement: () => tableContainerRef.current, measureElement: typeof window !== 'undefined' &&\n            navigator.userAgent.indexOf('Firefox') === -1\n            ? (element) => element === null || element === void 0 ? void 0 : element.getBoundingClientRect().height\n            : undefined, overscan: 4, rangeExtractor: (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((range) => {\n            var _a;\n            return extraIndexRangeExtractor(range, (_a = draggingRow === null || draggingRow === void 0 ? void 0 : draggingRow.index) !== null && _a !== void 0 ? _a : 0);\n        }, [draggingRow]) }, rowVirtualizerProps));\n    rowVirtualizer.virtualRows = rowVirtualizer.getVirtualItems();\n    if (rowVirtualizerInstanceRef) {\n        //@ts-ignore\n        rowVirtualizerInstanceRef.current = rowVirtualizer;\n    }\n    return rowVirtualizer;\n};\n\nconst useMRT_Rows = (table) => {\n    const { getRowModel, getState, options: { data, enableGlobalFilterRankedResults, positionCreatingRow }, } = table;\n    const { creatingRow, expanded, globalFilter, pagination, rowPinning, sorting, } = getState();\n    const rows = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => getMRT_Rows(table), [\n        creatingRow,\n        data,\n        enableGlobalFilterRankedResults,\n        expanded,\n        getRowModel().rows,\n        globalFilter,\n        pagination.pageIndex,\n        pagination.pageSize,\n        positionCreatingRow,\n        rowPinning,\n        sorting,\n    ]);\n    return rows;\n};\n\nconst allowedTypes = ['string', 'number'];\nconst MRT_TableBodyCellValue = ({ cell, rowRef, staticColumnIndex, staticRowIndex, table, }) => {\n    var _a, _b, _c;\n    const { getState, options: { enableFilterMatchHighlighting, mrtTheme: { matchHighlightColor }, }, } = table;\n    const { column, row } = cell;\n    const { columnDef } = column;\n    const { globalFilter, globalFilterFn } = getState();\n    const filterValue = column.getFilterValue();\n    let renderedCellValue = cell.getIsAggregated() && columnDef.AggregatedCell\n        ? columnDef.AggregatedCell({\n            cell,\n            column,\n            row,\n            table,\n            staticColumnIndex,\n            staticRowIndex,\n        })\n        : row.getIsGrouped() && !cell.getIsGrouped()\n            ? null\n            : cell.getIsGrouped() && columnDef.GroupedCell\n                ? columnDef.GroupedCell({\n                    cell,\n                    column,\n                    row,\n                    table,\n                    staticColumnIndex,\n                    staticRowIndex,\n                })\n                : undefined;\n    const isGroupedValue = renderedCellValue !== undefined;\n    if (!isGroupedValue) {\n        renderedCellValue = cell.renderValue();\n    }\n    if (enableFilterMatchHighlighting &&\n        columnDef.enableFilterMatchHighlighting !== false &&\n        String(renderedCellValue) &&\n        allowedTypes.includes(typeof renderedCellValue) &&\n        ((filterValue &&\n            allowedTypes.includes(typeof filterValue) &&\n            ['autocomplete', 'text'].includes(columnDef.filterVariant)) ||\n            (globalFilter &&\n                allowedTypes.includes(typeof globalFilter) &&\n                column.getCanGlobalFilter()))) {\n        const chunks = highlight_words__WEBPACK_IMPORTED_MODULE_2__[\"default\"] === null || highlight_words__WEBPACK_IMPORTED_MODULE_2__[\"default\"] === void 0 ? void 0 : (0,highlight_words__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({\n            matchExactly: (filterValue ? columnDef._filterFn : globalFilterFn) !== 'fuzzy',\n            query: ((_a = filterValue !== null && filterValue !== void 0 ? filterValue : globalFilter) !== null && _a !== void 0 ? _a : '').toString(),\n            text: renderedCellValue === null || renderedCellValue === void 0 ? void 0 : renderedCellValue.toString(),\n        });\n        if ((chunks === null || chunks === void 0 ? void 0 : chunks.length) > 1 || ((_b = chunks === null || chunks === void 0 ? void 0 : chunks[0]) === null || _b === void 0 ? void 0 : _b.match)) {\n            renderedCellValue = ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\", { \"aria-label\": renderedCellValue, role: \"note\", children: (_c = chunks === null || chunks === void 0 ? void 0 : chunks.map(({ key, match, text }) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { \"aria-hidden\": \"true\", component: \"span\", sx: match\n                        ? {\n                            backgroundColor: matchHighlightColor,\n                            borderRadius: '2px',\n                            color: (theme) => theme.palette.mode === 'dark'\n                                ? theme.palette.common.white\n                                : theme.palette.common.black,\n                            padding: '2px 1px',\n                        }\n                        : undefined, children: text }, key)))) !== null && _c !== void 0 ? _c : renderedCellValue }));\n        }\n    }\n    if (columnDef.Cell && !isGroupedValue) {\n        renderedCellValue = columnDef.Cell({\n            cell,\n            column,\n            renderedCellValue,\n            row,\n            rowRef,\n            staticColumnIndex,\n            staticRowIndex,\n            table,\n        });\n    }\n    return renderedCellValue;\n};\n\nconst MRT_CopyButton = (_a) => {\n    var _b;\n    var { cell, table } = _a, rest = __rest(_a, [\"cell\", \"table\"]);\n    const { options: { localization, muiCopyButtonProps }, } = table;\n    const { column, row } = cell;\n    const { columnDef } = column;\n    const [copied, setCopied] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const handleCopy = (event, text) => {\n        event.stopPropagation();\n        navigator.clipboard.writeText(text);\n        setCopied(true);\n        setTimeout(() => setCopied(false), 4000);\n    };\n    const buttonProps = Object.assign(Object.assign(Object.assign({}, parseFromValuesOrFunc(muiCopyButtonProps, {\n        cell,\n        column,\n        row,\n        table,\n    })), parseFromValuesOrFunc(columnDef.muiCopyButtonProps, {\n        cell,\n        column,\n        row,\n        table,\n    })), rest);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], Object.assign({}, getCommonTooltipProps('top'), { title: (_b = buttonProps === null || buttonProps === void 0 ? void 0 : buttonProps.title) !== null && _b !== void 0 ? _b : (copied ? localization.copiedToClipboard : localization.clickToCopy), children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Button__WEBPACK_IMPORTED_MODULE_10__[\"default\"], Object.assign({ onClick: (e) => handleCopy(e, cell.getValue()), size: \"small\", type: \"button\", variant: \"text\" }, buttonProps, { sx: (theme) => (Object.assign({ backgroundColor: 'transparent', border: 'none', color: 'inherit', cursor: 'copy', fontFamily: 'inherit', fontSize: 'inherit', letterSpacing: 'inherit', m: '-0.25rem', minWidth: 'unset', py: 0, textAlign: 'inherit', textTransform: 'inherit' }, parseFromValuesOrFunc(buttonProps === null || buttonProps === void 0 ? void 0 : buttonProps.sx, theme))), title: undefined })) })));\n};\n\nconst MRT_EditCellTextField = (_a) => {\n    var _b, _c;\n    var { cell, table } = _a, rest = __rest(_a, [\"cell\", \"table\"]);\n    const { getState, options: { createDisplayMode, editDisplayMode, muiEditTextFieldProps }, refs: { editInputRefs }, setCreatingRow, setEditingCell, setEditingRow, } = table;\n    const { column, row } = cell;\n    const { columnDef } = column;\n    const { creatingRow, editingRow } = getState();\n    const { editSelectOptions, editVariant } = columnDef;\n    const isCreating = (creatingRow === null || creatingRow === void 0 ? void 0 : creatingRow.id) === row.id;\n    const isEditing = (editingRow === null || editingRow === void 0 ? void 0 : editingRow.id) === row.id;\n    const [value, setValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => cell.getValue());\n    const textFieldProps = Object.assign(Object.assign(Object.assign({}, parseFromValuesOrFunc(muiEditTextFieldProps, {\n        cell,\n        column,\n        row,\n        table,\n    })), parseFromValuesOrFunc(columnDef.muiEditTextFieldProps, {\n        cell,\n        column,\n        row,\n        table,\n    })), rest);\n    const selectOptions = parseFromValuesOrFunc(editSelectOptions, {\n        cell,\n        column,\n        row,\n        table,\n    });\n    const isSelectEdit = editVariant === 'select' || (textFieldProps === null || textFieldProps === void 0 ? void 0 : textFieldProps.select);\n    const saveInputValueToRowCache = (newValue) => {\n        //@ts-ignore\n        row._valuesCache[column.id] = newValue;\n        if (isCreating) {\n            setCreatingRow(row);\n        }\n        else if (isEditing) {\n            setEditingRow(row);\n        }\n    };\n    const handleChange = (event) => {\n        var _a;\n        (_a = textFieldProps.onChange) === null || _a === void 0 ? void 0 : _a.call(textFieldProps, event);\n        setValue(event.target.value);\n        if (isSelectEdit) {\n            saveInputValueToRowCache(event.target.value);\n        }\n    };\n    const handleBlur = (event) => {\n        var _a;\n        (_a = textFieldProps.onBlur) === null || _a === void 0 ? void 0 : _a.call(textFieldProps, event);\n        saveInputValueToRowCache(value);\n        setEditingCell(null);\n    };\n    const handleEnterKeyDown = (event) => {\n        var _a, _b;\n        (_a = textFieldProps.onKeyDown) === null || _a === void 0 ? void 0 : _a.call(textFieldProps, event);\n        if (event.key === 'Enter' && !event.shiftKey) {\n            (_b = editInputRefs.current[column.id]) === null || _b === void 0 ? void 0 : _b.blur();\n        }\n    };\n    if (columnDef.Edit) {\n        return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children: (_b = columnDef.Edit) === null || _b === void 0 ? void 0 : _b.call(columnDef, { cell, column, row, table }) });\n    }\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_TextField__WEBPACK_IMPORTED_MODULE_55__[\"default\"], Object.assign({ disabled: parseFromValuesOrFunc(columnDef.enableEditing, row) === false, fullWidth: true, inputRef: (inputRef) => {\n            if (inputRef) {\n                editInputRefs.current[column.id] = inputRef;\n                if (textFieldProps.inputRef) {\n                    textFieldProps.inputRef = inputRef;\n                }\n            }\n        }, label: ['custom', 'modal'].includes((isCreating ? createDisplayMode : editDisplayMode))\n            ? columnDef.header\n            : undefined, margin: \"none\", name: column.id, placeholder: !['custom', 'modal'].includes((isCreating ? createDisplayMode : editDisplayMode))\n            ? columnDef.header\n            : undefined, select: isSelectEdit, size: \"small\", value: value !== null && value !== void 0 ? value : '', variant: \"standard\" }, textFieldProps, { InputProps: Object.assign(Object.assign(Object.assign({}, (textFieldProps.variant !== 'outlined'\n            ? { disableUnderline: editDisplayMode === 'table' }\n            : {})), textFieldProps.InputProps), { sx: (theme) => {\n                var _a;\n                return (Object.assign({ mb: 0 }, parseFromValuesOrFunc((_a = textFieldProps === null || textFieldProps === void 0 ? void 0 : textFieldProps.InputProps) === null || _a === void 0 ? void 0 : _a.sx, theme)));\n            } }), SelectProps: Object.assign({ MenuProps: { disableScrollLock: true } }, textFieldProps.SelectProps), inputProps: Object.assign({ autoComplete: 'new-password' }, textFieldProps.inputProps), onBlur: handleBlur, onChange: handleChange, onClick: (e) => {\n            var _a;\n            e.stopPropagation();\n            (_a = textFieldProps === null || textFieldProps === void 0 ? void 0 : textFieldProps.onClick) === null || _a === void 0 ? void 0 : _a.call(textFieldProps, e);\n        }, onKeyDown: handleEnterKeyDown, children: (_c = textFieldProps.children) !== null && _c !== void 0 ? _c : selectOptions === null || selectOptions === void 0 ? void 0 : selectOptions.map((option) => {\n            const { label, value } = getValueAndLabel(option);\n            return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_12__[\"default\"], { sx: {\n                    alignItems: 'center',\n                    display: 'flex',\n                    gap: '0.5rem',\n                    m: 0,\n                }, value: value, children: label }, value));\n        }) })));\n};\n\nconst MRT_TableBodyCell = (_a) => {\n    var _b, _c, _d, _e, _f;\n    var { cell, numRows, rowRef, staticColumnIndex, staticRowIndex, table } = _a, rest = __rest(_a, [\"cell\", \"numRows\", \"rowRef\", \"staticColumnIndex\", \"staticRowIndex\", \"table\"]);\n    const theme = (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_15__[\"default\"])();\n    const { getState, options: { columnResizeDirection, columnResizeMode, createDisplayMode, editDisplayMode, enableCellActions, enableClickToCopy, enableColumnOrdering, enableColumnPinning, enableGrouping, layoutMode, mrtTheme: { draggingBorderColor }, muiSkeletonProps, muiTableBodyCellProps, }, setHoveredColumn, } = table;\n    const { actionCell, columnSizingInfo, creatingRow, density, draggingColumn, draggingRow, editingCell, editingRow, hoveredColumn, hoveredRow, isLoading, showSkeletons, } = getState();\n    const { column, row } = cell;\n    const { columnDef } = column;\n    const { columnDefType } = columnDef;\n    const args = { cell, column, row, table };\n    const tableCellProps = Object.assign(Object.assign(Object.assign({}, parseFromValuesOrFunc(muiTableBodyCellProps, args)), parseFromValuesOrFunc(columnDef.muiTableBodyCellProps, args)), rest);\n    const skeletonProps = parseFromValuesOrFunc(muiSkeletonProps, {\n        cell,\n        column,\n        row,\n        table,\n    });\n    const [skeletonWidth, setSkeletonWidth] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(100);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        if ((!isLoading && !showSkeletons) || skeletonWidth !== 100)\n            return;\n        const size = column.getSize();\n        setSkeletonWidth(columnDefType === 'display'\n            ? size / 2\n            : Math.round(Math.random() * (size - size / 3) + size / 3));\n    }, [isLoading, showSkeletons]);\n    const draggingBorders = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        const isDraggingColumn = (draggingColumn === null || draggingColumn === void 0 ? void 0 : draggingColumn.id) === column.id;\n        const isHoveredColumn = (hoveredColumn === null || hoveredColumn === void 0 ? void 0 : hoveredColumn.id) === column.id;\n        const isDraggingRow = (draggingRow === null || draggingRow === void 0 ? void 0 : draggingRow.id) === row.id;\n        const isHoveredRow = (hoveredRow === null || hoveredRow === void 0 ? void 0 : hoveredRow.id) === row.id;\n        const isFirstColumn = column.getIsFirstColumn();\n        const isLastColumn = column.getIsLastColumn();\n        const isLastRow = numRows && staticRowIndex === numRows - 1;\n        const isResizingColumn = columnSizingInfo.isResizingColumn === column.id;\n        const showResizeBorder = isResizingColumn && columnResizeMode === 'onChange';\n        const borderStyle = showResizeBorder\n            ? `2px solid ${draggingBorderColor} !important`\n            : isDraggingColumn || isDraggingRow\n                ? `1px dashed ${theme.palette.grey[500]} !important`\n                : isHoveredColumn || isHoveredRow || isResizingColumn\n                    ? `2px dashed ${draggingBorderColor} !important`\n                    : undefined;\n        if (showResizeBorder) {\n            return columnResizeDirection === 'ltr'\n                ? { borderRight: borderStyle }\n                : { borderLeft: borderStyle };\n        }\n        return borderStyle\n            ? {\n                borderBottom: isDraggingRow || isHoveredRow || (isLastRow && !isResizingColumn)\n                    ? borderStyle\n                    : undefined,\n                borderLeft: isDraggingColumn ||\n                    isHoveredColumn ||\n                    ((isDraggingRow || isHoveredRow) && isFirstColumn)\n                    ? borderStyle\n                    : undefined,\n                borderRight: isDraggingColumn ||\n                    isHoveredColumn ||\n                    ((isDraggingRow || isHoveredRow) && isLastColumn)\n                    ? borderStyle\n                    : undefined,\n                borderTop: isDraggingRow || isHoveredRow ? borderStyle : undefined,\n            }\n            : undefined;\n    }, [\n        columnSizingInfo.isResizingColumn,\n        draggingColumn,\n        draggingRow,\n        hoveredColumn,\n        hoveredRow,\n        staticRowIndex,\n    ]);\n    const isColumnPinned = enableColumnPinning &&\n        columnDef.columnDefType !== 'group' &&\n        column.getIsPinned();\n    const isEditable = isCellEditable({ cell, table });\n    const isEditing = isEditable &&\n        !['custom', 'modal'].includes(editDisplayMode) &&\n        (editDisplayMode === 'table' ||\n            (editingRow === null || editingRow === void 0 ? void 0 : editingRow.id) === row.id ||\n            (editingCell === null || editingCell === void 0 ? void 0 : editingCell.id) === cell.id) &&\n        !row.getIsGrouped();\n    const isCreating = isEditable && createDisplayMode === 'row' && (creatingRow === null || creatingRow === void 0 ? void 0 : creatingRow.id) === row.id;\n    const showClickToCopyButton = (parseFromValuesOrFunc(enableClickToCopy, cell) === true ||\n        parseFromValuesOrFunc(columnDef.enableClickToCopy, cell) === true) &&\n        !['context-menu', false].includes(\n        // @ts-ignore\n        parseFromValuesOrFunc(columnDef.enableClickToCopy, cell));\n    const isRightClickable = parseFromValuesOrFunc(enableCellActions, cell);\n    const cellValueProps = {\n        cell,\n        table,\n        staticColumnIndex,\n        staticRowIndex,\n    };\n    const handleDoubleClick = (event) => {\n        var _a;\n        (_a = tableCellProps === null || tableCellProps === void 0 ? void 0 : tableCellProps.onDoubleClick) === null || _a === void 0 ? void 0 : _a.call(tableCellProps, event);\n        openEditingCell({ cell, table });\n    };\n    const handleDragEnter = (e) => {\n        var _a;\n        (_a = tableCellProps === null || tableCellProps === void 0 ? void 0 : tableCellProps.onDragEnter) === null || _a === void 0 ? void 0 : _a.call(tableCellProps, e);\n        if (enableGrouping && (hoveredColumn === null || hoveredColumn === void 0 ? void 0 : hoveredColumn.id) === 'drop-zone') {\n            setHoveredColumn(null);\n        }\n        if (enableColumnOrdering && draggingColumn) {\n            setHoveredColumn(columnDef.enableColumnOrdering !== false ? column : null);\n        }\n    };\n    const handleDragOver = (e) => {\n        if (columnDef.enableColumnOrdering !== false) {\n            e.preventDefault();\n        }\n    };\n    const handleContextMenu = (e) => {\n        var _a;\n        (_a = tableCellProps === null || tableCellProps === void 0 ? void 0 : tableCellProps.onContextMenu) === null || _a === void 0 ? void 0 : _a.call(tableCellProps, e);\n        if (isRightClickable) {\n            e.preventDefault();\n            table.setActionCell(cell);\n            table.refs.actionCellRef.current = e.currentTarget;\n        }\n    };\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_TableCell__WEBPACK_IMPORTED_MODULE_56__[\"default\"], Object.assign({ align: theme.direction === 'rtl' ? 'right' : 'left', \"data-index\": staticColumnIndex, \"data-pinned\": !!isColumnPinned || undefined }, tableCellProps, { onContextMenu: handleContextMenu, onDoubleClick: handleDoubleClick, onDragEnter: handleDragEnter, onDragOver: handleDragOver, sx: (theme) => (Object.assign(Object.assign({ '&:hover': {\n                outline: (actionCell === null || actionCell === void 0 ? void 0 : actionCell.id) === cell.id ||\n                    (editDisplayMode === 'cell' && isEditable) ||\n                    (editDisplayMode === 'table' && (isCreating || isEditing))\n                    ? `1px solid ${theme.palette.grey[500]}`\n                    : undefined,\n                textOverflow: 'clip',\n            }, alignItems: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'center' : undefined, cursor: isRightClickable\n                ? 'context-menu'\n                : isEditable && editDisplayMode === 'cell'\n                    ? 'pointer'\n                    : 'inherit', outline: (actionCell === null || actionCell === void 0 ? void 0 : actionCell.id) === cell.id\n                ? `1px solid ${theme.palette.grey[500]}`\n                : undefined, outlineOffset: '-1px', overflow: 'hidden', p: density === 'compact'\n                ? columnDefType === 'display'\n                    ? '0 0.5rem'\n                    : '0.5rem'\n                : density === 'comfortable'\n                    ? columnDefType === 'display'\n                        ? '0.5rem 0.75rem'\n                        : '1rem'\n                    : columnDefType === 'display'\n                        ? '1rem 1.25rem'\n                        : '1.5rem', textOverflow: columnDefType !== 'display' ? 'ellipsis' : undefined, whiteSpace: row.getIsPinned() || density === 'compact' ? 'nowrap' : 'normal' }, getCommonMRTCellStyles({\n            column,\n            table,\n            tableCellProps,\n            theme,\n        })), draggingBorders)), children: (_b = tableCellProps.children) !== null && _b !== void 0 ? _b : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children: [cell.getIsPlaceholder() ? ((_d = (_c = columnDef.PlaceholderCell) === null || _c === void 0 ? void 0 : _c.call(columnDef, { cell, column, row, table })) !== null && _d !== void 0 ? _d : null) : showSkeletons !== false && (isLoading || showSkeletons) ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Skeleton__WEBPACK_IMPORTED_MODULE_57__[\"default\"], Object.assign({ animation: \"wave\", height: 20, width: skeletonWidth }, skeletonProps))) : columnDefType === 'display' &&\n                    (['mrt-row-expand', 'mrt-row-numbers', 'mrt-row-select'].includes(column.id) ||\n                        !row.getIsGrouped()) ? ((_e = columnDef.Cell) === null || _e === void 0 ? void 0 : _e.call(columnDef, {\n                    cell,\n                    column,\n                    renderedCellValue: cell.renderValue(),\n                    row,\n                    rowRef,\n                    staticColumnIndex,\n                    staticRowIndex,\n                    table,\n                })) : isCreating || isEditing ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_EditCellTextField, { cell: cell, table: table })) : showClickToCopyButton && columnDef.enableClickToCopy !== false ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_CopyButton, { cell: cell, table: table, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_TableBodyCellValue, Object.assign({}, cellValueProps)) })) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_TableBodyCellValue, Object.assign({}, cellValueProps))), cell.getIsGrouped() && !columnDef.GroupedCell && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children: [\" (\", (_f = row.subRows) === null || _f === void 0 ? void 0 : _f.length, \")\"] }))] })) })));\n};\nconst Memo_MRT_TableBodyCell = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(MRT_TableBodyCell, (prev, next) => next.cell === prev.cell);\n\nconst MRT_TableDetailPanel = (_a) => {\n    var { parentRowRef, row, rowVirtualizer, staticRowIndex, table, virtualRow } = _a, rest = __rest(_a, [\"parentRowRef\", \"row\", \"rowVirtualizer\", \"staticRowIndex\", \"table\", \"virtualRow\"]);\n    const { getState, getVisibleLeafColumns, options: { layoutMode, mrtTheme: { baseBackgroundColor }, muiDetailPanelProps, muiTableBodyRowProps, renderDetailPanel, }, } = table;\n    const { isLoading } = getState();\n    const tableRowProps = parseFromValuesOrFunc(muiTableBodyRowProps, {\n        isDetailPanel: true,\n        row,\n        staticRowIndex,\n        table,\n    });\n    const tableCellProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiDetailPanelProps, {\n        row,\n        table,\n    })), rest);\n    const DetailPanel = !isLoading && (renderDetailPanel === null || renderDetailPanel === void 0 ? void 0 : renderDetailPanel({ row, table }));\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_TableRow__WEBPACK_IMPORTED_MODULE_58__[\"default\"], Object.assign({ className: \"Mui-TableBodyCell-DetailPanel\", \"data-index\": renderDetailPanel ? staticRowIndex * 2 + 1 : staticRowIndex, ref: (node) => {\n            var _a;\n            if (node) {\n                (_a = rowVirtualizer === null || rowVirtualizer === void 0 ? void 0 : rowVirtualizer.measureElement) === null || _a === void 0 ? void 0 : _a.call(rowVirtualizer, node);\n            }\n        } }, tableRowProps, { sx: (theme) => {\n            var _a, _b;\n            return (Object.assign({ display: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'flex' : undefined, position: virtualRow ? 'absolute' : undefined, top: virtualRow\n                    ? `${(_b = (_a = parentRowRef.current) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect()) === null || _b === void 0 ? void 0 : _b.height}px`\n                    : undefined, transform: virtualRow\n                    ? `translateY(${virtualRow === null || virtualRow === void 0 ? void 0 : virtualRow.start}px)`\n                    : undefined, width: '100%' }, parseFromValuesOrFunc(tableRowProps === null || tableRowProps === void 0 ? void 0 : tableRowProps.sx, theme)));\n        }, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_TableCell__WEBPACK_IMPORTED_MODULE_56__[\"default\"], Object.assign({ className: \"Mui-TableBodyCell-DetailPanel\", colSpan: getVisibleLeafColumns().length }, tableCellProps, { sx: (theme) => (Object.assign({ backgroundColor: virtualRow ? baseBackgroundColor : undefined, borderBottom: !row.getIsExpanded() ? 'none' : undefined, display: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'flex' : undefined, py: !!DetailPanel && row.getIsExpanded() ? '1rem' : 0, transition: !virtualRow ? 'all 150ms ease-in-out' : undefined, width: `100%` }, parseFromValuesOrFunc(tableCellProps === null || tableCellProps === void 0 ? void 0 : tableCellProps.sx, theme))), children: virtualRow ? (row.getIsExpanded() && DetailPanel) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Collapse__WEBPACK_IMPORTED_MODULE_59__[\"default\"], { in: row.getIsExpanded(), mountOnEnter: true, unmountOnExit: true, children: DetailPanel })) })) })));\n};\n\nconst MRT_TableBodyRow = (_a) => {\n    var _b, _c, _d, _f;\n    var { columnVirtualizer, numRows, pinnedRowIds, row, rowVirtualizer, staticRowIndex, table, virtualRow } = _a, rest = __rest(_a, [\"columnVirtualizer\", \"numRows\", \"pinnedRowIds\", \"row\", \"rowVirtualizer\", \"staticRowIndex\", \"table\", \"virtualRow\"]);\n    const theme = (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_15__[\"default\"])();\n    const { getState, options: { enableRowOrdering, enableRowPinning, enableStickyFooter, enableStickyHeader, layoutMode, memoMode, mrtTheme: { baseBackgroundColor, pinnedRowBackgroundColor, selectedRowBackgroundColor, }, muiTableBodyRowProps, renderDetailPanel, rowPinningDisplayMode, }, refs: { tableFooterRef, tableHeadRef }, setHoveredRow, } = table;\n    const { density, draggingColumn, draggingRow, editingCell, editingRow, hoveredRow, isFullScreen, rowPinning, } = getState();\n    const visibleCells = row.getVisibleCells();\n    const { virtualColumns, virtualPaddingLeft, virtualPaddingRight } = columnVirtualizer !== null && columnVirtualizer !== void 0 ? columnVirtualizer : {};\n    const isRowSelected = getIsRowSelected({ row, table });\n    const isRowPinned = enableRowPinning && row.getIsPinned();\n    const isDraggingRow = (draggingRow === null || draggingRow === void 0 ? void 0 : draggingRow.id) === row.id;\n    const isHoveredRow = (hoveredRow === null || hoveredRow === void 0 ? void 0 : hoveredRow.id) === row.id;\n    const tableRowProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiTableBodyRowProps, {\n        row,\n        staticRowIndex,\n        table,\n    })), rest);\n    const [bottomPinnedIndex, topPinnedIndex] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        if (!enableRowPinning ||\n            !(rowPinningDisplayMode === null || rowPinningDisplayMode === void 0 ? void 0 : rowPinningDisplayMode.includes('sticky')) ||\n            !pinnedRowIds ||\n            !row.getIsPinned())\n            return [];\n        return [\n            [...pinnedRowIds].reverse().indexOf(row.id),\n            pinnedRowIds.indexOf(row.id),\n        ];\n    }, [pinnedRowIds, rowPinning]);\n    const tableHeadHeight = ((enableStickyHeader || isFullScreen) &&\n        ((_b = tableHeadRef.current) === null || _b === void 0 ? void 0 : _b.clientHeight)) ||\n        0;\n    const tableFooterHeight = (enableStickyFooter && ((_c = tableFooterRef.current) === null || _c === void 0 ? void 0 : _c.clientHeight)) || 0;\n    const sx = parseFromValuesOrFunc(tableRowProps === null || tableRowProps === void 0 ? void 0 : tableRowProps.sx, theme);\n    const defaultRowHeight = density === 'compact' ? 37 : density === 'comfortable' ? 53 : 69;\n    const customRowHeight = \n    // @ts-ignore\n    parseInt((_f = (_d = tableRowProps === null || tableRowProps === void 0 ? void 0 : tableRowProps.style) === null || _d === void 0 ? void 0 : _d.height) !== null && _f !== void 0 ? _f : sx === null || sx === void 0 ? void 0 : sx.height, 10) || undefined;\n    const rowHeight = customRowHeight || defaultRowHeight;\n    const handleDragEnter = (_e) => {\n        if (enableRowOrdering && draggingRow) {\n            setHoveredRow(row);\n        }\n    };\n    const handleDragOver = (e) => {\n        e.preventDefault();\n    };\n    const rowRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const cellHighlightColor = isRowSelected\n        ? selectedRowBackgroundColor\n        : isRowPinned\n            ? pinnedRowBackgroundColor\n            : undefined;\n    const cellHighlightColorHover = (tableRowProps === null || tableRowProps === void 0 ? void 0 : tableRowProps.hover) !== false\n        ? isRowSelected\n            ? cellHighlightColor\n            : theme.palette.mode === 'dark'\n                ? `${(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_11__.lighten)(baseBackgroundColor, 0.3)}`\n                : `${(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_11__.darken)(baseBackgroundColor, 0.3)}`\n        : undefined;\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_TableRow__WEBPACK_IMPORTED_MODULE_58__[\"default\"], Object.assign({ \"data-index\": renderDetailPanel ? staticRowIndex * 2 : staticRowIndex, \"data-pinned\": !!isRowPinned || undefined, \"data-selected\": isRowSelected || undefined, onDragEnter: handleDragEnter, onDragOver: handleDragOver, ref: (node) => {\n                    if (node) {\n                        rowRef.current = node;\n                        rowVirtualizer === null || rowVirtualizer === void 0 ? void 0 : rowVirtualizer.measureElement(node);\n                    }\n                }, selected: isRowSelected }, tableRowProps, { style: Object.assign({ transform: virtualRow\n                        ? `translateY(${virtualRow.start}px)`\n                        : undefined }, tableRowProps === null || tableRowProps === void 0 ? void 0 : tableRowProps.style), sx: (theme) => (Object.assign({ '&:hover td:after': cellHighlightColorHover\n                        ? Object.assign({ backgroundColor: (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_11__.alpha)(cellHighlightColorHover, 0.3) }, commonCellBeforeAfterStyles) : undefined, backgroundColor: `${baseBackgroundColor} !important`, bottom: !virtualRow && bottomPinnedIndex !== undefined && isRowPinned\n                        ? `${bottomPinnedIndex * rowHeight +\n                            (enableStickyFooter ? tableFooterHeight - 1 : 0)}px`\n                        : undefined, boxSizing: 'border-box', display: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'flex' : undefined, opacity: isRowPinned ? 0.97 : isDraggingRow || isHoveredRow ? 0.5 : 1, position: virtualRow\n                        ? 'absolute'\n                        : (rowPinningDisplayMode === null || rowPinningDisplayMode === void 0 ? void 0 : rowPinningDisplayMode.includes('sticky')) && isRowPinned\n                            ? 'sticky'\n                            : 'relative', td: Object.assign({}, getCommonPinnedCellStyles({ table, theme })), 'td:after': cellHighlightColor\n                        ? Object.assign({ backgroundColor: cellHighlightColor }, commonCellBeforeAfterStyles) : undefined, top: virtualRow\n                        ? 0\n                        : topPinnedIndex !== undefined && isRowPinned\n                            ? `${topPinnedIndex * rowHeight +\n                                (enableStickyHeader || isFullScreen ? tableHeadHeight - 1 : 0)}px`\n                            : undefined, transition: virtualRow ? 'none' : 'all 150ms ease-in-out', width: '100%', zIndex: (rowPinningDisplayMode === null || rowPinningDisplayMode === void 0 ? void 0 : rowPinningDisplayMode.includes('sticky')) && isRowPinned ? 2 : 0 }, sx)), children: [virtualPaddingLeft ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", { style: { display: 'flex', width: virtualPaddingLeft } })) : null, (virtualColumns !== null && virtualColumns !== void 0 ? virtualColumns : visibleCells).map((cellOrVirtualCell, staticColumnIndex) => {\n                        let cell = cellOrVirtualCell;\n                        if (columnVirtualizer) {\n                            staticColumnIndex = cellOrVirtualCell.index;\n                            cell = visibleCells[staticColumnIndex];\n                        }\n                        const props = {\n                            cell,\n                            numRows,\n                            rowRef,\n                            staticColumnIndex,\n                            staticRowIndex,\n                            table,\n                        };\n                        return cell ? (memoMode === 'cells' &&\n                            cell.column.columnDef.columnDefType === 'data' &&\n                            !draggingColumn &&\n                            !draggingRow &&\n                            (editingCell === null || editingCell === void 0 ? void 0 : editingCell.id) !== cell.id &&\n                            (editingRow === null || editingRow === void 0 ? void 0 : editingRow.id) !== row.id ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Memo_MRT_TableBodyCell, Object.assign({}, props), cell.id)) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_TableBodyCell, Object.assign({}, props), cell.id))) : null;\n                    }), virtualPaddingRight ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", { style: { display: 'flex', width: virtualPaddingRight } })) : null] })), renderDetailPanel && !row.getIsGrouped() && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_TableDetailPanel, { parentRowRef: rowRef, row: row, rowVirtualizer: rowVirtualizer, staticRowIndex: staticRowIndex, table: table, virtualRow: virtualRow }))] }));\n};\nconst Memo_MRT_TableBodyRow = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(MRT_TableBodyRow, (prev, next) => prev.row === next.row && prev.staticRowIndex === next.staticRowIndex);\n\nconst MRT_TableBody = (_a) => {\n    var _b, _c, _d, _e, _f, _g;\n    var { columnVirtualizer, table } = _a, rest = __rest(_a, [\"columnVirtualizer\", \"table\"]);\n    const { getBottomRows, getIsSomeRowsPinned, getRowModel, getState, getTopRows, options: { enableStickyFooter, enableStickyHeader, layoutMode, localization, memoMode, muiTableBodyProps, renderDetailPanel, renderEmptyRowsFallback, rowPinningDisplayMode, }, refs: { tableFooterRef, tableHeadRef, tablePaperRef }, } = table;\n    const { columnFilters, globalFilter, isFullScreen, rowPinning } = getState();\n    const tableBodyProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiTableBodyProps, { table })), rest);\n    const tableHeadHeight = ((enableStickyHeader || isFullScreen) &&\n        ((_b = tableHeadRef.current) === null || _b === void 0 ? void 0 : _b.clientHeight)) ||\n        0;\n    const tableFooterHeight = (enableStickyFooter && ((_c = tableFooterRef.current) === null || _c === void 0 ? void 0 : _c.clientHeight)) || 0;\n    const pinnedRowIds = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        var _a, _b;\n        if (!((_a = rowPinning.bottom) === null || _a === void 0 ? void 0 : _a.length) && !((_b = rowPinning.top) === null || _b === void 0 ? void 0 : _b.length))\n            return [];\n        return getRowModel()\n            .rows.filter((row) => row.getIsPinned())\n            .map((r) => r.id);\n    }, [rowPinning, getRowModel().rows]);\n    const rows = useMRT_Rows(table);\n    const rowVirtualizer = useMRT_RowVirtualizer(table, rows);\n    const { virtualRows } = rowVirtualizer !== null && rowVirtualizer !== void 0 ? rowVirtualizer : {};\n    const commonRowProps = {\n        columnVirtualizer,\n        numRows: rows.length,\n        table,\n    };\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children: [!(rowPinningDisplayMode === null || rowPinningDisplayMode === void 0 ? void 0 : rowPinningDisplayMode.includes('sticky')) &&\n                getIsSomeRowsPinned('top') && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_TableBody__WEBPACK_IMPORTED_MODULE_60__[\"default\"], Object.assign({}, tableBodyProps, { sx: (theme) => (Object.assign({ display: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'grid' : undefined, position: 'sticky', top: tableHeadHeight - 1, zIndex: 1 }, parseFromValuesOrFunc(tableBodyProps === null || tableBodyProps === void 0 ? void 0 : tableBodyProps.sx, theme))), children: getTopRows().map((row, staticRowIndex) => {\n                    const props = Object.assign(Object.assign({}, commonRowProps), { row,\n                        staticRowIndex });\n                    return memoMode === 'rows' ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Memo_MRT_TableBodyRow, Object.assign({}, props), row.id)) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_TableBodyRow, Object.assign({}, props), row.id));\n                }) }))), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_TableBody__WEBPACK_IMPORTED_MODULE_60__[\"default\"], Object.assign({}, tableBodyProps, { sx: (theme) => (Object.assign({ display: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'grid' : undefined, height: rowVirtualizer\n                        ? `${rowVirtualizer.getTotalSize()}px`\n                        : undefined, minHeight: !rows.length ? '100px' : undefined, position: 'relative' }, parseFromValuesOrFunc(tableBodyProps === null || tableBodyProps === void 0 ? void 0 : tableBodyProps.sx, theme))), children: (_d = tableBodyProps === null || tableBodyProps === void 0 ? void 0 : tableBodyProps.children) !== null && _d !== void 0 ? _d : (!rows.length ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"tr\", { style: {\n                        display: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'grid' : undefined,\n                    }, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"td\", { colSpan: table.getVisibleLeafColumns().length, style: {\n                            display: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'grid' : undefined,\n                        }, children: (_e = renderEmptyRowsFallback === null || renderEmptyRowsFallback === void 0 ? void 0 : renderEmptyRowsFallback({ table })) !== null && _e !== void 0 ? _e : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Typography__WEBPACK_IMPORTED_MODULE_61__[\"default\"], { sx: {\n                                color: 'text.secondary',\n                                fontStyle: 'italic',\n                                maxWidth: `min(100vw, ${(_g = (_f = tablePaperRef.current) === null || _f === void 0 ? void 0 : _f.clientWidth) !== null && _g !== void 0 ? _g : 360}px)`,\n                                py: '2rem',\n                                textAlign: 'center',\n                                width: '100%',\n                            }, children: globalFilter || columnFilters.length\n                                ? localization.noResultsFound\n                                : localization.noRecordsToDisplay })) }) })) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children: (virtualRows !== null && virtualRows !== void 0 ? virtualRows : rows).map((rowOrVirtualRow, staticRowIndex) => {\n                        let row = rowOrVirtualRow;\n                        if (rowVirtualizer) {\n                            if (renderDetailPanel) {\n                                if (rowOrVirtualRow.index % 2 === 1) {\n                                    return null;\n                                }\n                                else {\n                                    staticRowIndex = rowOrVirtualRow.index / 2;\n                                }\n                            }\n                            else {\n                                staticRowIndex = rowOrVirtualRow.index;\n                            }\n                            row = rows[staticRowIndex];\n                        }\n                        const props = Object.assign(Object.assign({}, commonRowProps), { pinnedRowIds,\n                            row,\n                            rowVirtualizer,\n                            staticRowIndex, virtualRow: rowVirtualizer\n                                ? rowOrVirtualRow\n                                : undefined });\n                        const key = `${row.id}-${row.index}`;\n                        return memoMode === 'rows' ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Memo_MRT_TableBodyRow, Object.assign({}, props), key)) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_TableBodyRow, Object.assign({}, props), key));\n                    }) }))) })), !(rowPinningDisplayMode === null || rowPinningDisplayMode === void 0 ? void 0 : rowPinningDisplayMode.includes('sticky')) &&\n                getIsSomeRowsPinned('bottom') && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_TableBody__WEBPACK_IMPORTED_MODULE_60__[\"default\"], Object.assign({}, tableBodyProps, { sx: (theme) => (Object.assign({ bottom: tableFooterHeight - 1, display: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'grid' : undefined, position: 'sticky', zIndex: 1 }, parseFromValuesOrFunc(tableBodyProps === null || tableBodyProps === void 0 ? void 0 : tableBodyProps.sx, theme))), children: getBottomRows().map((row, staticRowIndex) => {\n                    const props = Object.assign(Object.assign({}, commonRowProps), { row,\n                        staticRowIndex });\n                    return memoMode === 'rows' ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Memo_MRT_TableBodyRow, Object.assign({}, props), row.id)) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_TableBodyRow, Object.assign({}, props), row.id));\n                }) })))] }));\n};\nconst Memo_MRT_TableBody = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(MRT_TableBody, (prev, next) => prev.table.options.data === next.table.options.data);\n\nconst MRT_TableFooterCell = (_a) => {\n    var _b, _c, _d;\n    var { footer, staticColumnIndex, table } = _a, rest = __rest(_a, [\"footer\", \"staticColumnIndex\", \"table\"]);\n    const theme = (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_15__[\"default\"])();\n    const { getState, options: { enableColumnPinning, muiTableFooterCellProps }, } = table;\n    const { density } = getState();\n    const { column } = footer;\n    const { columnDef } = column;\n    const { columnDefType } = columnDef;\n    const isColumnPinned = enableColumnPinning &&\n        columnDef.columnDefType !== 'group' &&\n        column.getIsPinned();\n    const args = { column, table };\n    const tableCellProps = Object.assign(Object.assign(Object.assign({}, parseFromValuesOrFunc(muiTableFooterCellProps, args)), parseFromValuesOrFunc(columnDef.muiTableFooterCellProps, args)), rest);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_TableCell__WEBPACK_IMPORTED_MODULE_56__[\"default\"], Object.assign({ align: columnDefType === 'group'\n            ? 'center'\n            : theme.direction === 'rtl'\n                ? 'right'\n                : 'left', colSpan: footer.colSpan, \"data-index\": staticColumnIndex, \"data-pinned\": !!isColumnPinned || undefined, variant: \"footer\" }, tableCellProps, { sx: (theme) => (Object.assign(Object.assign({ fontWeight: 'bold', p: density === 'compact'\n                ? '0.5rem'\n                : density === 'comfortable'\n                    ? '1rem'\n                    : '1.5rem', verticalAlign: 'top' }, getCommonMRTCellStyles({\n            column,\n            header: footer,\n            table,\n            tableCellProps,\n            theme,\n        })), parseFromValuesOrFunc(tableCellProps === null || tableCellProps === void 0 ? void 0 : tableCellProps.sx, theme))), children: (_b = tableCellProps.children) !== null && _b !== void 0 ? _b : (footer.isPlaceholder\n            ? null\n            : (_d = (_c = parseFromValuesOrFunc(columnDef.Footer, {\n                column,\n                footer,\n                table,\n            })) !== null && _c !== void 0 ? _c : columnDef.footer) !== null && _d !== void 0 ? _d : null) })));\n};\n\nconst MRT_TableFooterRow = (_a) => {\n    var _b;\n    var { columnVirtualizer, footerGroup, table } = _a, rest = __rest(_a, [\"columnVirtualizer\", \"footerGroup\", \"table\"]);\n    const { options: { layoutMode, mrtTheme: { baseBackgroundColor }, muiTableFooterRowProps, }, } = table;\n    const { virtualColumns, virtualPaddingLeft, virtualPaddingRight } = columnVirtualizer !== null && columnVirtualizer !== void 0 ? columnVirtualizer : {};\n    // if no content in row, skip row\n    if (!((_b = footerGroup.headers) === null || _b === void 0 ? void 0 : _b.some((header) => (typeof header.column.columnDef.footer === 'string' &&\n        !!header.column.columnDef.footer) ||\n        header.column.columnDef.Footer))) {\n        return null;\n    }\n    const tableRowProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiTableFooterRowProps, {\n        footerGroup,\n        table,\n    })), rest);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_TableRow__WEBPACK_IMPORTED_MODULE_58__[\"default\"], Object.assign({}, tableRowProps, { sx: (theme) => (Object.assign({ backgroundColor: baseBackgroundColor, display: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'flex' : undefined, position: 'relative', width: '100%' }, parseFromValuesOrFunc(tableRowProps === null || tableRowProps === void 0 ? void 0 : tableRowProps.sx, theme))), children: [virtualPaddingLeft ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"th\", { style: { display: 'flex', width: virtualPaddingLeft } })) : null, (virtualColumns !== null && virtualColumns !== void 0 ? virtualColumns : footerGroup.headers).map((footerOrVirtualFooter, staticColumnIndex) => {\n                let footer = footerOrVirtualFooter;\n                if (columnVirtualizer) {\n                    staticColumnIndex = footerOrVirtualFooter\n                        .index;\n                    footer = footerGroup.headers[staticColumnIndex];\n                }\n                return footer ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_TableFooterCell, { footer: footer, staticColumnIndex: staticColumnIndex, table: table }, footer.id)) : null;\n            }), virtualPaddingRight ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"th\", { style: { display: 'flex', width: virtualPaddingRight } })) : null] })));\n};\n\nconst MRT_TableFooter = (_a) => {\n    var { columnVirtualizer, table } = _a, rest = __rest(_a, [\"columnVirtualizer\", \"table\"]);\n    const { getFooterGroups, getState, options: { enableStickyFooter, layoutMode, muiTableFooterProps }, refs: { tableFooterRef }, } = table;\n    const { isFullScreen } = getState();\n    const tableFooterProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiTableFooterProps, {\n        table,\n    })), rest);\n    const stickFooter = (isFullScreen || enableStickyFooter) && enableStickyFooter !== false;\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_TableFooter__WEBPACK_IMPORTED_MODULE_62__[\"default\"], Object.assign({}, tableFooterProps, { ref: (ref) => {\n            tableFooterRef.current = ref;\n            if (tableFooterProps === null || tableFooterProps === void 0 ? void 0 : tableFooterProps.ref) {\n                // @ts-ignore\n                tableFooterProps.ref.current = ref;\n            }\n        }, sx: (theme) => (Object.assign({ bottom: stickFooter ? 0 : undefined, display: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'grid' : undefined, opacity: stickFooter ? 0.97 : undefined, outline: stickFooter\n                ? theme.palette.mode === 'light'\n                    ? `1px solid ${theme.palette.grey[300]}`\n                    : `1px solid ${theme.palette.grey[700]}`\n                : undefined, position: stickFooter ? 'sticky' : 'relative', zIndex: stickFooter ? 1 : undefined }, parseFromValuesOrFunc(tableFooterProps === null || tableFooterProps === void 0 ? void 0 : tableFooterProps.sx, theme))), children: getFooterGroups().map((footerGroup) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_TableFooterRow, { columnVirtualizer: columnVirtualizer, footerGroup: footerGroup, table: table }, footerGroup.id))) })));\n};\n\nconst mrtFilterOptions = (localization) => [\n    {\n        divider: false,\n        label: localization.filterFuzzy,\n        option: 'fuzzy',\n        symbol: '≈',\n    },\n    {\n        divider: false,\n        label: localization.filterContains,\n        option: 'contains',\n        symbol: '*',\n    },\n    {\n        divider: false,\n        label: localization.filterStartsWith,\n        option: 'startsWith',\n        symbol: 'a',\n    },\n    {\n        divider: true,\n        label: localization.filterEndsWith,\n        option: 'endsWith',\n        symbol: 'z',\n    },\n    {\n        divider: false,\n        label: localization.filterEquals,\n        option: 'equals',\n        symbol: '=',\n    },\n    {\n        divider: true,\n        label: localization.filterNotEquals,\n        option: 'notEquals',\n        symbol: '≠',\n    },\n    {\n        divider: false,\n        label: localization.filterBetween,\n        option: 'between',\n        symbol: '⇿',\n    },\n    {\n        divider: true,\n        label: localization.filterBetweenInclusive,\n        option: 'betweenInclusive',\n        symbol: '⬌',\n    },\n    {\n        divider: false,\n        label: localization.filterGreaterThan,\n        option: 'greaterThan',\n        symbol: '>',\n    },\n    {\n        divider: false,\n        label: localization.filterGreaterThanOrEqualTo,\n        option: 'greaterThanOrEqualTo',\n        symbol: '≥',\n    },\n    {\n        divider: false,\n        label: localization.filterLessThan,\n        option: 'lessThan',\n        symbol: '<',\n    },\n    {\n        divider: true,\n        label: localization.filterLessThanOrEqualTo,\n        option: 'lessThanOrEqualTo',\n        symbol: '≤',\n    },\n    {\n        divider: false,\n        label: localization.filterEmpty,\n        option: 'empty',\n        symbol: '∅',\n    },\n    {\n        divider: false,\n        label: localization.filterNotEmpty,\n        option: 'notEmpty',\n        symbol: '!∅',\n    },\n];\nconst rangeModes = ['between', 'betweenInclusive', 'inNumberRange'];\nconst emptyModes = ['empty', 'notEmpty'];\nconst arrModes = ['arrIncludesSome', 'arrIncludesAll', 'arrIncludes'];\nconst rangeVariants = ['range-slider', 'date-range', 'datetime-range', 'range'];\nconst MRT_FilterOptionMenu = (_a) => {\n    var _b, _c, _d, _e;\n    var { anchorEl, header, onSelect, setAnchorEl, setFilterValue, table } = _a, rest = __rest(_a, [\"anchorEl\", \"header\", \"onSelect\", \"setAnchorEl\", \"setFilterValue\", \"table\"]);\n    const { getState, options: { columnFilterModeOptions, globalFilterModeOptions, localization, mrtTheme: { menuBackgroundColor }, renderColumnFilterModeMenuItems, renderGlobalFilterModeMenuItems, }, setColumnFilterFns, setGlobalFilterFn, } = table;\n    const { density, globalFilterFn } = getState();\n    const { column } = header !== null && header !== void 0 ? header : {};\n    const { columnDef } = column !== null && column !== void 0 ? column : {};\n    const currentFilterValue = column === null || column === void 0 ? void 0 : column.getFilterValue();\n    let allowedColumnFilterOptions = (_b = columnDef === null || columnDef === void 0 ? void 0 : columnDef.columnFilterModeOptions) !== null && _b !== void 0 ? _b : columnFilterModeOptions;\n    if (rangeVariants.includes(columnDef === null || columnDef === void 0 ? void 0 : columnDef.filterVariant)) {\n        allowedColumnFilterOptions = [\n            ...rangeModes,\n            ...(allowedColumnFilterOptions !== null && allowedColumnFilterOptions !== void 0 ? allowedColumnFilterOptions : []),\n        ].filter((option) => rangeModes.includes(option));\n    }\n    const internalFilterOptions = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => mrtFilterOptions(localization).filter((filterOption) => columnDef\n        ? allowedColumnFilterOptions === undefined ||\n            (allowedColumnFilterOptions === null || allowedColumnFilterOptions === void 0 ? void 0 : allowedColumnFilterOptions.includes(filterOption.option))\n        : (!globalFilterModeOptions ||\n            globalFilterModeOptions.includes(filterOption.option)) &&\n            ['contains', 'fuzzy', 'startsWith'].includes(filterOption.option)), []);\n    const handleSelectFilterMode = (option) => {\n        var _a, _b;\n        const prevFilterMode = (_a = columnDef === null || columnDef === void 0 ? void 0 : columnDef._filterFn) !== null && _a !== void 0 ? _a : '';\n        if (!header || !column) {\n            // global filter mode\n            setGlobalFilterFn(option);\n        }\n        else if (option !== prevFilterMode) {\n            // column filter mode\n            setColumnFilterFns((prev) => (Object.assign(Object.assign({}, prev), { [header.id]: option })));\n            // reset filter value and/or perform new filter render\n            if (emptyModes.includes(option)) {\n                // will now be empty/notEmpty filter mode\n                if (currentFilterValue !== ' ' &&\n                    !emptyModes.includes(prevFilterMode)) {\n                    column.setFilterValue(' ');\n                }\n                else if (currentFilterValue) {\n                    column.setFilterValue(currentFilterValue); // perform new filter render\n                }\n            }\n            else if ((columnDef === null || columnDef === void 0 ? void 0 : columnDef.filterVariant) === 'multi-select' ||\n                arrModes.includes(option)) {\n                // will now be array filter mode\n                if (currentFilterValue instanceof String ||\n                    (currentFilterValue === null || currentFilterValue === void 0 ? void 0 : currentFilterValue.length)) {\n                    column.setFilterValue([]);\n                    setFilterValue === null || setFilterValue === void 0 ? void 0 : setFilterValue([]);\n                }\n                else if (currentFilterValue) {\n                    column.setFilterValue(currentFilterValue); // perform new filter render\n                }\n            }\n            else if (((_b = columnDef === null || columnDef === void 0 ? void 0 : columnDef.filterVariant) === null || _b === void 0 ? void 0 : _b.includes('range')) ||\n                rangeModes.includes(option)) {\n                // will now be range filter mode\n                if (!Array.isArray(currentFilterValue) ||\n                    (!(currentFilterValue === null || currentFilterValue === void 0 ? void 0 : currentFilterValue.every((v) => v === '')) &&\n                        !rangeModes.includes(prevFilterMode))) {\n                    column.setFilterValue(['', '']);\n                    setFilterValue === null || setFilterValue === void 0 ? void 0 : setFilterValue('');\n                }\n                else {\n                    column.setFilterValue(currentFilterValue); // perform new filter render\n                }\n            }\n            else {\n                // will now be single value filter mode\n                if (Array.isArray(currentFilterValue)) {\n                    column.setFilterValue('');\n                    setFilterValue === null || setFilterValue === void 0 ? void 0 : setFilterValue('');\n                }\n                else if (currentFilterValue === ' ' &&\n                    emptyModes.includes(prevFilterMode)) {\n                    column.setFilterValue(undefined);\n                }\n                else {\n                    column.setFilterValue(currentFilterValue); // perform new filter render\n                }\n            }\n        }\n        setAnchorEl(null);\n        onSelect === null || onSelect === void 0 ? void 0 : onSelect();\n    };\n    const filterOption = !!header && columnDef ? columnDef._filterFn : globalFilterFn;\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Menu__WEBPACK_IMPORTED_MODULE_14__[\"default\"], Object.assign({ MenuListProps: {\n            dense: density === 'compact',\n            sx: {\n                backgroundColor: menuBackgroundColor,\n            },\n        }, anchorEl: anchorEl, anchorOrigin: { horizontal: 'right', vertical: 'center' }, disableScrollLock: true, onClose: () => setAnchorEl(null), open: !!anchorEl }, rest, { children: (_e = (header && column && columnDef\n            ? (_d = (_c = columnDef.renderColumnFilterModeMenuItems) === null || _c === void 0 ? void 0 : _c.call(columnDef, {\n                column: column,\n                internalFilterOptions,\n                onSelectFilterMode: handleSelectFilterMode,\n                table,\n            })) !== null && _d !== void 0 ? _d : renderColumnFilterModeMenuItems === null || renderColumnFilterModeMenuItems === void 0 ? void 0 : renderColumnFilterModeMenuItems({\n                column: column,\n                internalFilterOptions,\n                onSelectFilterMode: handleSelectFilterMode,\n                table,\n            })\n            : renderGlobalFilterModeMenuItems === null || renderGlobalFilterModeMenuItems === void 0 ? void 0 : renderGlobalFilterModeMenuItems({\n                internalFilterOptions,\n                onSelectFilterMode: handleSelectFilterMode,\n                table,\n            }))) !== null && _e !== void 0 ? _e : internalFilterOptions.map(({ divider, label, option, symbol }, index) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ActionMenuItem, { divider: divider, icon: symbol, label: label, onClick: () => handleSelectFilterMode(option), selected: option === filterOption, table: table, value: option }, index))) })));\n};\n\nconst MRT_ColumnActionMenu = (_a) => {\n    var _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n    var { anchorEl, header, setAnchorEl, table } = _a, rest = __rest(_a, [\"anchorEl\", \"header\", \"setAnchorEl\", \"table\"]);\n    const { getAllLeafColumns, getState, options: { columnFilterDisplayMode, columnFilterModeOptions, enableColumnFilterModes, enableColumnFilters, enableColumnPinning, enableColumnResizing, enableGrouping, enableHiding, enableSorting, enableSortingRemoval, icons: { ClearAllIcon, DynamicFeedIcon, FilterListIcon, FilterListOffIcon, PushPinIcon, RestartAltIcon, SortIcon, ViewColumnIcon, VisibilityOffIcon, }, localization, mrtTheme: { menuBackgroundColor }, renderColumnActionsMenuItems, }, refs: { filterInputRefs }, setColumnFilterFns, setColumnOrder, setColumnSizingInfo, setShowColumnFilters, } = table;\n    const { column } = header;\n    const { columnDef } = column;\n    const { columnSizing, columnVisibility, density, showColumnFilters } = getState();\n    const columnFilterValue = column.getFilterValue();\n    const [filterMenuAnchorEl, setFilterMenuAnchorEl] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const handleClearSort = () => {\n        column.clearSorting();\n        setAnchorEl(null);\n    };\n    const handleSortAsc = () => {\n        column.toggleSorting(false);\n        setAnchorEl(null);\n    };\n    const handleSortDesc = () => {\n        column.toggleSorting(true);\n        setAnchorEl(null);\n    };\n    const handleResetColumnSize = () => {\n        setColumnSizingInfo((old) => (Object.assign(Object.assign({}, old), { isResizingColumn: false })));\n        column.resetSize();\n        setAnchorEl(null);\n    };\n    const handleHideColumn = () => {\n        column.toggleVisibility(false);\n        setAnchorEl(null);\n    };\n    const handlePinColumn = (pinDirection) => {\n        column.pin(pinDirection);\n        setAnchorEl(null);\n    };\n    const handleGroupByColumn = () => {\n        column.toggleGrouping();\n        setColumnOrder((old) => ['mrt-row-expand', ...old]);\n        setAnchorEl(null);\n    };\n    const handleClearFilter = () => {\n        column.setFilterValue(undefined);\n        setAnchorEl(null);\n        if (['empty', 'notEmpty'].includes(columnDef._filterFn)) {\n            setColumnFilterFns((prev) => {\n                var _a;\n                return (Object.assign(Object.assign({}, prev), { [header.id]: (_a = allowedColumnFilterOptions === null || allowedColumnFilterOptions === void 0 ? void 0 : allowedColumnFilterOptions[0]) !== null && _a !== void 0 ? _a : 'fuzzy' }));\n            });\n        }\n    };\n    const handleFilterByColumn = () => {\n        setShowColumnFilters(true);\n        queueMicrotask(() => { var _a; return (_a = filterInputRefs.current[`${column.id}-0`]) === null || _a === void 0 ? void 0 : _a.focus(); });\n        setAnchorEl(null);\n    };\n    const handleShowAllColumns = () => {\n        getAllLeafColumns()\n            .filter((col) => col.columnDef.enableHiding !== false)\n            .forEach((col) => col.toggleVisibility(true));\n        setAnchorEl(null);\n    };\n    const handleOpenFilterModeMenu = (event) => {\n        event.stopPropagation();\n        setFilterMenuAnchorEl(event.currentTarget);\n    };\n    const isSelectFilter = !!columnDef.filterSelectOptions;\n    const allowedColumnFilterOptions = (_b = columnDef === null || columnDef === void 0 ? void 0 : columnDef.columnFilterModeOptions) !== null && _b !== void 0 ? _b : columnFilterModeOptions;\n    const showFilterModeSubMenu = enableColumnFilterModes &&\n        columnDef.enableColumnFilterModes !== false &&\n        !isSelectFilter &&\n        (allowedColumnFilterOptions === undefined ||\n            !!(allowedColumnFilterOptions === null || allowedColumnFilterOptions === void 0 ? void 0 : allowedColumnFilterOptions.length));\n    const internalColumnMenuItems = [\n        ...(enableSorting && column.getCanSort()\n            ? [\n                enableSortingRemoval !== false && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ActionMenuItem, { icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ClearAllIcon, {}), label: localization.clearSort, onClick: handleClearSort, table: table }, 0)),\n                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ActionMenuItem, { disabled: column.getIsSorted() === 'asc', icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(SortIcon, { style: { transform: 'rotate(180deg) scaleX(-1)' } }), label: (_c = localization.sortByColumnAsc) === null || _c === void 0 ? void 0 : _c.replace('{column}', String(columnDef.header)), onClick: handleSortAsc, table: table }, 1),\n                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ActionMenuItem, { disabled: column.getIsSorted() === 'desc', divider: enableColumnFilters || enableGrouping || enableHiding, icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(SortIcon, {}), label: (_d = localization.sortByColumnDesc) === null || _d === void 0 ? void 0 : _d.replace('{column}', String(columnDef.header)), onClick: handleSortDesc, table: table }, 2),\n            ]\n            : []),\n        ...(enableColumnFilters && column.getCanFilter()\n            ? [\n                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ActionMenuItem, { disabled: !columnFilterValue ||\n                        (Array.isArray(columnFilterValue) &&\n                            !columnFilterValue.filter((value) => value).length), icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(FilterListOffIcon, {}), label: localization.clearFilter, onClick: handleClearFilter, table: table }, 3),\n                columnFilterDisplayMode === 'subheader' && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ActionMenuItem, { disabled: showColumnFilters && !enableColumnFilterModes, divider: enableGrouping || enableHiding, icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(FilterListIcon, {}), label: (_e = localization.filterByColumn) === null || _e === void 0 ? void 0 : _e.replace('{column}', String(columnDef.header)), onClick: showColumnFilters\n                        ? handleOpenFilterModeMenu\n                        : handleFilterByColumn, onOpenSubMenu: showFilterModeSubMenu ? handleOpenFilterModeMenu : undefined, table: table }, 4)),\n                showFilterModeSubMenu && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_FilterOptionMenu, { anchorEl: filterMenuAnchorEl, header: header, onSelect: handleFilterByColumn, setAnchorEl: setFilterMenuAnchorEl, table: table }, 5)),\n            ].filter(Boolean)\n            : []),\n        ...(enableGrouping && column.getCanGroup()\n            ? [\n                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ActionMenuItem, { divider: enableColumnPinning, icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(DynamicFeedIcon, {}), label: (_f = localization[column.getIsGrouped() ? 'ungroupByColumn' : 'groupByColumn']) === null || _f === void 0 ? void 0 : _f.replace('{column}', String(columnDef.header)), onClick: handleGroupByColumn, table: table }, 6),\n            ]\n            : []),\n        ...(enableColumnPinning && column.getCanPin()\n            ? [\n                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ActionMenuItem, { disabled: column.getIsPinned() === 'left' || !column.getCanPin(), icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(PushPinIcon, { style: { transform: 'rotate(90deg)' } }), label: localization.pinToLeft, onClick: () => handlePinColumn('left'), table: table }, 7),\n                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ActionMenuItem, { disabled: column.getIsPinned() === 'right' || !column.getCanPin(), icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(PushPinIcon, { style: { transform: 'rotate(-90deg)' } }), label: localization.pinToRight, onClick: () => handlePinColumn('right'), table: table }, 8),\n                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ActionMenuItem, { disabled: !column.getIsPinned(), divider: enableHiding, icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(PushPinIcon, {}), label: localization.unpin, onClick: () => handlePinColumn(false), table: table }, 9),\n            ]\n            : []),\n        ...(enableColumnResizing && column.getCanResize()\n            ? [\n                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ActionMenuItem, { disabled: !columnSizing[column.id], icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(RestartAltIcon, {}), label: localization.resetColumnSize, onClick: handleResetColumnSize, table: table }, 10),\n            ]\n            : []),\n        ...(enableHiding\n            ? [\n                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ActionMenuItem, { disabled: !column.getCanHide(), icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(VisibilityOffIcon, {}), label: (_g = localization.hideColumn) === null || _g === void 0 ? void 0 : _g.replace('{column}', String(columnDef.header)), onClick: handleHideColumn, table: table }, 11),\n                (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ActionMenuItem, { disabled: !Object.values(columnVisibility).filter((visible) => !visible)\n                        .length, icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ViewColumnIcon, {}), label: (_h = localization.showAllColumns) === null || _h === void 0 ? void 0 : _h.replace('{column}', String(columnDef.header)), onClick: handleShowAllColumns, table: table }, 12),\n            ]\n            : []),\n    ].filter(Boolean);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Menu__WEBPACK_IMPORTED_MODULE_14__[\"default\"], Object.assign({ MenuListProps: {\n            dense: density === 'compact',\n            sx: {\n                backgroundColor: menuBackgroundColor,\n            },\n        }, anchorEl: anchorEl, disableScrollLock: true, onClose: () => setAnchorEl(null), open: !!anchorEl }, rest, { children: (_l = (_k = (_j = columnDef.renderColumnActionsMenuItems) === null || _j === void 0 ? void 0 : _j.call(columnDef, {\n            closeMenu: () => setAnchorEl(null),\n            column,\n            internalColumnMenuItems,\n            table,\n        })) !== null && _k !== void 0 ? _k : renderColumnActionsMenuItems === null || renderColumnActionsMenuItems === void 0 ? void 0 : renderColumnActionsMenuItems({\n            closeMenu: () => setAnchorEl(null),\n            column,\n            internalColumnMenuItems,\n            table,\n        })) !== null && _l !== void 0 ? _l : internalColumnMenuItems })));\n};\n\nconst MRT_TableHeadCellColumnActionsButton = (_a) => {\n    var _b, _c;\n    var { header, table } = _a, rest = __rest(_a, [\"header\", \"table\"]);\n    const { options: { icons: { MoreVertIcon }, localization, muiColumnActionsButtonProps, }, } = table;\n    const { column } = header;\n    const { columnDef } = column;\n    const [anchorEl, setAnchorEl] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const handleClick = (event) => {\n        event.stopPropagation();\n        event.preventDefault();\n        setAnchorEl(event.currentTarget);\n    };\n    const iconButtonProps = Object.assign(Object.assign(Object.assign({}, parseFromValuesOrFunc(muiColumnActionsButtonProps, {\n        column,\n        table,\n    })), parseFromValuesOrFunc(columnDef.muiColumnActionsButtonProps, {\n        column,\n        table,\n    })), rest);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], Object.assign({}, getCommonTooltipProps('top'), { title: (_b = iconButtonProps === null || iconButtonProps === void 0 ? void 0 : iconButtonProps.title) !== null && _b !== void 0 ? _b : localization.columnActions, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_8__[\"default\"], Object.assign({ \"aria-label\": localization.columnActions, onClick: handleClick, size: \"small\" }, iconButtonProps, { sx: (theme) => (Object.assign({ '&:hover': {\n                            opacity: 1,\n                        }, height: '2rem', m: '-8px -4px', opacity: 0.3, transition: 'all 150ms', width: '2rem' }, parseFromValuesOrFunc(iconButtonProps === null || iconButtonProps === void 0 ? void 0 : iconButtonProps.sx, theme))), title: undefined, children: (_c = iconButtonProps === null || iconButtonProps === void 0 ? void 0 : iconButtonProps.children) !== null && _c !== void 0 ? _c : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MoreVertIcon, { style: { transform: 'scale(0.9)' } })) })) })), anchorEl && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ColumnActionMenu, { anchorEl: anchorEl, header: header, setAnchorEl: setAnchorEl, table: table }))] }));\n};\n\nconst MRT_FilterCheckbox = (_a) => {\n    var _b, _c, _d;\n    var { column, table } = _a, rest = __rest(_a, [\"column\", \"table\"]);\n    const { getState, options: { localization, muiFilterCheckboxProps }, } = table;\n    const { density } = getState();\n    const { columnDef } = column;\n    const checkboxProps = Object.assign(Object.assign(Object.assign({}, parseFromValuesOrFunc(muiFilterCheckboxProps, {\n        column,\n        table,\n    })), parseFromValuesOrFunc(columnDef.muiFilterCheckboxProps, {\n        column,\n        table,\n    })), rest);\n    const filterLabel = (_b = localization.filterByColumn) === null || _b === void 0 ? void 0 : _b.replace('{column}', columnDef.header);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], Object.assign({}, getCommonTooltipProps(), { title: (_c = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.title) !== null && _c !== void 0 ? _c : filterLabel, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_FormControlLabel__WEBPACK_IMPORTED_MODULE_63__[\"default\"], { control: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Checkbox__WEBPACK_IMPORTED_MODULE_18__[\"default\"], Object.assign({ checked: column.getFilterValue() === 'true', color: column.getFilterValue() === undefined ? 'default' : 'primary', indeterminate: column.getFilterValue() === undefined, size: density === 'compact' ? 'small' : 'medium' }, checkboxProps, { onChange: (e, checked) => {\n                    var _a;\n                    column.setFilterValue(column.getFilterValue() === undefined\n                        ? 'true'\n                        : column.getFilterValue() === 'true'\n                            ? 'false'\n                            : undefined);\n                    (_a = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.onChange) === null || _a === void 0 ? void 0 : _a.call(checkboxProps, e, checked);\n                }, onClick: (e) => {\n                    var _a;\n                    e.stopPropagation();\n                    (_a = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.onClick) === null || _a === void 0 ? void 0 : _a.call(checkboxProps, e);\n                }, sx: (theme) => (Object.assign({ height: '2.5rem', width: '2.5rem' }, parseFromValuesOrFunc(checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.sx, theme))) })), disableTypography: true, label: (_d = checkboxProps.title) !== null && _d !== void 0 ? _d : filterLabel, sx: { color: 'text.secondary', fontWeight: 'normal', mt: '-4px' }, title: undefined }) })));\n};\n\nconst MRT_FilterTextField = (_a) => {\n    var _b, _c, _d, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;\n    var { header, rangeFilterIndex, table } = _a, rest = __rest(_a, [\"header\", \"rangeFilterIndex\", \"table\"]);\n    const { options: { enableColumnFilterModes, icons: { CloseIcon, FilterListIcon }, localization, manualFiltering, muiFilterAutocompleteProps, muiFilterDatePickerProps, muiFilterDateTimePickerProps, muiFilterTextFieldProps, muiFilterTimePickerProps, }, refs: { filterInputRefs }, setColumnFilterFns, } = table;\n    const { column } = header;\n    const { columnDef } = column;\n    const { filterVariant } = columnDef;\n    const args = { column, rangeFilterIndex, table };\n    const textFieldProps = Object.assign(Object.assign(Object.assign({}, parseFromValuesOrFunc(muiFilterTextFieldProps, args)), parseFromValuesOrFunc(columnDef.muiFilterTextFieldProps, args)), rest);\n    const autocompleteProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiFilterAutocompleteProps, args)), parseFromValuesOrFunc(columnDef.muiFilterAutocompleteProps, args));\n    const datePickerProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiFilterDatePickerProps, args)), parseFromValuesOrFunc(columnDef.muiFilterDatePickerProps, args));\n    const dateTimePickerProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiFilterDateTimePickerProps, args)), parseFromValuesOrFunc(columnDef.muiFilterDateTimePickerProps, args));\n    const timePickerProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiFilterTimePickerProps, args)), parseFromValuesOrFunc(columnDef.muiFilterTimePickerProps, args));\n    const { allowedColumnFilterOptions, currentFilterOption, facetedUniqueValues, isAutocompleteFilter, isDateFilter, isMultiSelectFilter, isRangeFilter, isSelectFilter, isTextboxFilter, } = getColumnFilterInfo({ header, table });\n    const dropdownOptions = useDropdownOptions({ header, table });\n    const filterChipLabel = ['empty', 'notEmpty'].includes(currentFilterOption)\n        ? //@ts-ignore\n            localization[`filter${((_c = (_b = currentFilterOption === null || currentFilterOption === void 0 ? void 0 : currentFilterOption.charAt) === null || _b === void 0 ? void 0 : _b.call(currentFilterOption, 0)) === null || _c === void 0 ? void 0 : _c.toUpperCase()) +\n                (currentFilterOption === null || currentFilterOption === void 0 ? void 0 : currentFilterOption.slice(1))}`]\n        : '';\n    const filterPlaceholder = !isRangeFilter\n        ? (_d = textFieldProps === null || textFieldProps === void 0 ? void 0 : textFieldProps.placeholder) !== null && _d !== void 0 ? _d : (_f = localization.filterByColumn) === null || _f === void 0 ? void 0 : _f.replace('{column}', String(columnDef.header))\n        : rangeFilterIndex === 0\n            ? localization.min\n            : rangeFilterIndex === 1\n                ? localization.max\n                : '';\n    const showChangeModeButton = !!(enableColumnFilterModes &&\n        columnDef.enableColumnFilterModes !== false &&\n        !rangeFilterIndex &&\n        (allowedColumnFilterOptions === undefined ||\n            !!(allowedColumnFilterOptions === null || allowedColumnFilterOptions === void 0 ? void 0 : allowedColumnFilterOptions.length)));\n    const [anchorEl, setAnchorEl] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [filterValue, setFilterValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => {\n        var _a, _b;\n        return isMultiSelectFilter\n            ? column.getFilterValue() || []\n            : isRangeFilter\n                ? ((_a = column.getFilterValue()) === null || _a === void 0 ? void 0 : _a[rangeFilterIndex]) || ''\n                : (_b = column.getFilterValue()) !== null && _b !== void 0 ? _b : '';\n    });\n    const [autocompleteValue, setAutocompleteValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(isAutocompleteFilter ? filterValue : null);\n    const handleChangeDebounced = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((0,_mui_material_utils__WEBPACK_IMPORTED_MODULE_64__[\"default\"])((newValue) => {\n        if (isRangeFilter) {\n            column.setFilterValue((old) => {\n                const newFilterValues = old !== null && old !== void 0 ? old : ['', ''];\n                newFilterValues[rangeFilterIndex] = newValue !== null && newValue !== void 0 ? newValue : undefined;\n                return newFilterValues;\n            });\n        }\n        else {\n            column.setFilterValue(newValue !== null && newValue !== void 0 ? newValue : undefined);\n        }\n    }, isTextboxFilter ? (manualFiltering ? 400 : 200) : 1), []);\n    const handleChange = (newValue) => {\n        setFilterValue(newValue !== null && newValue !== void 0 ? newValue : '');\n        handleChangeDebounced(newValue);\n    };\n    const handleTextFieldChange = (event) => {\n        var _a;\n        const newValue = textFieldProps.type === 'date'\n            ? event.target.valueAsDate\n            : textFieldProps.type === 'number'\n                ? event.target.valueAsNumber\n                : event.target.value;\n        handleChange(newValue);\n        (_a = textFieldProps === null || textFieldProps === void 0 ? void 0 : textFieldProps.onChange) === null || _a === void 0 ? void 0 : _a.call(textFieldProps, event);\n    };\n    const handleAutocompleteChange = (newValue) => {\n        setAutocompleteValue(newValue);\n        handleChange(getValueAndLabel(newValue).value);\n    };\n    const handleClear = () => {\n        if (isMultiSelectFilter) {\n            setFilterValue([]);\n            column.setFilterValue([]);\n        }\n        else if (isRangeFilter) {\n            setFilterValue('');\n            column.setFilterValue((old) => {\n                const newFilterValues = (Array.isArray(old) && old) || ['', ''];\n                newFilterValues[rangeFilterIndex] = undefined;\n                return newFilterValues;\n            });\n        }\n        else {\n            setFilterValue('');\n            column.setFilterValue(undefined);\n        }\n    };\n    const handleClearEmptyFilterChip = () => {\n        setFilterValue('');\n        column.setFilterValue(undefined);\n        setColumnFilterFns((prev) => {\n            var _a;\n            return (Object.assign(Object.assign({}, prev), { [header.id]: (_a = allowedColumnFilterOptions === null || allowedColumnFilterOptions === void 0 ? void 0 : allowedColumnFilterOptions[0]) !== null && _a !== void 0 ? _a : 'fuzzy' }));\n        });\n    };\n    const handleFilterMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const isMounted = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        if (isMounted.current) {\n            const filterValue = column.getFilterValue();\n            if (filterValue === undefined) {\n                handleClear();\n            }\n            else if (isRangeFilter && rangeFilterIndex !== undefined) {\n                setFilterValue(filterValue[rangeFilterIndex]);\n            }\n            else {\n                setFilterValue(filterValue);\n            }\n        }\n        isMounted.current = true;\n    }, [column.getFilterValue()]);\n    if (columnDef.Filter) {\n        return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children: (_g = columnDef.Filter) === null || _g === void 0 ? void 0 : _g.call(columnDef, { column, header, rangeFilterIndex, table }) }));\n    }\n    const endAdornment = !isAutocompleteFilter && !isDateFilter && !filterChipLabel ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_InputAdornment__WEBPACK_IMPORTED_MODULE_65__[\"default\"], { position: \"end\", sx: { mr: isSelectFilter || isMultiSelectFilter ? '20px' : undefined }, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { placement: \"right\", title: (_h = localization.clearFilter) !== null && _h !== void 0 ? _h : '', children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\", { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_8__[\"default\"], { \"aria-label\": localization.clearFilter, disabled: !((_j = filterValue === null || filterValue === void 0 ? void 0 : filterValue.toString()) === null || _j === void 0 ? void 0 : _j.length), onClick: handleClear, size: \"small\", sx: {\n                        height: '2rem',\n                        transform: 'scale(0.9)',\n                        width: '2rem',\n                    }, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(CloseIcon, {}) }) }) }) })) : null;\n    const startAdornment = showChangeModeButton ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_InputAdornment__WEBPACK_IMPORTED_MODULE_65__[\"default\"], { position: \"start\", children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { title: localization.changeFilterMode, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\", { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_8__[\"default\"], { \"aria-label\": localization.changeFilterMode, onClick: handleFilterMenuOpen, size: \"small\", sx: { height: '1.75rem', width: '1.75rem' }, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(FilterListIcon, {}) }) }) }), filterChipLabel && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Chip__WEBPACK_IMPORTED_MODULE_66__[\"default\"], { label: filterChipLabel, onDelete: handleClearEmptyFilterChip }))] })) : null;\n    const commonTextFieldProps = Object.assign(Object.assign({ FormHelperTextProps: {\n            sx: {\n                fontSize: '0.75rem',\n                lineHeight: '0.8rem',\n                whiteSpace: 'nowrap',\n            },\n        }, InputProps: endAdornment //hack because mui looks for presence of endAdornment key instead of undefined\n            ? { endAdornment, startAdornment }\n            : { startAdornment }, fullWidth: true, helperText: showChangeModeButton ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"label\", { children: localization.filterMode.replace('{filterType}', \n            // @ts-ignore\n            localization[`filter${((_k = currentFilterOption === null || currentFilterOption === void 0 ? void 0 : currentFilterOption.charAt(0)) === null || _k === void 0 ? void 0 : _k.toUpperCase()) +\n                (currentFilterOption === null || currentFilterOption === void 0 ? void 0 : currentFilterOption.slice(1))}`]) })) : null, inputProps: {\n            'aria-label': filterPlaceholder,\n            autoComplete: 'new-password', // disable autocomplete and autofill\n            disabled: !!filterChipLabel,\n            sx: {\n                textOverflow: 'ellipsis',\n                width: filterChipLabel ? 0 : undefined,\n            },\n            title: filterPlaceholder,\n        }, inputRef: (inputRef) => {\n            filterInputRefs.current[`${column.id}-${rangeFilterIndex !== null && rangeFilterIndex !== void 0 ? rangeFilterIndex : 0}`] =\n                inputRef;\n            if (textFieldProps.inputRef) {\n                textFieldProps.inputRef = inputRef;\n            }\n        }, margin: 'none', placeholder: filterChipLabel || isSelectFilter || isMultiSelectFilter\n            ? undefined\n            : filterPlaceholder, variant: 'standard' }, textFieldProps), { sx: (theme) => (Object.assign({ minWidth: isDateFilter\n                ? '160px'\n                : enableColumnFilterModes && rangeFilterIndex === 0\n                    ? '110px'\n                    : isRangeFilter\n                        ? '100px'\n                        : !filterChipLabel\n                            ? '120px'\n                            : 'auto', mx: '-2px', p: 0, width: 'calc(100% + 4px)' }, parseFromValuesOrFunc(textFieldProps === null || textFieldProps === void 0 ? void 0 : textFieldProps.sx, theme))) });\n    const commonDatePickerProps = {\n        onChange: (newDate) => {\n            handleChange(newDate);\n        },\n        value: filterValue || null,\n    };\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children: [(filterVariant === null || filterVariant === void 0 ? void 0 : filterVariant.startsWith('time')) ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_x_date_pickers_TimePicker__WEBPACK_IMPORTED_MODULE_67__.TimePicker, Object.assign({}, commonDatePickerProps, timePickerProps, { slotProps: {\n                    field: Object.assign({ clearable: true, onClear: () => handleClear() }, (_l = timePickerProps === null || timePickerProps === void 0 ? void 0 : timePickerProps.slotProps) === null || _l === void 0 ? void 0 : _l.field),\n                    textField: Object.assign(Object.assign({}, commonTextFieldProps), (_m = timePickerProps === null || timePickerProps === void 0 ? void 0 : timePickerProps.slotProps) === null || _m === void 0 ? void 0 : _m.textField),\n                } }))) : (filterVariant === null || filterVariant === void 0 ? void 0 : filterVariant.startsWith('datetime')) ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_x_date_pickers_DateTimePicker__WEBPACK_IMPORTED_MODULE_68__.DateTimePicker, Object.assign({}, commonDatePickerProps, dateTimePickerProps, { slotProps: {\n                    field: Object.assign({ clearable: true, onClear: () => handleClear() }, (_o = dateTimePickerProps === null || dateTimePickerProps === void 0 ? void 0 : dateTimePickerProps.slotProps) === null || _o === void 0 ? void 0 : _o.field),\n                    textField: Object.assign(Object.assign({}, commonTextFieldProps), (_p = dateTimePickerProps === null || dateTimePickerProps === void 0 ? void 0 : dateTimePickerProps.slotProps) === null || _p === void 0 ? void 0 : _p.textField),\n                } }))) : (filterVariant === null || filterVariant === void 0 ? void 0 : filterVariant.startsWith('date')) ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_x_date_pickers_DatePicker__WEBPACK_IMPORTED_MODULE_69__.DatePicker, Object.assign({}, commonDatePickerProps, datePickerProps, { slotProps: {\n                    field: Object.assign({ clearable: true, onClear: () => handleClear() }, (_q = datePickerProps === null || datePickerProps === void 0 ? void 0 : datePickerProps.slotProps) === null || _q === void 0 ? void 0 : _q.field),\n                    textField: Object.assign(Object.assign({}, commonTextFieldProps), (_r = datePickerProps === null || datePickerProps === void 0 ? void 0 : datePickerProps.slotProps) === null || _r === void 0 ? void 0 : _r.textField),\n                } }))) : isAutocompleteFilter ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Autocomplete__WEBPACK_IMPORTED_MODULE_70__[\"default\"], Object.assign({ freeSolo: true, getOptionLabel: (option) => getValueAndLabel(option).label, onChange: (_e, newValue) => handleAutocompleteChange(newValue), options: (_s = dropdownOptions === null || dropdownOptions === void 0 ? void 0 : dropdownOptions.map((option) => getValueAndLabel(option))) !== null && _s !== void 0 ? _s : [] }, autocompleteProps, { renderInput: (builtinTextFieldProps) => {\n                    var _a;\n                    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_TextField__WEBPACK_IMPORTED_MODULE_55__[\"default\"], Object.assign({}, builtinTextFieldProps, commonTextFieldProps, { InputProps: Object.assign(Object.assign({}, builtinTextFieldProps.InputProps), { startAdornment: (_a = commonTextFieldProps === null || commonTextFieldProps === void 0 ? void 0 : commonTextFieldProps.InputProps) === null || _a === void 0 ? void 0 : _a.startAdornment }), inputProps: Object.assign(Object.assign({}, builtinTextFieldProps.inputProps), commonTextFieldProps === null || commonTextFieldProps === void 0 ? void 0 : commonTextFieldProps.inputProps), onChange: handleTextFieldChange, onClick: (e) => e.stopPropagation() })));\n                }, value: autocompleteValue }))) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_TextField__WEBPACK_IMPORTED_MODULE_55__[\"default\"], Object.assign({ select: isSelectFilter || isMultiSelectFilter }, commonTextFieldProps, { SelectProps: Object.assign({ MenuProps: { disableScrollLock: true }, displayEmpty: true, multiple: isMultiSelectFilter, renderValue: isMultiSelectFilter\n                        ? (selected) => !(selected === null || selected === void 0 ? void 0 : selected.length) ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { sx: { opacity: 0.5 }, children: filterPlaceholder })) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { sx: { display: 'flex', flexWrap: 'wrap', gap: '2px' }, children: selected === null || selected === void 0 ? void 0 : selected.map((value) => {\n                                const selectedValue = dropdownOptions === null || dropdownOptions === void 0 ? void 0 : dropdownOptions.find((option) => getValueAndLabel(option).value === value);\n                                return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Chip__WEBPACK_IMPORTED_MODULE_66__[\"default\"], { label: getValueAndLabel(selectedValue).label }, value));\n                            }) }))\n                        : undefined }, commonTextFieldProps.SelectProps), onChange: handleTextFieldChange, onClick: (e) => e.stopPropagation(), value: filterValue !== null && filterValue !== void 0 ? filterValue : '', children: (isSelectFilter || isMultiSelectFilter) && [\n                    (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_12__[\"default\"], { disabled: true, divider: true, hidden: true, value: \"\", children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { sx: { opacity: 0.5 }, children: filterPlaceholder }) }, \"p\"),\n                    ...[\n                        (_t = textFieldProps.children) !== null && _t !== void 0 ? _t : dropdownOptions === null || dropdownOptions === void 0 ? void 0 : dropdownOptions.map((option, index) => {\n                            var _a;\n                            const { label, value } = getValueAndLabel(option);\n                            return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_12__[\"default\"], { sx: {\n                                    alignItems: 'center',\n                                    display: 'flex',\n                                    gap: '0.5rem',\n                                    m: 0,\n                                }, value: value, children: [isMultiSelectFilter && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Checkbox__WEBPACK_IMPORTED_MODULE_18__[\"default\"], { checked: ((_a = column.getFilterValue()) !== null && _a !== void 0 ? _a : []).includes(value), sx: { mr: '0.5rem' } })), label, ' ', !columnDef.filterSelectOptions &&\n                                        `(${facetedUniqueValues.get(value)})`] }, `${index}-${value}`));\n                        }),\n                    ],\n                ] }))), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_FilterOptionMenu, { anchorEl: anchorEl, header: header, setAnchorEl: setAnchorEl, setFilterValue: setFilterValue, table: table })] }));\n};\n\nconst MRT_FilterRangeFields = (_a) => {\n    var { header, table } = _a, rest = __rest(_a, [\"header\", \"table\"]);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], Object.assign({}, rest, { sx: (theme) => (Object.assign({ display: 'grid', gap: '1rem', gridTemplateColumns: '1fr 1fr' }, parseFromValuesOrFunc(rest === null || rest === void 0 ? void 0 : rest.sx, theme))), children: [0, 1].map((rangeFilterIndex) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_FilterTextField, { header: header, rangeFilterIndex: rangeFilterIndex, table: table }, rangeFilterIndex))) })));\n};\n\nconst MRT_FilterRangeSlider = (_a) => {\n    var _b, _c;\n    var { header, table } = _a, rest = __rest(_a, [\"header\", \"table\"]);\n    const { options: { enableColumnFilterModes, localization, muiFilterSliderProps }, refs: { filterInputRefs }, } = table;\n    const { column } = header;\n    const { columnDef } = column;\n    const currentFilterOption = columnDef._filterFn;\n    const showChangeModeButton = enableColumnFilterModes && columnDef.enableColumnFilterModes !== false;\n    const sliderProps = Object.assign(Object.assign(Object.assign({}, parseFromValuesOrFunc(muiFilterSliderProps, { column, table })), parseFromValuesOrFunc(columnDef.muiFilterSliderProps, { column, table })), rest);\n    let [min, max] = sliderProps.min !== undefined && sliderProps.max !== undefined\n        ? [sliderProps.min, sliderProps.max]\n        : (_b = column.getFacetedMinMaxValues()) !== null && _b !== void 0 ? _b : [0, 1];\n    //fix potential TanStack Table bugs where min or max is an array\n    if (Array.isArray(min))\n        min = min[0];\n    if (Array.isArray(max))\n        max = max[0];\n    if (min === null)\n        min = 0;\n    if (max === null)\n        max = 1;\n    const [filterValues, setFilterValues] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([min, max]);\n    const columnFilterValue = column.getFilterValue();\n    const isMounted = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        if (isMounted.current) {\n            if (columnFilterValue === undefined) {\n                setFilterValues([min, max]);\n            }\n            else if (Array.isArray(columnFilterValue)) {\n                setFilterValues(columnFilterValue);\n            }\n        }\n        isMounted.current = true;\n    }, [columnFilterValue, min, max]);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_Stack__WEBPACK_IMPORTED_MODULE_16__[\"default\"], { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Slider__WEBPACK_IMPORTED_MODULE_71__[\"default\"], Object.assign({ disableSwap: true, max: max, min: min, onChange: (_event, values) => {\n                    setFilterValues(values);\n                }, onChangeCommitted: (_event, value) => {\n                    if (Array.isArray(value)) {\n                        if (value[0] <= min && value[1] >= max) {\n                            //if the user has selected the entire range, remove the filter\n                            column.setFilterValue(undefined);\n                        }\n                        else {\n                            column.setFilterValue(value);\n                        }\n                    }\n                }, value: filterValues, valueLabelDisplay: \"auto\" }, sliderProps, { slotProps: {\n                    input: {\n                        ref: (node) => {\n                            var _a, _b;\n                            if (node) {\n                                filterInputRefs.current[`${column.id}-0`] = node;\n                                // @ts-ignore\n                                if ((_b = (_a = sliderProps === null || sliderProps === void 0 ? void 0 : sliderProps.slotProps) === null || _a === void 0 ? void 0 : _a.input) === null || _b === void 0 ? void 0 : _b.ref) {\n                                    //@ts-ignore\n                                    sliderProps.slotProps.input.ref = node;\n                                }\n                            }\n                        },\n                    },\n                }, sx: (theme) => (Object.assign({ m: 'auto', minWidth: `${column.getSize() - 50}px`, mt: !showChangeModeButton ? '10px' : '6px', px: '4px', width: 'calc(100% - 8px)' }, parseFromValuesOrFunc(sliderProps === null || sliderProps === void 0 ? void 0 : sliderProps.sx, theme))) })), showChangeModeButton ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_FormHelperText__WEBPACK_IMPORTED_MODULE_72__[\"default\"], { sx: {\n                    fontSize: '0.75rem',\n                    lineHeight: '0.8rem',\n                    m: '-3px -6px',\n                    whiteSpace: 'nowrap',\n                }, children: localization.filterMode.replace('{filterType}', \n                // @ts-ignore\n                localization[`filter${((_c = currentFilterOption === null || currentFilterOption === void 0 ? void 0 : currentFilterOption.charAt(0)) === null || _c === void 0 ? void 0 : _c.toUpperCase()) +\n                    (currentFilterOption === null || currentFilterOption === void 0 ? void 0 : currentFilterOption.slice(1))}`]) })) : null] }));\n};\n\nconst MRT_TableHeadCellFilterContainer = (_a) => {\n    var { header, table } = _a, rest = __rest(_a, [\"header\", \"table\"]);\n    const { getState, options: { columnFilterDisplayMode }, } = table;\n    const { showColumnFilters } = getState();\n    const { column } = header;\n    const { columnDef } = column;\n    const { isRangeFilter } = getColumnFilterInfo({ header, table });\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Collapse__WEBPACK_IMPORTED_MODULE_59__[\"default\"], Object.assign({ in: showColumnFilters || columnFilterDisplayMode === 'popover', mountOnEnter: true, unmountOnExit: true }, rest, { children: columnDef.filterVariant === 'checkbox' ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_FilterCheckbox, { column: column, table: table })) : columnDef.filterVariant === 'range-slider' ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_FilterRangeSlider, { header: header, table: table })) : isRangeFilter ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_FilterRangeFields, { header: header, table: table })) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_FilterTextField, { header: header, table: table })) })));\n};\n\nconst MRT_TableHeadCellFilterLabel = (_a) => {\n    var _b, _c;\n    var { header, table } = _a, rest = __rest(_a, [\"header\", \"table\"]);\n    const { options: { columnFilterDisplayMode, icons: { FilterAltIcon }, localization, }, refs: { filterInputRefs }, setShowColumnFilters, } = table;\n    const { column } = header;\n    const { columnDef } = column;\n    const filterValue = column.getFilterValue();\n    const [anchorEl, setAnchorEl] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const { currentFilterOption, isMultiSelectFilter, isRangeFilter, isSelectFilter, } = getColumnFilterInfo({ header, table });\n    const dropdownOptions = useDropdownOptions({ header, table });\n    const getSelectLabel = (index) => getValueAndLabel(dropdownOptions === null || dropdownOptions === void 0 ? void 0 : dropdownOptions.find((option) => getValueAndLabel(option).value ===\n        (index !== undefined ? filterValue[index] : filterValue))).label;\n    const isFilterActive = (Array.isArray(filterValue) && filterValue.some(Boolean)) ||\n        (!!filterValue && !Array.isArray(filterValue));\n    const filterTooltip = columnFilterDisplayMode === 'popover' && !isFilterActive\n        ? (_b = localization.filterByColumn) === null || _b === void 0 ? void 0 : _b.replace('{column}', String(columnDef.header))\n        : localization.filteringByColumn\n            .replace('{column}', String(columnDef.header))\n            .replace('{filterType}', currentFilterOption\n            ? // @ts-ignore\n                localization[`filter${((_c = currentFilterOption === null || currentFilterOption === void 0 ? void 0 : currentFilterOption.charAt(0)) === null || _c === void 0 ? void 0 : _c.toUpperCase()) +\n                    (currentFilterOption === null || currentFilterOption === void 0 ? void 0 : currentFilterOption.slice(1))}`]\n            : '')\n            .replace('{filterValue}', `\"${Array.isArray(filterValue)\n            ? filterValue\n                .map((value, index) => isMultiSelectFilter ? getSelectLabel(index) : value)\n                .join(`\" ${isRangeFilter ? localization.and : localization.or} \"`)\n            : isSelectFilter\n                ? getSelectLabel()\n                : filterValue}\"`)\n            .replace('\" \"', '');\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Grow__WEBPACK_IMPORTED_MODULE_73__[\"default\"], { in: columnFilterDisplayMode === 'popover' ||\n                    (!!filterValue && !isRangeFilter) ||\n                    (isRangeFilter && // @ts-ignore\n                        (!!(filterValue === null || filterValue === void 0 ? void 0 : filterValue[0]) || !!(filterValue === null || filterValue === void 0 ? void 0 : filterValue[1]))), unmountOnExit: true, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { component: \"span\", sx: { flex: '0 0' }, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { placement: \"top\", title: filterTooltip, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_8__[\"default\"], Object.assign({ disableRipple: true, onClick: (event) => {\n                                if (columnFilterDisplayMode === 'popover') {\n                                    setAnchorEl(event.currentTarget);\n                                }\n                                else {\n                                    setShowColumnFilters(true);\n                                }\n                                queueMicrotask(() => {\n                                    var _a, _b, _c, _d;\n                                    (_b = (_a = filterInputRefs.current[`${column.id}-0`]) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n                                    (_d = (_c = filterInputRefs.current[`${column.id}-0`]) === null || _c === void 0 ? void 0 : _c.select) === null || _d === void 0 ? void 0 : _d.call(_c);\n                                });\n                                event.stopPropagation();\n                            }, size: \"small\" }, rest, { sx: (theme) => (Object.assign({ height: '16px', ml: '4px', opacity: isFilterActive ? 1 : 0.3, p: '8px', transform: 'scale(0.75)', transition: 'all 150ms ease-in-out', width: '16px' }, parseFromValuesOrFunc(rest === null || rest === void 0 ? void 0 : rest.sx, theme))), children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(FilterAltIcon, {}) })) }) }) }), columnFilterDisplayMode === 'popover' && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Popover__WEBPACK_IMPORTED_MODULE_74__[\"default\"], { anchorEl: anchorEl, anchorOrigin: {\n                    horizontal: 'center',\n                    vertical: 'top',\n                }, disableScrollLock: true, onClick: (event) => event.stopPropagation(), onClose: (event) => {\n                    //@ts-ignore\n                    event.stopPropagation();\n                    setAnchorEl(null);\n                }, onKeyDown: (event) => event.key === 'Enter' && setAnchorEl(null), open: !!anchorEl, slotProps: { paper: { sx: { overflow: 'visible' } } }, transformOrigin: {\n                    horizontal: 'center',\n                    vertical: 'bottom',\n                }, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { sx: { p: '1rem' }, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_TableHeadCellFilterContainer, { header: header, table: table }) }) }))] }));\n};\n\nconst MRT_TableHeadCellGrabHandle = (_a) => {\n    var { column, table, tableHeadCellRef } = _a, rest = __rest(_a, [\"column\", \"table\", \"tableHeadCellRef\"]);\n    const { getState, options: { enableColumnOrdering, muiColumnDragHandleProps }, setColumnOrder, setDraggingColumn, setHoveredColumn, } = table;\n    const { columnDef } = column;\n    const { columnOrder, draggingColumn, hoveredColumn } = getState();\n    const iconButtonProps = Object.assign(Object.assign(Object.assign({}, parseFromValuesOrFunc(muiColumnDragHandleProps, { column, table })), parseFromValuesOrFunc(columnDef.muiColumnDragHandleProps, {\n        column,\n        table,\n    })), rest);\n    const handleDragStart = (event) => {\n        var _a;\n        (_a = iconButtonProps === null || iconButtonProps === void 0 ? void 0 : iconButtonProps.onDragStart) === null || _a === void 0 ? void 0 : _a.call(iconButtonProps, event);\n        setDraggingColumn(column);\n        try {\n            event.dataTransfer.setDragImage(tableHeadCellRef.current, 0, 0);\n        }\n        catch (e) {\n            console.error(e);\n        }\n    };\n    const handleDragEnd = (event) => {\n        var _a;\n        (_a = iconButtonProps === null || iconButtonProps === void 0 ? void 0 : iconButtonProps.onDragEnd) === null || _a === void 0 ? void 0 : _a.call(iconButtonProps, event);\n        if ((hoveredColumn === null || hoveredColumn === void 0 ? void 0 : hoveredColumn.id) === 'drop-zone') {\n            column.toggleGrouping();\n        }\n        else if (enableColumnOrdering &&\n            hoveredColumn &&\n            (hoveredColumn === null || hoveredColumn === void 0 ? void 0 : hoveredColumn.id) !== (draggingColumn === null || draggingColumn === void 0 ? void 0 : draggingColumn.id)) {\n            setColumnOrder(reorderColumn(column, hoveredColumn, columnOrder));\n        }\n        setDraggingColumn(null);\n        setHoveredColumn(null);\n    };\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_GrabHandleButton, Object.assign({}, iconButtonProps, { onDragEnd: handleDragEnd, onDragStart: handleDragStart, table: table })));\n};\n\nconst MRT_TableHeadCellResizeHandle = (_a) => {\n    var _b;\n    var { header, table } = _a, rest = __rest(_a, [\"header\", \"table\"]);\n    const { getState, options: { columnResizeDirection, columnResizeMode }, setColumnSizingInfo, } = table;\n    const { density } = getState();\n    const { column } = header;\n    const handler = header.getResizeHandler();\n    const mx = density === 'compact'\n        ? '-8px'\n        : density === 'comfortable'\n            ? '-16px'\n            : '-24px';\n    const lr = column.columnDef.columnDefType === 'display' ? '4px' : '0';\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { className: \"Mui-TableHeadCell-ResizeHandle-Wrapper\", onDoubleClick: () => {\n            setColumnSizingInfo((old) => (Object.assign(Object.assign({}, old), { isResizingColumn: false })));\n            column.resetSize();\n        }, onMouseDown: handler, onTouchStart: handler, style: {\n            transform: column.getIsResizing() && columnResizeMode === 'onEnd'\n                ? `translateX(${(columnResizeDirection === 'rtl' ? -1 : 1) *\n                    ((_b = getState().columnSizingInfo.deltaOffset) !== null && _b !== void 0 ? _b : 0)}px)`\n                : undefined,\n        }, sx: (theme) => ({\n            '&:active > hr': {\n                backgroundColor: theme.palette.info.main,\n                opacity: header.subHeaders.length || columnResizeMode === 'onEnd' ? 1 : 0,\n            },\n            cursor: 'col-resize',\n            left: columnResizeDirection === 'rtl' ? lr : undefined,\n            ml: columnResizeDirection === 'rtl' ? mx : undefined,\n            mr: columnResizeDirection === 'ltr' ? mx : undefined,\n            position: 'absolute',\n            px: '4px',\n            right: columnResizeDirection === 'ltr' ? lr : undefined,\n        }), children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Divider__WEBPACK_IMPORTED_MODULE_75__[\"default\"], { className: \"Mui-TableHeadCell-ResizeHandle-Divider\", flexItem: true, orientation: \"vertical\", sx: (theme) => (Object.assign({ borderRadius: '2px', borderWidth: '2px', height: '24px', touchAction: 'none', transform: 'translateX(4px)', transition: column.getIsResizing()\n                    ? undefined\n                    : 'all 150ms ease-in-out', userSelect: 'none', zIndex: 4 }, parseFromValuesOrFunc(rest === null || rest === void 0 ? void 0 : rest.sx, theme))) }) }));\n};\n\nconst MRT_TableHeadCellSortLabel = (_a) => {\n    var { header, table } = _a, rest = __rest(_a, [\"header\", \"table\"]);\n    const { getState, options: { icons: { ArrowDownwardIcon, SyncAltIcon }, localization, }, } = table;\n    const { column } = header;\n    const { columnDef } = column;\n    const { isLoading, showSkeletons, sorting } = getState();\n    const isSorted = !!column.getIsSorted();\n    const sortTooltip = isLoading || showSkeletons\n        ? ''\n        : column.getIsSorted()\n            ? column.getIsSorted() === 'desc'\n                ? localization.sortedByColumnDesc.replace('{column}', columnDef.header)\n                : localization.sortedByColumnAsc.replace('{column}', columnDef.header)\n            : column.getNextSortingOrder() === 'desc'\n                ? localization.sortByColumnDesc.replace('{column}', columnDef.header)\n                : localization.sortByColumnAsc.replace('{column}', columnDef.header);\n    const direction = isSorted\n        ? column.getIsSorted()\n        : undefined;\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { placement: \"top\", title: sortTooltip, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Badge__WEBPACK_IMPORTED_MODULE_76__[\"default\"], { badgeContent: sorting.length > 1 ? column.getSortIndex() + 1 : 0, overlap: \"circular\", children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_TableSortLabel__WEBPACK_IMPORTED_MODULE_77__[\"default\"], Object.assign({ IconComponent: !isSorted\n                    ? (props) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(SyncAltIcon, Object.assign({}, props, { direction: direction, style: {\n                            transform: 'rotate(-90deg) scaleX(0.9) translateX(-1px)',\n                        } })))\n                    : ArrowDownwardIcon, active: true, \"aria-label\": sortTooltip, direction: direction, onClick: (e) => {\n                    var _a;\n                    e.stopPropagation();\n                    (_a = header.column.getToggleSortingHandler()) === null || _a === void 0 ? void 0 : _a(e);\n                } }, rest, { sx: (theme) => (Object.assign({ '.MuiTableSortLabel-icon': {\n                        color: `${theme.palette.mode === 'dark'\n                            ? theme.palette.text.primary\n                            : theme.palette.text.secondary} !important`,\n                    }, flex: '0 0', opacity: isSorted ? 1 : 0.3, transition: 'all 150ms ease-in-out', width: '3ch' }, parseFromValuesOrFunc(rest === null || rest === void 0 ? void 0 : rest.sx, theme))) })) }) }));\n};\n\nconst MRT_TableHeadCell = (_a) => {\n    var _b, _c, _d, _f, _g, _h;\n    var { columnVirtualizer, header, staticColumnIndex, table } = _a, rest = __rest(_a, [\"columnVirtualizer\", \"header\", \"staticColumnIndex\", \"table\"]);\n    const theme = (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_15__[\"default\"])();\n    const { getState, options: { columnFilterDisplayMode, columnResizeDirection, columnResizeMode, enableColumnActions, enableColumnDragging, enableColumnOrdering, enableColumnPinning, enableGrouping, enableMultiSort, layoutMode, mrtTheme: { draggingBorderColor }, muiTableHeadCellProps, }, refs: { tableHeadCellRefs }, setHoveredColumn, } = table;\n    const { columnSizingInfo, density, draggingColumn, grouping, hoveredColumn, showColumnFilters, } = getState();\n    const { column } = header;\n    const { columnDef } = column;\n    const { columnDefType } = columnDef;\n    const tableCellProps = Object.assign(Object.assign(Object.assign({}, parseFromValuesOrFunc(muiTableHeadCellProps, { column, table })), parseFromValuesOrFunc(columnDef.muiTableHeadCellProps, {\n        column,\n        table,\n    })), rest);\n    const isColumnPinned = enableColumnPinning &&\n        columnDef.columnDefType !== 'group' &&\n        column.getIsPinned();\n    const showColumnActions = (enableColumnActions || columnDef.enableColumnActions) &&\n        columnDef.enableColumnActions !== false;\n    const showDragHandle = enableColumnDragging !== false &&\n        columnDef.enableColumnDragging !== false &&\n        (enableColumnDragging ||\n            (enableColumnOrdering && columnDef.enableColumnOrdering !== false) ||\n            (enableGrouping &&\n                columnDef.enableGrouping !== false &&\n                !grouping.includes(column.id)));\n    const headerPL = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        let pl = 0;\n        if (column.getCanSort())\n            pl += 1;\n        if (showColumnActions)\n            pl += 1.75;\n        if (showDragHandle)\n            pl += 1.5;\n        return pl;\n    }, [showColumnActions, showDragHandle]);\n    const draggingBorders = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        const showResizeBorder = columnSizingInfo.isResizingColumn === column.id &&\n            columnResizeMode === 'onChange' &&\n            !header.subHeaders.length;\n        const borderStyle = showResizeBorder\n            ? `2px solid ${draggingBorderColor} !important`\n            : (draggingColumn === null || draggingColumn === void 0 ? void 0 : draggingColumn.id) === column.id\n                ? `1px dashed ${theme.palette.grey[500]}`\n                : (hoveredColumn === null || hoveredColumn === void 0 ? void 0 : hoveredColumn.id) === column.id\n                    ? `2px dashed ${draggingBorderColor}`\n                    : undefined;\n        if (showResizeBorder) {\n            return columnResizeDirection === 'ltr'\n                ? { borderRight: borderStyle }\n                : { borderLeft: borderStyle };\n        }\n        const draggingBorders = borderStyle\n            ? {\n                borderLeft: borderStyle,\n                borderRight: borderStyle,\n                borderTop: borderStyle,\n            }\n            : undefined;\n        return draggingBorders;\n    }, [draggingColumn, hoveredColumn, columnSizingInfo.isResizingColumn]);\n    const handleDragEnter = (_e) => {\n        if (enableGrouping && (hoveredColumn === null || hoveredColumn === void 0 ? void 0 : hoveredColumn.id) === 'drop-zone') {\n            setHoveredColumn(null);\n        }\n        if (enableColumnOrdering && draggingColumn && columnDefType !== 'group') {\n            setHoveredColumn(columnDef.enableColumnOrdering !== false ? column : null);\n        }\n    };\n    const handleDragOver = (e) => {\n        if (columnDef.enableColumnOrdering !== false) {\n            e.preventDefault();\n        }\n    };\n    const HeaderElement = (_b = parseFromValuesOrFunc(columnDef.Header, {\n        column,\n        header,\n        table,\n    })) !== null && _b !== void 0 ? _b : columnDef.header;\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_TableCell__WEBPACK_IMPORTED_MODULE_56__[\"default\"], Object.assign({ align: columnDefType === 'group'\n            ? 'center'\n            : theme.direction === 'rtl'\n                ? 'right'\n                : 'left', colSpan: header.colSpan, \"data-index\": staticColumnIndex, \"data-pinned\": !!isColumnPinned || undefined, onDragEnter: handleDragEnter, onDragOver: handleDragOver, ref: (node) => {\n            var _a;\n            if (node) {\n                tableHeadCellRefs.current[column.id] = node;\n                if (columnDefType !== 'group') {\n                    (_a = columnVirtualizer === null || columnVirtualizer === void 0 ? void 0 : columnVirtualizer.measureElement) === null || _a === void 0 ? void 0 : _a.call(columnVirtualizer, node);\n                }\n            }\n        } }, tableCellProps, { sx: (theme) => (Object.assign(Object.assign({ '& :hover': {\n                '.MuiButtonBase-root': {\n                    opacity: 1,\n                },\n            }, flexDirection: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'column' : undefined, fontWeight: 'bold', overflow: 'visible', p: density === 'compact'\n                ? '0.5rem'\n                : density === 'comfortable'\n                    ? columnDefType === 'display'\n                        ? '0.75rem'\n                        : '1rem'\n                    : columnDefType === 'display'\n                        ? '1rem 1.25rem'\n                        : '1.5rem', pb: columnDefType === 'display'\n                ? 0\n                : showColumnFilters || density === 'compact'\n                    ? '0.4rem'\n                    : '0.6rem', pt: columnDefType === 'group' || density === 'compact'\n                ? '0.25rem'\n                : density === 'comfortable'\n                    ? '.75rem'\n                    : '1.25rem', userSelect: enableMultiSort && column.getCanSort() ? 'none' : undefined, verticalAlign: 'top' }, getCommonMRTCellStyles({\n            column,\n            header,\n            table,\n            tableCellProps,\n            theme,\n        })), draggingBorders)), children: [header.isPlaceholder\n                ? null\n                : (_c = tableCellProps.children) !== null && _c !== void 0 ? _c : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { className: \"Mui-TableHeadCell-Content\", sx: {\n                        alignItems: 'center',\n                        display: 'flex',\n                        flexDirection: (tableCellProps === null || tableCellProps === void 0 ? void 0 : tableCellProps.align) === 'right' ? 'row-reverse' : 'row',\n                        justifyContent: columnDefType === 'group' ||\n                            (tableCellProps === null || tableCellProps === void 0 ? void 0 : tableCellProps.align) === 'center'\n                            ? 'center'\n                            : column.getCanResize()\n                                ? 'space-between'\n                                : 'flex-start',\n                        position: 'relative',\n                        width: '100%',\n                    }, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { className: \"Mui-TableHeadCell-Content-Labels\", onClick: column.getToggleSortingHandler(), sx: {\n                                alignItems: 'center',\n                                cursor: column.getCanSort() && columnDefType !== 'group'\n                                    ? 'pointer'\n                                    : undefined,\n                                display: 'flex',\n                                flexDirection: (tableCellProps === null || tableCellProps === void 0 ? void 0 : tableCellProps.align) === 'right' ? 'row-reverse' : 'row',\n                                overflow: columnDefType === 'data' ? 'hidden' : undefined,\n                                pl: (tableCellProps === null || tableCellProps === void 0 ? void 0 : tableCellProps.align) === 'center'\n                                    ? `${headerPL}rem`\n                                    : undefined,\n                            }, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { className: \"Mui-TableHeadCell-Content-Wrapper\", sx: {\n                                        '&:hover': {\n                                            textOverflow: 'clip',\n                                        },\n                                        minWidth: `${Math.min((_f = (_d = columnDef.header) === null || _d === void 0 ? void 0 : _d.length) !== null && _f !== void 0 ? _f : 0, 4)}ch`,\n                                        overflow: columnDefType === 'data' ? 'hidden' : undefined,\n                                        textOverflow: 'ellipsis',\n                                        whiteSpace: ((_h = (_g = columnDef.header) === null || _g === void 0 ? void 0 : _g.length) !== null && _h !== void 0 ? _h : 0) < 20\n                                            ? 'nowrap'\n                                            : 'normal',\n                                    }, children: HeaderElement }), column.getCanFilter() && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_TableHeadCellFilterLabel, { header: header, table: table })), column.getCanSort() && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_TableHeadCellSortLabel, { header: header, table: table }))] }), columnDefType !== 'group' && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { className: \"Mui-TableHeadCell-Content-Actions\", sx: {\n                                whiteSpace: 'nowrap',\n                            }, children: [showDragHandle && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_TableHeadCellGrabHandle, { column: column, table: table, tableHeadCellRef: {\n                                        current: tableHeadCellRefs.current[column.id],\n                                    } })), showColumnActions && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_TableHeadCellColumnActionsButton, { header: header, table: table }))] })), column.getCanResize() && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_TableHeadCellResizeHandle, { header: header, table: table }))] })), columnFilterDisplayMode === 'subheader' && column.getCanFilter() && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_TableHeadCellFilterContainer, { header: header, table: table }))] })));\n};\n\nconst MRT_TableHeadRow = (_a) => {\n    var { columnVirtualizer, headerGroup, table } = _a, rest = __rest(_a, [\"columnVirtualizer\", \"headerGroup\", \"table\"]);\n    const { options: { enableStickyHeader, layoutMode, mrtTheme: { baseBackgroundColor }, muiTableHeadRowProps, }, } = table;\n    const { virtualColumns, virtualPaddingLeft, virtualPaddingRight } = columnVirtualizer !== null && columnVirtualizer !== void 0 ? columnVirtualizer : {};\n    const tableRowProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiTableHeadRowProps, {\n        headerGroup,\n        table,\n    })), rest);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_TableRow__WEBPACK_IMPORTED_MODULE_58__[\"default\"], Object.assign({}, tableRowProps, { sx: (theme) => (Object.assign({ backgroundColor: baseBackgroundColor, boxShadow: `4px 0 8px ${(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_11__.alpha)(theme.palette.common.black, 0.1)}`, display: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'flex' : undefined, position: enableStickyHeader && layoutMode === 'semantic'\n                ? 'sticky'\n                : 'relative', top: 0 }, parseFromValuesOrFunc(tableRowProps === null || tableRowProps === void 0 ? void 0 : tableRowProps.sx, theme))), children: [virtualPaddingLeft ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"th\", { style: { display: 'flex', width: virtualPaddingLeft } })) : null, (virtualColumns !== null && virtualColumns !== void 0 ? virtualColumns : headerGroup.headers).map((headerOrVirtualHeader, staticColumnIndex) => {\n                let header = headerOrVirtualHeader;\n                if (columnVirtualizer) {\n                    staticColumnIndex = headerOrVirtualHeader\n                        .index;\n                    header = headerGroup.headers[staticColumnIndex];\n                }\n                return header ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_TableHeadCell, { columnVirtualizer: columnVirtualizer, header: header, staticColumnIndex: staticColumnIndex, table: table }, header.id)) : null;\n            }), virtualPaddingRight ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"th\", { style: { display: 'flex', width: virtualPaddingRight } })) : null] })));\n};\n\nconst MRT_ToolbarAlertBanner = (_a) => {\n    var _b, _c, _d;\n    var { stackAlertBanner, table } = _a, rest = __rest(_a, [\"stackAlertBanner\", \"table\"]);\n    const { getFilteredSelectedRowModel, getPrePaginationRowModel, getState, options: { enableRowSelection, enableSelectAll, localization, manualPagination, muiToolbarAlertBannerChipProps, muiToolbarAlertBannerProps, positionToolbarAlertBanner, renderToolbarAlertBannerContent, rowCount, }, refs: { tablePaperRef }, } = table;\n    const { density, grouping, rowSelection, showAlertBanner } = getState();\n    const alertProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiToolbarAlertBannerProps, {\n        table,\n    })), rest);\n    const chipProps = parseFromValuesOrFunc(muiToolbarAlertBannerChipProps, {\n        table,\n    });\n    const totalRowCount = rowCount !== null && rowCount !== void 0 ? rowCount : getPrePaginationRowModel().flatRows.length;\n    const selectedRowCount = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => manualPagination\n        ? Object.values(rowSelection).filter(Boolean).length\n        : getFilteredSelectedRowModel().rows.length, [rowSelection, totalRowCount, manualPagination]);\n    const selectedAlert = selectedRowCount > 0 ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_Stack__WEBPACK_IMPORTED_MODULE_16__[\"default\"], { alignItems: \"center\", direction: \"row\", gap: \"16px\", children: [(_c = (_b = localization.selectedCountOfRowCountRowsSelected) === null || _b === void 0 ? void 0 : _b.replace('{selectedCount}', selectedRowCount.toLocaleString())) === null || _c === void 0 ? void 0 : _c.replace('{rowCount}', totalRowCount.toString()), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Button__WEBPACK_IMPORTED_MODULE_10__[\"default\"], { onClick: (event) => getMRT_SelectAllHandler({ table })(event, false, true), size: \"small\", sx: { p: '2px' }, children: localization.clearSelection })] })) : null;\n    const groupedAlert = grouping.length > 0 ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(\"span\", { children: [localization.groupedBy, ' ', grouping.map((columnId, index) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [index > 0 ? localization.thenBy : '', (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Chip__WEBPACK_IMPORTED_MODULE_66__[\"default\"], Object.assign({ label: table.getColumn(columnId).columnDef.header, onDelete: () => table.getColumn(columnId).toggleGrouping() }, chipProps))] }, `${index}-${columnId}`)))] })) : null;\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Collapse__WEBPACK_IMPORTED_MODULE_59__[\"default\"], { in: showAlertBanner || !!selectedAlert || !!groupedAlert, timeout: stackAlertBanner ? 200 : 0, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Alert__WEBPACK_IMPORTED_MODULE_78__[\"default\"], Object.assign({ color: \"info\", icon: false }, alertProps, { sx: (theme) => {\n                var _a, _b;\n                return (Object.assign({ '& .MuiAlert-message': {\n                        maxWidth: `calc(${(_b = (_a = tablePaperRef.current) === null || _a === void 0 ? void 0 : _a.clientWidth) !== null && _b !== void 0 ? _b : 360}px - 1rem)`,\n                        width: '100%',\n                    }, borderRadius: 0, fontSize: '1rem', left: 0, mb: stackAlertBanner\n                        ? 0\n                        : positionToolbarAlertBanner === 'bottom'\n                            ? '-1rem'\n                            : undefined, p: 0, position: 'relative', right: 0, top: 0, width: '100%', zIndex: 2 }, parseFromValuesOrFunc(alertProps === null || alertProps === void 0 ? void 0 : alertProps.sx, theme)));\n            }, children: (_d = renderToolbarAlertBannerContent === null || renderToolbarAlertBannerContent === void 0 ? void 0 : renderToolbarAlertBannerContent({\n                groupedAlert,\n                selectedAlert,\n                table,\n            })) !== null && _d !== void 0 ? _d : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children: [(alertProps === null || alertProps === void 0 ? void 0 : alertProps.title) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_AlertTitle__WEBPACK_IMPORTED_MODULE_79__[\"default\"], { children: alertProps.title }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_Stack__WEBPACK_IMPORTED_MODULE_16__[\"default\"], { sx: {\n                            p: positionToolbarAlertBanner !== 'head-overlay'\n                                ? '0.5rem 1rem'\n                                : density === 'spacious'\n                                    ? '0.75rem 1.25rem'\n                                    : density === 'comfortable'\n                                        ? '0.5rem 0.75rem'\n                                        : '0.25rem 0.5rem',\n                        }, children: [alertProps === null || alertProps === void 0 ? void 0 : alertProps.children, (alertProps === null || alertProps === void 0 ? void 0 : alertProps.children) && (selectedAlert || groupedAlert) && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"br\", {})), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { sx: { display: 'flex' }, children: [enableRowSelection &&\n                                        enableSelectAll &&\n                                        positionToolbarAlertBanner === 'head-overlay' && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_SelectCheckbox, { table: table })), ' ', selectedAlert] }), selectedAlert && groupedAlert && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"br\", {}), groupedAlert] })] })) })) }));\n};\n\nconst MRT_TableHead = (_a) => {\n    var { columnVirtualizer, table } = _a, rest = __rest(_a, [\"columnVirtualizer\", \"table\"]);\n    const { getState, options: { enableStickyHeader, layoutMode, muiTableHeadProps, positionToolbarAlertBanner, }, refs: { tableHeadRef }, } = table;\n    const { isFullScreen, showAlertBanner } = getState();\n    const tableHeadProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiTableHeadProps, { table })), rest);\n    const stickyHeader = enableStickyHeader || isFullScreen;\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_TableHead__WEBPACK_IMPORTED_MODULE_80__[\"default\"], Object.assign({}, tableHeadProps, { ref: (ref) => {\n            tableHeadRef.current = ref;\n            if (tableHeadProps === null || tableHeadProps === void 0 ? void 0 : tableHeadProps.ref) {\n                // @ts-ignore\n                tableHeadProps.ref.current = ref;\n            }\n        }, sx: (theme) => (Object.assign({ display: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'grid' : undefined, opacity: 0.97, position: stickyHeader ? 'sticky' : 'relative', top: stickyHeader && (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 0 : undefined, zIndex: stickyHeader ? 2 : undefined }, parseFromValuesOrFunc(tableHeadProps === null || tableHeadProps === void 0 ? void 0 : tableHeadProps.sx, theme))), children: positionToolbarAlertBanner === 'head-overlay' &&\n            (showAlertBanner || table.getSelectedRowModel().rows.length > 0) ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"tr\", { style: {\n                display: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'grid' : undefined,\n            }, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"th\", { colSpan: table.getVisibleLeafColumns().length, style: {\n                    display: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'grid' : undefined,\n                    padding: 0,\n                }, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ToolbarAlertBanner, { table: table }) }) })) : (table\n            .getHeaderGroups()\n            .map((headerGroup) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_TableHeadRow, { columnVirtualizer: columnVirtualizer, headerGroup: headerGroup, table: table }, headerGroup.id)))) })));\n};\n\nconst MRT_Table = (_a) => {\n    var { table } = _a, rest = __rest(_a, [\"table\"]);\n    const { getFlatHeaders, getState, options: { columns, enableStickyHeader, enableTableFooter, enableTableHead, layoutMode, memoMode, muiTableProps, renderCaption, }, } = table;\n    const { columnSizing, columnSizingInfo, columnVisibility, isFullScreen } = getState();\n    const tableProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiTableProps, { table })), rest);\n    const Caption = parseFromValuesOrFunc(renderCaption, { table });\n    const columnSizeVars = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        const headers = getFlatHeaders();\n        const colSizes = {};\n        for (let i = 0; i < headers.length; i++) {\n            const header = headers[i];\n            const colSize = header.getSize();\n            colSizes[`--header-${parseCSSVarId(header.id)}-size`] = colSize;\n            colSizes[`--col-${parseCSSVarId(header.column.id)}-size`] = colSize;\n        }\n        return colSizes;\n    }, [columns, columnSizing, columnSizingInfo, columnVisibility]);\n    const columnVirtualizer = useMRT_ColumnVirtualizer(table);\n    const commonTableGroupProps = {\n        columnVirtualizer,\n        table,\n    };\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_Table__WEBPACK_IMPORTED_MODULE_81__[\"default\"], Object.assign({ stickyHeader: enableStickyHeader || isFullScreen }, tableProps, { style: Object.assign(Object.assign({}, columnSizeVars), tableProps === null || tableProps === void 0 ? void 0 : tableProps.style), sx: (theme) => (Object.assign({ borderCollapse: 'separate', display: (layoutMode === null || layoutMode === void 0 ? void 0 : layoutMode.startsWith('grid')) ? 'grid' : undefined, position: 'relative' }, parseFromValuesOrFunc(tableProps === null || tableProps === void 0 ? void 0 : tableProps.sx, theme))), children: [!!Caption && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"caption\", { children: Caption }), enableTableHead && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_TableHead, Object.assign({}, commonTableGroupProps)), memoMode === 'table-body' || columnSizingInfo.isResizingColumn ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Memo_MRT_TableBody, Object.assign({}, commonTableGroupProps))) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_TableBody, Object.assign({}, commonTableGroupProps))), enableTableFooter && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_TableFooter, Object.assign({}, commonTableGroupProps))] })));\n};\n\nconst MRT_TableLoadingOverlay = (_a) => {\n    var _b;\n    var { table } = _a, rest = __rest(_a, [\"table\"]);\n    const { options: { localization, mrtTheme: { baseBackgroundColor }, muiCircularProgressProps, }, } = table;\n    const circularProgressProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiCircularProgressProps, { table })), rest);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { sx: {\n            alignItems: 'center',\n            backgroundColor: (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_11__.alpha)(baseBackgroundColor, 0.5),\n            bottom: 0,\n            display: 'flex',\n            justifyContent: 'center',\n            left: 0,\n            maxHeight: '100vh',\n            position: 'absolute',\n            right: 0,\n            top: 0,\n            width: '100%',\n            zIndex: 3,\n        }, children: (_b = circularProgressProps === null || circularProgressProps === void 0 ? void 0 : circularProgressProps.Component) !== null && _b !== void 0 ? _b : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_CircularProgress__WEBPACK_IMPORTED_MODULE_9__[\"default\"], Object.assign({ \"aria-label\": localization.noRecordsToDisplay, id: \"mrt-progress\" }, circularProgressProps))) }));\n};\n\nconst MRT_CellActionMenu = (_a) => {\n    var _b, _c;\n    var { table } = _a, rest = __rest(_a, [\"table\"]);\n    const { getState, options: { editDisplayMode, enableClickToCopy, enableEditing, icons: { ContentCopy, EditIcon }, localization, mrtTheme: { menuBackgroundColor }, renderCellActionMenuItems, }, refs: { actionCellRef }, } = table;\n    const { actionCell, density } = getState();\n    const cell = actionCell;\n    const { row } = cell;\n    const { column } = cell;\n    const { columnDef } = column;\n    const handleClose = (event) => {\n        event === null || event === void 0 ? void 0 : event.stopPropagation();\n        table.setActionCell(null);\n        actionCellRef.current = null;\n    };\n    const internalMenuItems = [\n        (parseFromValuesOrFunc(enableClickToCopy, cell) === 'context-menu' ||\n            parseFromValuesOrFunc(columnDef.enableClickToCopy, cell) ===\n                'context-menu') && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ActionMenuItem, { icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ContentCopy, {}), label: localization.copy, onClick: (event) => {\n                event.stopPropagation();\n                navigator.clipboard.writeText(cell.getValue());\n                handleClose();\n            }, table: table }, 'mrt-copy')),\n        parseFromValuesOrFunc(enableEditing, row) && editDisplayMode === 'cell' && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ActionMenuItem, { icon: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(EditIcon, {}), label: localization.edit, onClick: () => {\n                openEditingCell({ cell, table });\n                handleClose();\n            }, table: table }, 'mrt-edit')),\n    ].filter(Boolean);\n    const renderActionProps = {\n        cell,\n        closeMenu: handleClose,\n        column,\n        internalMenuItems,\n        row,\n        table,\n    };\n    const menuItems = (_c = (_b = columnDef.renderCellActionMenuItems) === null || _b === void 0 ? void 0 : _b.call(columnDef, renderActionProps)) !== null && _c !== void 0 ? _c : renderCellActionMenuItems === null || renderCellActionMenuItems === void 0 ? void 0 : renderCellActionMenuItems(renderActionProps);\n    return ((!!(menuItems === null || menuItems === void 0 ? void 0 : menuItems.length) || !!(internalMenuItems === null || internalMenuItems === void 0 ? void 0 : internalMenuItems.length)) && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Menu__WEBPACK_IMPORTED_MODULE_14__[\"default\"], Object.assign({ MenuListProps: {\n            dense: density === 'compact',\n            sx: {\n                backgroundColor: menuBackgroundColor,\n            },\n        }, anchorEl: actionCellRef.current, disableScrollLock: true, onClick: (event) => event.stopPropagation(), onClose: handleClose, open: !!cell, transformOrigin: { horizontal: -100, vertical: 8 } }, rest, { children: menuItems !== null && menuItems !== void 0 ? menuItems : internalMenuItems }))));\n};\n\nconst MRT_EditRowModal = (_a) => {\n    var _b;\n    var { open, table } = _a, rest = __rest(_a, [\"open\", \"table\"]);\n    const { getState, options: { localization, muiCreateRowModalProps, muiEditRowDialogProps, onCreatingRowCancel, onEditingRowCancel, renderCreateRowDialogContent, renderEditRowDialogContent, }, setCreatingRow, setEditingRow, } = table;\n    const { creatingRow, editingRow } = getState();\n    const row = (creatingRow !== null && creatingRow !== void 0 ? creatingRow : editingRow);\n    const dialogProps = Object.assign(Object.assign(Object.assign({}, parseFromValuesOrFunc(muiEditRowDialogProps, { row, table })), (creatingRow &&\n        parseFromValuesOrFunc(muiCreateRowModalProps, { row, table }))), rest);\n    const internalEditComponents = row\n        .getAllCells()\n        .filter((cell) => cell.column.columnDef.columnDefType === 'data')\n        .map((cell) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_EditCellTextField, { cell: cell, table: table }, cell.id)));\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Dialog__WEBPACK_IMPORTED_MODULE_82__[\"default\"], Object.assign({ fullWidth: true, maxWidth: \"xs\", onClose: (event, reason) => {\n            var _a;\n            if (creatingRow) {\n                onCreatingRowCancel === null || onCreatingRowCancel === void 0 ? void 0 : onCreatingRowCancel({ row, table });\n                setCreatingRow(null);\n            }\n            else {\n                onEditingRowCancel === null || onEditingRowCancel === void 0 ? void 0 : onEditingRowCancel({ row, table });\n                setEditingRow(null);\n            }\n            row._valuesCache = {}; //reset values cache\n            (_a = dialogProps.onClose) === null || _a === void 0 ? void 0 : _a.call(dialogProps, event, reason);\n        }, open: open }, dialogProps, { children: (_b = ((creatingRow &&\n            (renderCreateRowDialogContent === null || renderCreateRowDialogContent === void 0 ? void 0 : renderCreateRowDialogContent({\n                internalEditComponents,\n                row,\n                table,\n            }))) ||\n            (renderEditRowDialogContent === null || renderEditRowDialogContent === void 0 ? void 0 : renderEditRowDialogContent({\n                internalEditComponents,\n                row,\n                table,\n            })))) !== null && _b !== void 0 ? _b : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_DialogTitle__WEBPACK_IMPORTED_MODULE_83__[\"default\"], { sx: { textAlign: 'center' }, children: localization.edit }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_DialogContent__WEBPACK_IMPORTED_MODULE_84__[\"default\"], { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"form\", { onSubmit: (e) => e.preventDefault(), children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Stack__WEBPACK_IMPORTED_MODULE_16__[\"default\"], { sx: {\n                                gap: '32px',\n                                paddingTop: '16px',\n                                width: '100%',\n                            }, children: internalEditComponents }) }) }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_DialogActions__WEBPACK_IMPORTED_MODULE_85__[\"default\"], { sx: { p: '1.25rem' }, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_EditActionButtons, { row: row, table: table, variant: \"text\" }) })] })) })));\n};\n\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__.useEffect;\nconst MRT_TableContainer = (_a) => {\n    var { table } = _a, rest = __rest(_a, [\"table\"]);\n    const { getState, options: { createDisplayMode, editDisplayMode, enableCellActions, enableStickyHeader, muiTableContainerProps, }, refs: { bottomToolbarRef, tableContainerRef, topToolbarRef }, } = table;\n    const { actionCell, creatingRow, editingRow, isFullScreen, isLoading, showLoadingOverlay, } = getState();\n    const loading = showLoadingOverlay !== false && (isLoading || showLoadingOverlay);\n    const [totalToolbarHeight, setTotalToolbarHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n    const tableContainerProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiTableContainerProps, {\n        table,\n    })), rest);\n    useIsomorphicLayoutEffect(() => {\n        var _a, _b, _c, _d;\n        const topToolbarHeight = typeof document !== 'undefined'\n            ? (_b = (_a = topToolbarRef.current) === null || _a === void 0 ? void 0 : _a.offsetHeight) !== null && _b !== void 0 ? _b : 0\n            : 0;\n        const bottomToolbarHeight = typeof document !== 'undefined'\n            ? (_d = (_c = bottomToolbarRef === null || bottomToolbarRef === void 0 ? void 0 : bottomToolbarRef.current) === null || _c === void 0 ? void 0 : _c.offsetHeight) !== null && _d !== void 0 ? _d : 0\n            : 0;\n        setTotalToolbarHeight(topToolbarHeight + bottomToolbarHeight);\n    });\n    const createModalOpen = createDisplayMode === 'modal' && creatingRow;\n    const editModalOpen = editDisplayMode === 'modal' && editingRow;\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_TableContainer__WEBPACK_IMPORTED_MODULE_86__[\"default\"], Object.assign({ \"aria-busy\": loading, \"aria-describedby\": loading ? 'mrt-progress' : undefined }, tableContainerProps, { ref: (node) => {\n            if (node) {\n                tableContainerRef.current = node;\n                if (tableContainerProps === null || tableContainerProps === void 0 ? void 0 : tableContainerProps.ref) {\n                    //@ts-ignore\n                    tableContainerProps.ref.current = node;\n                }\n            }\n        }, style: Object.assign({ maxHeight: isFullScreen\n                ? `calc(100vh - ${totalToolbarHeight}px)`\n                : undefined }, tableContainerProps === null || tableContainerProps === void 0 ? void 0 : tableContainerProps.style), sx: (theme) => (Object.assign({ maxHeight: enableStickyHeader\n                ? `clamp(350px, calc(100vh - ${totalToolbarHeight}px), 9999px)`\n                : undefined, maxWidth: '100%', overflow: 'auto', position: 'relative' }, parseFromValuesOrFunc(tableContainerProps === null || tableContainerProps === void 0 ? void 0 : tableContainerProps.sx, theme))), children: [loading ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_TableLoadingOverlay, { table: table }) : null, (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_Table, { table: table }), (createModalOpen || editModalOpen) && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_EditRowModal, { open: true, table: table })), enableCellActions && actionCell && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_CellActionMenu, { table: table })] })));\n};\n\nconst MRT_LinearProgressBar = (_a) => {\n    var { isTopToolbar, table } = _a, rest = __rest(_a, [\"isTopToolbar\", \"table\"]);\n    const { getState, options: { muiLinearProgressProps }, } = table;\n    const { isSaving, showProgressBars } = getState();\n    const linearProgressProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiLinearProgressProps, {\n        isTopToolbar,\n        table,\n    })), rest);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Collapse__WEBPACK_IMPORTED_MODULE_59__[\"default\"], { in: showProgressBars !== false && (showProgressBars || isSaving), mountOnEnter: true, sx: {\n            bottom: isTopToolbar ? 0 : undefined,\n            position: 'absolute',\n            top: !isTopToolbar ? 0 : undefined,\n            width: '100%',\n        }, unmountOnExit: true, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_LinearProgress__WEBPACK_IMPORTED_MODULE_87__[\"default\"], Object.assign({ \"aria-busy\": \"true\", \"aria-label\": \"Loading\", sx: { position: 'relative' } }, linearProgressProps)) }));\n};\n\nconst defaultRowsPerPage = [5, 10, 15, 20, 25, 30, 50, 100];\nconst MRT_TablePagination = (_a) => {\n    var { position = 'bottom', table } = _a, rest = __rest(_a, [\"position\", \"table\"]);\n    const theme = (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_15__[\"default\"])();\n    const isMobile = (0,_mui_material_useMediaQuery__WEBPACK_IMPORTED_MODULE_88__[\"default\"])('(max-width: 720px)');\n    const { getState, options: { enableToolbarInternalActions, icons: { ChevronLeftIcon, ChevronRightIcon, FirstPageIcon, LastPageIcon }, localization, muiPaginationProps, paginationDisplayMode, }, } = table;\n    const { pagination: { pageIndex = 0, pageSize = 10 }, showGlobalFilter, } = getState();\n    const paginationProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiPaginationProps, {\n        table,\n    })), rest);\n    const totalRowCount = table.getRowCount();\n    const numberOfPages = table.getPageCount();\n    const showFirstLastPageButtons = numberOfPages > 2;\n    const firstRowIndex = pageIndex * pageSize;\n    const lastRowIndex = Math.min(pageIndex * pageSize + pageSize, totalRowCount);\n    const _b = paginationProps !== null && paginationProps !== void 0 ? paginationProps : {}, { SelectProps = {}, disabled = false, rowsPerPageOptions = defaultRowsPerPage, showFirstButton = showFirstLastPageButtons, showLastButton = showFirstLastPageButtons, showRowsPerPage = true } = _b, restPaginationProps = __rest(_b, [\"SelectProps\", \"disabled\", \"rowsPerPageOptions\", \"showFirstButton\", \"showLastButton\", \"showRowsPerPage\"]);\n    const disableBack = pageIndex <= 0 || disabled;\n    const disableNext = lastRowIndex >= totalRowCount || disabled;\n    if (isMobile && (SelectProps === null || SelectProps === void 0 ? void 0 : SelectProps.native) !== false) {\n        SelectProps.native = true;\n    }\n    const tooltipProps = getCommonTooltipProps();\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { className: \"MuiTablePagination-root\", sx: {\n            alignItems: 'center',\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: '8px',\n            justifyContent: { md: 'space-between', sm: 'center' },\n            justifySelf: 'flex-end',\n            mt: position === 'top' &&\n                enableToolbarInternalActions &&\n                !showGlobalFilter\n                ? '3rem'\n                : undefined,\n            position: 'relative',\n            px: '8px',\n            py: '12px',\n            zIndex: 2,\n        }, children: [showRowsPerPage && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { sx: { alignItems: 'center', display: 'flex', gap: '8px' }, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_InputLabel__WEBPACK_IMPORTED_MODULE_89__[\"default\"], { htmlFor: \"mrt-rows-per-page\", sx: { mb: 0 }, children: localization.rowsPerPage }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Select__WEBPACK_IMPORTED_MODULE_90__[\"default\"], Object.assign({ MenuProps: { disableScrollLock: true }, disableUnderline: true, disabled: disabled, inputProps: {\n                            'aria-label': localization.rowsPerPage,\n                            id: 'mrt-rows-per-page',\n                        }, label: localization.rowsPerPage, onChange: (event) => table.setPageSize(+event.target.value), sx: { mb: 0 }, value: pageSize, variant: \"standard\" }, SelectProps, { children: rowsPerPageOptions.map((option) => {\n                            var _a;\n                            const value = typeof option !== 'number' ? option.value : option;\n                            const label = typeof option !== 'number' ? option.label : `${option}`;\n                            return ((_a = SelectProps === null || SelectProps === void 0 ? void 0 : SelectProps.children) !== null && _a !== void 0 ? _a : ((SelectProps === null || SelectProps === void 0 ? void 0 : SelectProps.native) ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"option\", { value: value, children: label }, value)) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_12__[\"default\"], { sx: { m: 0 }, value: value, children: label }, value))));\n                        }) }))] })), paginationDisplayMode === 'pages' ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Pagination__WEBPACK_IMPORTED_MODULE_91__[\"default\"], Object.assign({ count: numberOfPages, disabled: disabled, onChange: (_e, newPageIndex) => table.setPageIndex(newPageIndex - 1), page: pageIndex + 1, renderItem: (item) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_PaginationItem__WEBPACK_IMPORTED_MODULE_92__[\"default\"], Object.assign({ slots: {\n                        first: FirstPageIcon,\n                        last: LastPageIcon,\n                        next: ChevronRightIcon,\n                        previous: ChevronLeftIcon,\n                    } }, item))), showFirstButton: showFirstButton, showLastButton: showLastButton }, restPaginationProps))) : paginationDisplayMode === 'default' ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Typography__WEBPACK_IMPORTED_MODULE_61__[\"default\"], { align: \"center\", component: \"span\", sx: { m: '0 4px', minWidth: '8ch' }, variant: \"body2\", children: `${lastRowIndex === 0 ? 0 : (firstRowIndex + 1).toLocaleString()}-${lastRowIndex.toLocaleString()} ${localization.of} ${totalRowCount.toLocaleString()}` }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { gap: \"xs\", children: [showFirstButton && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], Object.assign({}, tooltipProps, { title: localization.goToFirstPage, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\", { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_8__[\"default\"], { \"aria-label\": localization.goToFirstPage, disabled: disableBack, onClick: () => table.firstPage(), size: \"small\", children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(FirstPageIcon, Object.assign({}, flipIconStyles(theme))) }) }) }))), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], Object.assign({}, tooltipProps, { title: localization.goToPreviousPage, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\", { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_8__[\"default\"], { \"aria-label\": localization.goToPreviousPage, disabled: disableBack, onClick: () => table.previousPage(), size: \"small\", children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ChevronLeftIcon, Object.assign({}, flipIconStyles(theme))) }) }) })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], Object.assign({}, tooltipProps, { title: localization.goToNextPage, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\", { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_8__[\"default\"], { \"aria-label\": localization.goToNextPage, disabled: disableNext, onClick: () => table.nextPage(), size: \"small\", children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ChevronRightIcon, Object.assign({}, flipIconStyles(theme))) }) }) })), showLastButton && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], Object.assign({}, tooltipProps, { title: localization.goToLastPage, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\", { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_8__[\"default\"], { \"aria-label\": localization.goToLastPage, disabled: disableNext, onClick: () => table.lastPage(), size: \"small\", children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(LastPageIcon, Object.assign({}, flipIconStyles(theme))) }) }) })))] })] })) : null] }));\n};\n\nconst MRT_ToolbarDropZone = (_a) => {\n    var _b, _c;\n    var { table } = _a, rest = __rest(_a, [\"table\"]);\n    const { getState, options: { enableGrouping, localization }, setHoveredColumn, setShowToolbarDropZone, } = table;\n    const { draggingColumn, grouping, hoveredColumn, showToolbarDropZone } = getState();\n    const handleDragEnter = (_event) => {\n        setHoveredColumn({ id: 'drop-zone' });\n    };\n    const handleDragOver = (e) => {\n        e.preventDefault();\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        var _a;\n        if (((_a = table.options.state) === null || _a === void 0 ? void 0 : _a.showToolbarDropZone) !== undefined) {\n            setShowToolbarDropZone(!!enableGrouping &&\n                !!draggingColumn &&\n                draggingColumn.columnDef.enableGrouping !== false &&\n                !grouping.includes(draggingColumn.id));\n        }\n    }, [enableGrouping, draggingColumn, grouping]);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Fade__WEBPACK_IMPORTED_MODULE_93__[\"default\"], { in: showToolbarDropZone, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], Object.assign({ className: \"Mui-ToolbarDropZone\", onDragEnter: handleDragEnter, onDragOver: handleDragOver }, rest, { sx: (theme) => (Object.assign({ alignItems: 'center', backdropFilter: 'blur(4px)', backgroundColor: (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_11__.alpha)(theme.palette.info.main, (hoveredColumn === null || hoveredColumn === void 0 ? void 0 : hoveredColumn.id) === 'drop-zone' ? 0.2 : 0.1), border: `dashed ${theme.palette.info.main} 2px`, boxSizing: 'border-box', display: 'flex', height: '100%', justifyContent: 'center', position: 'absolute', width: '100%', zIndex: 4 }, parseFromValuesOrFunc(rest === null || rest === void 0 ? void 0 : rest.sx, theme))), children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Typography__WEBPACK_IMPORTED_MODULE_61__[\"default\"], { fontStyle: \"italic\", children: localization.dropToGroupBy.replace('{column}', (_c = (_b = draggingColumn === null || draggingColumn === void 0 ? void 0 : draggingColumn.columnDef) === null || _b === void 0 ? void 0 : _b.header) !== null && _c !== void 0 ? _c : '') }) })) }));\n};\n\nconst MRT_BottomToolbar = (_a) => {\n    var { table } = _a, rest = __rest(_a, [\"table\"]);\n    const { getState, options: { enablePagination, muiBottomToolbarProps, positionPagination, positionToolbarAlertBanner, positionToolbarDropZone, renderBottomToolbarCustomActions, }, refs: { bottomToolbarRef }, } = table;\n    const { isFullScreen } = getState();\n    const isMobile = (0,_mui_material_useMediaQuery__WEBPACK_IMPORTED_MODULE_88__[\"default\"])('(max-width:720px)');\n    const toolbarProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiBottomToolbarProps, { table })), rest);\n    const stackAlertBanner = isMobile || !!renderBottomToolbarCustomActions;\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], Object.assign({}, toolbarProps, { ref: (node) => {\n            if (node) {\n                bottomToolbarRef.current = node;\n                if (toolbarProps === null || toolbarProps === void 0 ? void 0 : toolbarProps.ref) {\n                    // @ts-ignore\n                    toolbarProps.ref.current = node;\n                }\n            }\n        }, sx: (theme) => (Object.assign(Object.assign(Object.assign({}, getCommonToolbarStyles({ table, theme })), { bottom: isFullScreen ? '0' : undefined, boxShadow: `0 1px 2px -1px ${(0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_11__.alpha)(theme.palette.grey[700], 0.5)} inset`, left: 0, position: isFullScreen ? 'fixed' : 'relative', right: 0 }), parseFromValuesOrFunc(toolbarProps === null || toolbarProps === void 0 ? void 0 : toolbarProps.sx, theme))), children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_LinearProgressBar, { isTopToolbar: false, table: table }), positionToolbarAlertBanner === 'bottom' && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ToolbarAlertBanner, { stackAlertBanner: stackAlertBanner, table: table })), ['both', 'bottom'].includes(positionToolbarDropZone !== null && positionToolbarDropZone !== void 0 ? positionToolbarDropZone : '') && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ToolbarDropZone, { table: table })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { sx: {\n                    alignItems: 'center',\n                    boxSizing: 'border-box',\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    p: '0.5rem',\n                    width: '100%',\n                }, children: [renderBottomToolbarCustomActions ? (renderBottomToolbarCustomActions({ table })) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\", {})), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { sx: {\n                            display: 'flex',\n                            justifyContent: 'flex-end',\n                            position: stackAlertBanner ? 'relative' : 'absolute',\n                            right: 0,\n                            top: 0,\n                        }, children: enablePagination &&\n                            ['both', 'bottom'].includes(positionPagination !== null && positionPagination !== void 0 ? positionPagination : '') && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_TablePagination, { position: \"bottom\", table: table })) })] })] })));\n};\n\nconst MRT_ColumnPinningButtons = (_a) => {\n    var { column, table } = _a, rest = __rest(_a, [\"column\", \"table\"]);\n    const { options: { icons: { PushPinIcon }, localization, }, } = table;\n    const handlePinColumn = (pinDirection) => {\n        column.pin(pinDirection);\n    };\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], Object.assign({}, rest, { sx: (theme) => (Object.assign({ minWidth: '70px', textAlign: 'center' }, parseFromValuesOrFunc(rest === null || rest === void 0 ? void 0 : rest.sx, theme))), children: column.getIsPinned() ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { title: localization.unpin, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_8__[\"default\"], { onClick: () => handlePinColumn(false), size: \"small\", children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(PushPinIcon, {}) }) })) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { title: localization.pinToLeft, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_8__[\"default\"], { onClick: () => handlePinColumn('left'), size: \"small\", children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(PushPinIcon, { style: {\n                                transform: 'rotate(90deg)',\n                            } }) }) }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { title: localization.pinToRight, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_8__[\"default\"], { onClick: () => handlePinColumn('right'), size: \"small\", children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(PushPinIcon, { style: {\n                                transform: 'rotate(-90deg)',\n                            } }) }) })] })) })));\n};\n\nconst MRT_ShowHideColumnsMenuItems = (_a) => {\n    var _b;\n    var { allColumns, column, hoveredColumn, isNestedColumns, setHoveredColumn, table } = _a, rest = __rest(_a, [\"allColumns\", \"column\", \"hoveredColumn\", \"isNestedColumns\", \"setHoveredColumn\", \"table\"]);\n    const { getState, options: { enableColumnOrdering, enableColumnPinning, enableHiding, localization, mrtTheme: { draggingBorderColor }, }, setColumnOrder, } = table;\n    const { columnOrder } = getState();\n    const { columnDef } = column;\n    const { columnDefType } = columnDef;\n    const switchChecked = column.getIsVisible();\n    const handleToggleColumnHidden = (column) => {\n        var _a, _b;\n        if (columnDefType === 'group') {\n            (_b = (_a = column === null || column === void 0 ? void 0 : column.columns) === null || _a === void 0 ? void 0 : _a.forEach) === null || _b === void 0 ? void 0 : _b.call(_a, (childColumn) => {\n                childColumn.toggleVisibility(!switchChecked);\n            });\n        }\n        else {\n            column.toggleVisibility();\n        }\n    };\n    const menuItemRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const [isDragging, setIsDragging] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const handleDragStart = (e) => {\n        setIsDragging(true);\n        try {\n            e.dataTransfer.setDragImage(menuItemRef.current, 0, 0);\n        }\n        catch (e) {\n            console.error(e);\n        }\n    };\n    const handleDragEnd = (_e) => {\n        setIsDragging(false);\n        setHoveredColumn(null);\n        if (hoveredColumn) {\n            setColumnOrder(reorderColumn(column, hoveredColumn, columnOrder));\n        }\n    };\n    const handleDragEnter = (_e) => {\n        if (!isDragging && columnDef.enableColumnOrdering !== false) {\n            setHoveredColumn(column);\n        }\n    };\n    if (!columnDef.header || columnDef.visibleInShowHideMenu === false) {\n        return null;\n    }\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_MenuItem__WEBPACK_IMPORTED_MODULE_12__[\"default\"], Object.assign({ disableRipple: true, onDragEnter: handleDragEnter, ref: menuItemRef }, rest, { sx: (theme) => (Object.assign({ alignItems: 'center', justifyContent: 'flex-start', my: 0, opacity: isDragging ? 0.5 : 1, outline: isDragging\n                        ? `2px dashed ${theme.palette.grey[500]}`\n                        : (hoveredColumn === null || hoveredColumn === void 0 ? void 0 : hoveredColumn.id) === column.id\n                            ? `2px dashed ${draggingBorderColor}`\n                            : 'none', outlineOffset: '-2px', pl: `${(column.depth + 0.5) * 2}rem`, py: '6px' }, parseFromValuesOrFunc(rest === null || rest === void 0 ? void 0 : rest.sx, theme))), children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { sx: {\n                        display: 'flex',\n                        flexWrap: 'nowrap',\n                        gap: '8px',\n                    }, children: [columnDefType !== 'group' &&\n                            enableColumnOrdering &&\n                            !isNestedColumns &&\n                            (columnDef.enableColumnOrdering !== false ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_GrabHandleButton, { onDragEnd: handleDragEnd, onDragStart: handleDragStart, table: table })) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { sx: { width: '28px' } }))), enableColumnPinning &&\n                            (column.getCanPin() ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ColumnPinningButtons, { column: column, table: table })) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { sx: { width: '70px' } }))), enableHiding ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_FormControlLabel__WEBPACK_IMPORTED_MODULE_63__[\"default\"], { checked: switchChecked, componentsProps: {\n                                typography: {\n                                    sx: {\n                                        mb: 0,\n                                        opacity: columnDefType !== 'display' ? 1 : 0.5,\n                                    },\n                                },\n                            }, control: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], Object.assign({}, getCommonTooltipProps(), { title: localization.toggleVisibility, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Switch__WEBPACK_IMPORTED_MODULE_94__[\"default\"], {}) })), disabled: !column.getCanHide(), label: columnDef.header, onChange: () => handleToggleColumnHidden(column) })) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Typography__WEBPACK_IMPORTED_MODULE_61__[\"default\"], { sx: { alignSelf: 'center' }, children: columnDef.header }))] }) })), (_b = column.columns) === null || _b === void 0 ? void 0 : _b.map((c, i) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ShowHideColumnsMenuItems, { allColumns: allColumns, column: c, hoveredColumn: hoveredColumn, isNestedColumns: isNestedColumns, setHoveredColumn: setHoveredColumn, table: table }, `${i}-${c.id}`)))] }));\n};\n\nconst MRT_ShowHideColumnsMenu = (_a) => {\n    var { anchorEl, setAnchorEl, table } = _a, rest = __rest(_a, [\"anchorEl\", \"setAnchorEl\", \"table\"]);\n    const { getAllColumns, getAllLeafColumns, getCenterLeafColumns, getIsAllColumnsVisible, getIsSomeColumnsPinned, getIsSomeColumnsVisible, getLeftLeafColumns, getRightLeafColumns, getState, options: { enableColumnOrdering, enableColumnPinning, enableHiding, localization, mrtTheme: { menuBackgroundColor }, }, } = table;\n    const { columnOrder, columnPinning, density } = getState();\n    const handleToggleAllColumns = (value) => {\n        getAllLeafColumns()\n            .filter((col) => col.columnDef.enableHiding !== false)\n            .forEach((col) => col.toggleVisibility(value));\n    };\n    const allColumns = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n        const columns = getAllColumns();\n        if (columnOrder.length > 0 &&\n            !columns.some((col) => col.columnDef.columnDefType === 'group')) {\n            return [\n                ...getLeftLeafColumns(),\n                ...Array.from(new Set(columnOrder)).map((colId) => getCenterLeafColumns().find((col) => (col === null || col === void 0 ? void 0 : col.id) === colId)),\n                ...getRightLeafColumns(),\n            ].filter(Boolean);\n        }\n        return columns;\n    }, [\n        columnOrder,\n        columnPinning,\n        getAllColumns(),\n        getCenterLeafColumns(),\n        getLeftLeafColumns(),\n        getRightLeafColumns(),\n    ]);\n    const isNestedColumns = allColumns.some((col) => col.columnDef.columnDefType === 'group');\n    const [hoveredColumn, setHoveredColumn] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_Menu__WEBPACK_IMPORTED_MODULE_14__[\"default\"], Object.assign({ MenuListProps: {\n            dense: density === 'compact',\n            sx: {\n                backgroundColor: menuBackgroundColor,\n            },\n        }, anchorEl: anchorEl, disableScrollLock: true, onClose: () => setAnchorEl(null), open: !!anchorEl }, rest, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { sx: {\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    p: '0.5rem',\n                    pt: 0,\n                }, children: [enableHiding && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Button__WEBPACK_IMPORTED_MODULE_10__[\"default\"], { disabled: !getIsSomeColumnsVisible(), onClick: () => handleToggleAllColumns(false), children: localization.hideAll })), enableColumnOrdering && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Button__WEBPACK_IMPORTED_MODULE_10__[\"default\"], { onClick: () => table.setColumnOrder(getDefaultColumnOrderIds(table.options, true)), children: localization.resetOrder })), enableColumnPinning && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Button__WEBPACK_IMPORTED_MODULE_10__[\"default\"], { disabled: !getIsSomeColumnsPinned(), onClick: () => table.resetColumnPinning(true), children: localization.unpinAll })), enableHiding && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Button__WEBPACK_IMPORTED_MODULE_10__[\"default\"], { disabled: getIsAllColumnsVisible(), onClick: () => handleToggleAllColumns(true), children: localization.showAll }))] }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Divider__WEBPACK_IMPORTED_MODULE_75__[\"default\"], {}), allColumns.map((column, index) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ShowHideColumnsMenuItems, { allColumns: allColumns, column: column, hoveredColumn: hoveredColumn, isNestedColumns: isNestedColumns, setHoveredColumn: setHoveredColumn, table: table }, `${index}-${column.id}`)))] })));\n};\n\nconst MRT_ShowHideColumnsButton = (_a) => {\n    var _b;\n    var { table } = _a, rest = __rest(_a, [\"table\"]);\n    const { options: { icons: { ViewColumnIcon }, localization, }, } = table;\n    const [anchorEl, setAnchorEl] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { title: (_b = rest === null || rest === void 0 ? void 0 : rest.title) !== null && _b !== void 0 ? _b : localization.showHideColumns, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_8__[\"default\"], Object.assign({ \"aria-label\": localization.showHideColumns, onClick: handleClick }, rest, { title: undefined, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(ViewColumnIcon, {}) })) }), anchorEl && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ShowHideColumnsMenu, { anchorEl: anchorEl, setAnchorEl: setAnchorEl, table: table }))] }));\n};\n\nconst MRT_ToggleDensePaddingButton = (_a) => {\n    var _b;\n    var { table } = _a, rest = __rest(_a, [\"table\"]);\n    const { getState, options: { icons: { DensityLargeIcon, DensityMediumIcon, DensitySmallIcon }, localization, }, setDensity, } = table;\n    const { density } = getState();\n    const handleToggleDensePadding = () => {\n        const nextDensity = density === 'comfortable'\n            ? 'compact'\n            : density === 'compact'\n                ? 'spacious'\n                : 'comfortable';\n        setDensity(nextDensity);\n    };\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { title: (_b = rest === null || rest === void 0 ? void 0 : rest.title) !== null && _b !== void 0 ? _b : localization.toggleDensity, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_8__[\"default\"], Object.assign({ \"aria-label\": localization.toggleDensity, onClick: handleToggleDensePadding }, rest, { title: undefined, children: density === 'compact' ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(DensitySmallIcon, {})) : density === 'comfortable' ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(DensityMediumIcon, {})) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(DensityLargeIcon, {})) })) }));\n};\n\nconst MRT_ToggleFiltersButton = (_a) => {\n    var _b;\n    var { table } = _a, rest = __rest(_a, [\"table\"]);\n    const { getState, options: { icons: { FilterListIcon, FilterListOffIcon }, localization, }, setShowColumnFilters, } = table;\n    const { showColumnFilters } = getState();\n    const handleToggleShowFilters = () => {\n        setShowColumnFilters(!showColumnFilters);\n    };\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { title: (_b = rest === null || rest === void 0 ? void 0 : rest.title) !== null && _b !== void 0 ? _b : localization.showHideFilters, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_8__[\"default\"], Object.assign({ \"aria-label\": localization.showHideFilters, onClick: handleToggleShowFilters }, rest, { title: undefined, children: showColumnFilters ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(FilterListOffIcon, {}) : (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(FilterListIcon, {}) })) }));\n};\n\nconst MRT_ToggleFullScreenButton = (_a) => {\n    var _b;\n    var { table } = _a, rest = __rest(_a, [\"table\"]);\n    const { getState, options: { icons: { FullscreenExitIcon, FullscreenIcon }, localization, }, setIsFullScreen, } = table;\n    const { isFullScreen } = getState();\n    const [tooltipOpened, setTooltipOpened] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const handleToggleFullScreen = () => {\n        setTooltipOpened(false);\n        setIsFullScreen(!isFullScreen);\n    };\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { open: tooltipOpened, title: (_b = rest === null || rest === void 0 ? void 0 : rest.title) !== null && _b !== void 0 ? _b : localization.toggleFullScreen, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_8__[\"default\"], Object.assign({ \"aria-label\": localization.toggleFullScreen, onClick: handleToggleFullScreen, onMouseEnter: () => setTooltipOpened(true), onMouseLeave: () => setTooltipOpened(false) }, rest, { title: undefined, children: isFullScreen ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(FullscreenExitIcon, {}) : (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(FullscreenIcon, {}) })) }));\n};\n\nconst MRT_ToggleGlobalFilterButton = (_a) => {\n    var _b, _c;\n    var { table } = _a, rest = __rest(_a, [\"table\"]);\n    const { getState, options: { icons: { SearchIcon, SearchOffIcon }, localization, }, refs: { searchInputRef }, setShowGlobalFilter, } = table;\n    const { globalFilter, showGlobalFilter } = getState();\n    const handleToggleSearch = () => {\n        setShowGlobalFilter(!showGlobalFilter);\n        queueMicrotask(() => { var _a; return (_a = searchInputRef.current) === null || _a === void 0 ? void 0 : _a.focus(); });\n    };\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { title: (_b = rest === null || rest === void 0 ? void 0 : rest.title) !== null && _b !== void 0 ? _b : localization.showHideSearch, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_8__[\"default\"], Object.assign({ \"aria-label\": (_c = rest === null || rest === void 0 ? void 0 : rest.title) !== null && _c !== void 0 ? _c : localization.showHideSearch, disabled: !!globalFilter, onClick: handleToggleSearch }, rest, { title: undefined, children: showGlobalFilter ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(SearchOffIcon, {}) : (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(SearchIcon, {}) })) }));\n};\n\nconst MRT_ToolbarInternalButtons = (_a) => {\n    var _b;\n    var { table } = _a, rest = __rest(_a, [\"table\"]);\n    const { options: { columnFilterDisplayMode, enableColumnFilters, enableColumnOrdering, enableColumnPinning, enableDensityToggle, enableFilters, enableFullScreenToggle, enableGlobalFilter, enableHiding, initialState, renderToolbarInternalActions, }, } = table;\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], Object.assign({}, rest, { sx: (theme) => (Object.assign({ alignItems: 'center', display: 'flex', zIndex: 3 }, parseFromValuesOrFunc(rest === null || rest === void 0 ? void 0 : rest.sx, theme))), children: (_b = renderToolbarInternalActions === null || renderToolbarInternalActions === void 0 ? void 0 : renderToolbarInternalActions({\n            table,\n        })) !== null && _b !== void 0 ? _b : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children: [enableFilters &&\n                    enableGlobalFilter &&\n                    !(initialState === null || initialState === void 0 ? void 0 : initialState.showGlobalFilter) && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ToggleGlobalFilterButton, { table: table })), enableFilters &&\n                    enableColumnFilters &&\n                    columnFilterDisplayMode !== 'popover' && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ToggleFiltersButton, { table: table })), (enableHiding || enableColumnOrdering || enableColumnPinning) && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ShowHideColumnsButton, { table: table })), enableDensityToggle && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ToggleDensePaddingButton, { table: table })), enableFullScreenToggle && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ToggleFullScreenButton, { table: table }))] })) })));\n};\n\nconst MRT_GlobalFilterTextField = (_a) => {\n    var _b;\n    var { table } = _a, rest = __rest(_a, [\"table\"]);\n    const { getState, options: { enableGlobalFilterModes, icons: { CloseIcon, SearchIcon }, localization, manualFiltering, muiSearchTextFieldProps, }, refs: { searchInputRef }, setGlobalFilter, } = table;\n    const { globalFilter, showGlobalFilter } = getState();\n    const textFieldProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiSearchTextFieldProps, {\n        table,\n    })), rest);\n    const isMounted = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    const [anchorEl, setAnchorEl] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [searchValue, setSearchValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(globalFilter !== null && globalFilter !== void 0 ? globalFilter : '');\n    const handleChangeDebounced = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((0,_mui_material_utils__WEBPACK_IMPORTED_MODULE_64__[\"default\"])((event) => {\n        var _a;\n        setGlobalFilter((_a = event.target.value) !== null && _a !== void 0 ? _a : undefined);\n    }, manualFiltering ? 500 : 250), []);\n    const handleChange = (event) => {\n        setSearchValue(event.target.value);\n        handleChangeDebounced(event);\n    };\n    const handleGlobalFilterMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClear = () => {\n        setSearchValue('');\n        setGlobalFilter(undefined);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        if (isMounted.current) {\n            if (globalFilter === undefined) {\n                handleClear();\n            }\n            else {\n                setSearchValue(globalFilter);\n            }\n        }\n        isMounted.current = true;\n    }, [globalFilter]);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_Collapse__WEBPACK_IMPORTED_MODULE_59__[\"default\"], { in: showGlobalFilter, mountOnEnter: true, orientation: \"horizontal\", unmountOnExit: true, children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_TextField__WEBPACK_IMPORTED_MODULE_55__[\"default\"], Object.assign({ inputProps: Object.assign({ autoComplete: 'new-password' }, textFieldProps.inputProps), onChange: handleChange, placeholder: localization.search, size: \"small\", value: searchValue !== null && searchValue !== void 0 ? searchValue : '', variant: \"outlined\" }, textFieldProps, { InputProps: Object.assign(Object.assign({ endAdornment: ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_InputAdornment__WEBPACK_IMPORTED_MODULE_65__[\"default\"], { position: \"end\", children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { title: (_b = localization.clearSearch) !== null && _b !== void 0 ? _b : '', children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\", { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_8__[\"default\"], { \"aria-label\": localization.clearSearch, disabled: !(searchValue === null || searchValue === void 0 ? void 0 : searchValue.length), onClick: handleClear, size: \"small\", children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(CloseIcon, {}) }) }) }) })), startAdornment: enableGlobalFilterModes ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_InputAdornment__WEBPACK_IMPORTED_MODULE_65__[\"default\"], { position: \"start\", children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], { title: localization.changeSearchMode, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_8__[\"default\"], { \"aria-label\": localization.changeSearchMode, onClick: handleGlobalFilterMenuOpen, size: \"small\", sx: { height: '1.75rem', width: '1.75rem' }, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(SearchIcon, {}) }) }) })) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(SearchIcon, { style: { marginRight: '4px' } })) }, textFieldProps.InputProps), { sx: (theme) => {\n                        var _a;\n                        return (Object.assign({ mb: 0 }, parseFromValuesOrFunc((_a = textFieldProps === null || textFieldProps === void 0 ? void 0 : textFieldProps.InputProps) === null || _a === void 0 ? void 0 : _a.sx, theme)));\n                    } }), inputRef: (inputRef) => {\n                    searchInputRef.current = inputRef;\n                    if (textFieldProps === null || textFieldProps === void 0 ? void 0 : textFieldProps.inputRef) {\n                        textFieldProps.inputRef = inputRef;\n                    }\n                } })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_FilterOptionMenu, { anchorEl: anchorEl, onSelect: handleClear, setAnchorEl: setAnchorEl, table: table })] }));\n};\n\nconst MRT_TopToolbar = ({ table, }) => {\n    var _a;\n    const { getState, options: { enableGlobalFilter, enablePagination, enableToolbarInternalActions, muiTopToolbarProps, positionGlobalFilter, positionPagination, positionToolbarAlertBanner, positionToolbarDropZone, renderTopToolbarCustomActions, }, refs: { topToolbarRef }, } = table;\n    const { isFullScreen, showGlobalFilter } = getState();\n    const isMobile = (0,_mui_material_useMediaQuery__WEBPACK_IMPORTED_MODULE_88__[\"default\"])('(max-width:720px)');\n    const isTablet = (0,_mui_material_useMediaQuery__WEBPACK_IMPORTED_MODULE_88__[\"default\"])('(max-width:1024px)');\n    const toolbarProps = parseFromValuesOrFunc(muiTopToolbarProps, { table });\n    const stackAlertBanner = isMobile ||\n        !!renderTopToolbarCustomActions ||\n        (showGlobalFilter && isTablet);\n    const globalFilterProps = {\n        sx: !isTablet\n            ? {\n                zIndex: 2,\n            }\n            : undefined,\n        table,\n    };\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], Object.assign({}, toolbarProps, { ref: (ref) => {\n            topToolbarRef.current = ref;\n            if (toolbarProps === null || toolbarProps === void 0 ? void 0 : toolbarProps.ref) {\n                // @ts-ignore\n                toolbarProps.ref.current = ref;\n            }\n        }, sx: (theme) => (Object.assign(Object.assign(Object.assign({}, getCommonToolbarStyles({ table, theme })), { position: isFullScreen ? 'sticky' : 'relative', top: isFullScreen ? '0' : undefined }), parseFromValuesOrFunc(toolbarProps === null || toolbarProps === void 0 ? void 0 : toolbarProps.sx, theme))), children: [positionToolbarAlertBanner === 'top' && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ToolbarAlertBanner, { stackAlertBanner: stackAlertBanner, table: table })), ['both', 'top'].includes(positionToolbarDropZone !== null && positionToolbarDropZone !== void 0 ? positionToolbarDropZone : '') && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ToolbarDropZone, { table: table })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { sx: {\n                    alignItems: 'flex-start',\n                    boxSizing: 'border-box',\n                    display: 'flex',\n                    gap: '0.5rem',\n                    justifyContent: 'space-between',\n                    p: '0.5rem',\n                    position: stackAlertBanner ? 'relative' : 'absolute',\n                    right: 0,\n                    top: 0,\n                    width: '100%',\n                }, children: [enableGlobalFilter && positionGlobalFilter === 'left' && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_GlobalFilterTextField, Object.assign({}, globalFilterProps))), (_a = renderTopToolbarCustomActions === null || renderTopToolbarCustomActions === void 0 ? void 0 : renderTopToolbarCustomActions({ table })) !== null && _a !== void 0 ? _a : (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"span\", {}), enableToolbarInternalActions ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_6__[\"default\"], { sx: {\n                            alignItems: 'center',\n                            display: 'flex',\n                            flexWrap: 'wrap-reverse',\n                            gap: '0.5rem',\n                            justifyContent: 'flex-end',\n                        }, children: [enableGlobalFilter && positionGlobalFilter === 'right' && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_GlobalFilterTextField, Object.assign({}, globalFilterProps))), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_ToolbarInternalButtons, { table: table })] })) : (enableGlobalFilter &&\n                        positionGlobalFilter === 'right' && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_GlobalFilterTextField, Object.assign({}, globalFilterProps))))] }), enablePagination &&\n                ['both', 'top'].includes(positionPagination !== null && positionPagination !== void 0 ? positionPagination : '') && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_TablePagination, { position: \"top\", table: table })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_LinearProgressBar, { isTopToolbar: true, table: table })] })));\n};\n\nconst MRT_TablePaper = (_a) => {\n    var _b, _c;\n    var { table } = _a, rest = __rest(_a, [\"table\"]);\n    const { getState, options: { enableBottomToolbar, enableTopToolbar, mrtTheme: { baseBackgroundColor }, muiTablePaperProps, renderBottomToolbar, renderTopToolbar, }, refs: { tablePaperRef }, } = table;\n    const { isFullScreen } = getState();\n    const paperProps = Object.assign(Object.assign({}, parseFromValuesOrFunc(muiTablePaperProps, { table })), rest);\n    const theme = (0,_mui_material_styles__WEBPACK_IMPORTED_MODULE_15__[\"default\"])();\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material_Paper__WEBPACK_IMPORTED_MODULE_95__[\"default\"], Object.assign({ elevation: 2 }, paperProps, { ref: (ref) => {\n            tablePaperRef.current = ref;\n            if (paperProps === null || paperProps === void 0 ? void 0 : paperProps.ref) {\n                //@ts-ignore\n                paperProps.ref.current = ref;\n            }\n        }, style: Object.assign(Object.assign({}, (isFullScreen\n            ? {\n                bottom: 0,\n                height: '100dvh',\n                left: 0,\n                margin: 0,\n                maxHeight: '100dvh',\n                maxWidth: '100dvw',\n                padding: 0,\n                position: 'fixed',\n                right: 0,\n                top: 0,\n                width: '100dvw',\n                zIndex: theme.zIndex.modal,\n            }\n            : {})), paperProps === null || paperProps === void 0 ? void 0 : paperProps.style), sx: (theme) => (Object.assign({ backgroundColor: baseBackgroundColor, backgroundImage: 'unset', overflow: 'hidden', transition: 'all 100ms ease-in-out' }, parseFromValuesOrFunc(paperProps === null || paperProps === void 0 ? void 0 : paperProps.sx, theme))), children: [enableTopToolbar &&\n                ((_b = parseFromValuesOrFunc(renderTopToolbar, { table })) !== null && _b !== void 0 ? _b : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_TopToolbar, { table: table }))), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_TableContainer, { table: table }), enableBottomToolbar &&\n                ((_c = parseFromValuesOrFunc(renderBottomToolbar, { table })) !== null && _c !== void 0 ? _c : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_BottomToolbar, { table: table })))] })));\n};\n\nconst isTableInstanceProp = (props) => props.table !== undefined;\nconst MaterialReactTable = (props) => {\n    let table;\n    if (isTableInstanceProp(props)) {\n        table = props.table;\n    }\n    else {\n        table = useMaterialReactTable(props);\n    }\n    return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MRT_TablePaper, { table: table });\n};\n\n\n//# sourceMappingURL=index.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/material-react-table/dist/index.esm.js\n");

/***/ })

};
;